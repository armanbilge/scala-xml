Index.PACKAGES = {"scala.xml.factory" : [{"name" : "scala.xml.factory.Binder", "shortDescription" : "", "members_class" : [{"label" : "validate", "tail" : "(n: Node): Node", "member" : "scala.xml.factory.Binder.validate", "link" : "scala\/xml\/factory\/Binder.html#validate(n:scala.xml.Node):scala.xml.Node", "kind" : "final def"}, {"label" : "traverse", "tail" : "(n: Node): Unit", "member" : "scala.xml.factory.Binder.traverse", "link" : "scala\/xml\/factory\/Binder.html#traverse(n:scala.xml.Node):Unit", "kind" : "final def"}, {"label" : "text", "tail" : "(pos: Int, txt: String): Text", "member" : "scala.xml.factory.Binder.text", "link" : "scala\/xml\/factory\/Binder.html#text(pos:Int,txt:String):scala.xml.Text", "kind" : "final def"}, {"label" : "entityRef", "tail" : "(pos: Int, n: String): EntityRef", "member" : "scala.xml.factory.Binder.entityRef", "link" : "scala\/xml\/factory\/Binder.html#entityRef(pos:Int,n:String):scala.xml.EntityRef", "kind" : "final def"}, {"label" : "comment", "tail" : "(pos: Int, txt: String): Comment", "member" : "scala.xml.factory.Binder.comment", "link" : "scala\/xml\/factory\/Binder.html#comment(pos:Int,txt:String):scala.xml.Comment", "kind" : "final def"}, {"label" : "procInstr", "tail" : "(pos: Int, target: String, txt: String): ProcInstr", "member" : "scala.xml.factory.Binder.procInstr", "link" : "scala\/xml\/factory\/Binder.html#procInstr(pos:Int,target:String,txt:String):scala.xml.ProcInstr", "kind" : "final def"}, {"label" : "reportSyntaxError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.factory.Binder.reportSyntaxError", "link" : "scala\/xml\/factory\/Binder.html#reportSyntaxError(pos:Int,str:String):Unit", "kind" : "def"}, {"label" : "result", "tail" : ": NodeBuffer", "member" : "scala.xml.factory.Binder.result", "link" : "scala\/xml\/factory\/Binder.html#result:scala.xml.NodeBuffer", "kind" : "var"}, {"member" : "scala.xml.factory.Binder#<init>", "error" : "unsupported entity"}, {"label" : "preserveWS", "tail" : ": Boolean", "member" : "scala.xml.factory.Binder.preserveWS", "link" : "scala\/xml\/factory\/Binder.html#preserveWS:Boolean", "kind" : "val"}, {"label" : "peReference", "tail" : "(name: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.peReference", "link" : "scala\/xml\/factory\/Binder.html#peReference(name:String):Unit", "kind" : "final def"}, {"label" : "notationDecl", "tail" : "(notat: String, extID: ExternalID): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.notationDecl", "link" : "scala\/xml\/factory\/Binder.html#notationDecl(notat:String,extID:scala.xml.dtd.ExternalID):Unit", "kind" : "final def"}, {"label" : "unparsedEntityDecl", "tail" : "(name: String, extID: ExternalID, notat: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.unparsedEntityDecl", "link" : "scala\/xml\/factory\/Binder.html#unparsedEntityDecl(name:String,extID:scala.xml.dtd.ExternalID,notat:String):Unit", "kind" : "final def"}, {"label" : "attListDecl", "tail" : "(name: String, attList: List[AttrDecl]): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.attListDecl", "link" : "scala\/xml\/factory\/Binder.html#attListDecl(name:String,attList:List[scala.xml.dtd.AttrDecl]):Unit", "kind" : "final def"}, {"label" : "elemDecl", "tail" : "(name: String, cmstr: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.elemDecl", "link" : "scala\/xml\/factory\/Binder.html#elemDecl(name:String,cmstr:String):Unit", "kind" : "final def"}, {"label" : "elemEnd", "tail" : "(pos: Int, pre: String, label: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.elemEnd", "link" : "scala\/xml\/factory\/Binder.html#elemEnd(pos:Int,pre:String,label:String):Unit", "kind" : "def"}, {"label" : "elemStart", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.elemStart", "link" : "scala\/xml\/factory\/Binder.html#elemStart(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):Unit", "kind" : "def"}, {"label" : "endDTD", "tail" : "(n: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.endDTD", "link" : "scala\/xml\/factory\/Binder.html#endDTD(n:String):Unit", "kind" : "def"}, {"label" : "isValidating", "tail" : ": Boolean(true)", "member" : "scala.xml.parsing.ValidatingMarkupHandler.isValidating", "link" : "scala\/xml\/factory\/Binder.html#isValidating:Boolean(true)", "kind" : "final val"}, {"label" : "declCurrent", "tail" : ": ElemDecl", "member" : "scala.xml.parsing.ValidatingMarkupHandler.declCurrent", "link" : "scala\/xml\/factory\/Binder.html#declCurrent:scala.xml.dtd.ElemDecl", "kind" : "var"}, {"label" : "declStack", "tail" : ": List[ElemDecl]", "member" : "scala.xml.parsing.ValidatingMarkupHandler.declStack", "link" : "scala\/xml\/factory\/Binder.html#declStack:List[scala.xml.dtd.ElemDecl]", "kind" : "var"}, {"label" : "qCurrent", "tail" : ": Int", "member" : "scala.xml.parsing.ValidatingMarkupHandler.qCurrent", "link" : "scala\/xml\/factory\/Binder.html#qCurrent:Int", "kind" : "var"}, {"label" : "qStack", "tail" : ": List[Int]", "member" : "scala.xml.parsing.ValidatingMarkupHandler.qStack", "link" : "scala\/xml\/factory\/Binder.html#qStack:List[Int]", "kind" : "var"}, {"label" : "rootLabel", "tail" : ": String", "member" : "scala.xml.parsing.ValidatingMarkupHandler.rootLabel", "link" : "scala\/xml\/factory\/Binder.html#rootLabel:String", "kind" : "var"}, {"label" : "log", "tail" : "(msg: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.log", "link" : "scala\/xml\/factory\/Binder.html#log(msg:String):Unit", "kind" : "def"}, {"label" : "parsedEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parsedEntityDecl", "link" : "scala\/xml\/factory\/Binder.html#parsedEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "parameterEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parameterEntityDecl", "link" : "scala\/xml\/factory\/Binder.html#parameterEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "replacementText", "tail" : "(entityName: String): Source", "member" : "scala.xml.parsing.MarkupHandler.replacementText", "link" : "scala\/xml\/factory\/Binder.html#replacementText(entityName:String):scala.io.Source", "kind" : "def"}, {"label" : "lookupElemDecl", "tail" : "(Label: String): ElemDecl", "member" : "scala.xml.parsing.MarkupHandler.lookupElemDecl", "link" : "scala\/xml\/factory\/Binder.html#lookupElemDecl(Label:String):scala.xml.dtd.ElemDecl", "kind" : "def"}, {"label" : "ent", "tail" : ": Map[String, EntityDecl]", "member" : "scala.xml.parsing.MarkupHandler.ent", "link" : "scala\/xml\/factory\/Binder.html#ent:scala.collection.mutable.Map[String,scala.xml.dtd.EntityDecl]", "kind" : "var"}, {"label" : "decls", "tail" : ": List[Decl]", "member" : "scala.xml.parsing.MarkupHandler.decls", "link" : "scala\/xml\/factory\/Binder.html#decls:List[scala.xml.dtd.Decl]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/factory\/Binder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/factory\/Binder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/factory\/Binder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/factory\/Binder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/factory\/Binder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/factory\/Binder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/factory\/Binder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/Binder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/Binder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/Binder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/factory\/Binder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/factory\/Binder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/factory\/Binder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/factory\/Binder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/factory\/Binder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/factory\/Binder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/factory\/Binder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/factory\/Binder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/factory\/Binder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reportValidationError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.reportValidationError", "link" : "scala\/xml\/factory\/Binder.html#reportValidationError(pos:Int,str:String):Unit", "kind" : "abstract def"}, {"label" : "elem", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding, empty: Boolean, args: NodeSeq): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.elem", "link" : "scala\/xml\/factory\/Binder.html#elem(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,empty:Boolean,args:scala.xml.NodeSeq):scala.xml.NodeSeq", "kind" : "abstract def"}], "class" : "scala\/xml\/factory\/Binder.html", "kind" : "class"}, {"name" : "scala.xml.factory.LoggedNodeFactory", "trait" : "scala\/xml\/factory\/LoggedNodeFactory.html", "kind" : "trait", "members_trait" : [{"label" : "log", "tail" : "(msg: String): Unit", "member" : "scala.xml.factory.LoggedNodeFactory.log", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#log(msg:String):Unit", "kind" : "def"}, {"label" : "makeProcInstr", "tail" : "(t: String, s: String): collection.Seq[ProcInstr]", "member" : "scala.xml.factory.LoggedNodeFactory.makeProcInstr", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#makeProcInstr(t:String,s:String):scala.collection.Seq[scala.xml.ProcInstr]", "kind" : "def"}, {"label" : "makeComment", "tail" : "(s: String): collection.Seq[Comment]", "member" : "scala.xml.factory.LoggedNodeFactory.makeComment", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#makeComment(s:String):scala.collection.Seq[scala.xml.Comment]", "kind" : "def"}, {"label" : "makeText", "tail" : "(s: String): Text", "member" : "scala.xml.factory.LoggedNodeFactory.makeText", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#makeText(s:String):scala.xml.Text", "kind" : "def"}, {"label" : "makeNode", "tail" : "(pre: String, label: String, attrSeq: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): A", "member" : "scala.xml.factory.LoggedNodeFactory.makeNode", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#makeNode(pre:String,label:String,attrSeq:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):A", "kind" : "def"}, {"label" : "logCompressLevel", "tail" : ": Int", "member" : "scala.xml.factory.LoggedNodeFactory.logCompressLevel", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#logCompressLevel:Int", "kind" : "val"}, {"label" : "FULL", "tail" : ": Int(2)", "member" : "scala.xml.factory.LoggedNodeFactory.FULL", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#FULL:Int(2)", "kind" : "final val"}, {"label" : "CACHE", "tail" : ": Int(1)", "member" : "scala.xml.factory.LoggedNodeFactory.CACHE", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#CACHE:Int(1)", "kind" : "final val"}, {"label" : "NONE", "tail" : ": Int(0)", "member" : "scala.xml.factory.LoggedNodeFactory.NONE", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#NONE:Int(0)", "kind" : "final val"}, {"label" : "logProcInstr", "tail" : ": Boolean", "member" : "scala.xml.factory.LoggedNodeFactory.logProcInstr", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#logProcInstr:Boolean", "kind" : "val"}, {"label" : "logComment", "tail" : ": Boolean", "member" : "scala.xml.factory.LoggedNodeFactory.logComment", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#logComment:Boolean", "kind" : "val"}, {"label" : "logText", "tail" : ": Boolean", "member" : "scala.xml.factory.LoggedNodeFactory.logText", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#logText:Boolean", "kind" : "val"}, {"label" : "logNode", "tail" : ": Boolean", "member" : "scala.xml.factory.LoggedNodeFactory.logNode", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#logNode:Boolean", "kind" : "val"}, {"label" : "nodeEquals", "tail" : "(n: Node, pre: String, name: String, attrSeq: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): Boolean", "member" : "scala.xml.factory.NodeFactory.nodeEquals", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#nodeEquals(n:scala.xml.Node,pre:String,name:String,attrSeq:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):Boolean", "kind" : "def"}, {"label" : "eqElements", "tail" : "(ch1: collection.Seq[Node], ch2: collection.Seq[Node]): Boolean", "member" : "scala.xml.factory.NodeFactory.eqElements", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#eqElements(ch1:scala.collection.Seq[scala.xml.Node],ch2:scala.collection.Seq[scala.xml.Node]):Boolean", "kind" : "def"}, {"label" : "construct", "tail" : "(hash: Int, old: List[A], pre: String, name: String, attrSeq: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): A", "member" : "scala.xml.factory.NodeFactory.construct", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#construct(hash:Int,old:List[A],pre:String,name:String,attrSeq:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):A", "kind" : "def"}, {"label" : "cache", "tail" : ": HashMap[Int, List[A]]", "member" : "scala.xml.factory.NodeFactory.cache", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#cache:scala.collection.mutable.HashMap[Int,List[A]]", "kind" : "val"}, {"label" : "ignoreProcInstr", "tail" : ": Boolean", "member" : "scala.xml.factory.NodeFactory.ignoreProcInstr", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#ignoreProcInstr:Boolean", "kind" : "val"}, {"label" : "ignoreComments", "tail" : ": Boolean", "member" : "scala.xml.factory.NodeFactory.ignoreComments", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#ignoreComments:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "create", "tail" : "(pre: String, name: String, attrs: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): A", "member" : "scala.xml.factory.NodeFactory.create", "link" : "scala\/xml\/factory\/LoggedNodeFactory.html#create(pre:String,name:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):A", "kind" : "abstract def"}], "shortDescription" : "This class logs what the nodefactory is actually doing."}, {"name" : "scala.xml.factory.NodeFactory", "trait" : "scala\/xml\/factory\/NodeFactory.html", "kind" : "trait", "members_trait" : [{"label" : "makeProcInstr", "tail" : "(t: String, s: String): collection.Seq[ProcInstr]", "member" : "scala.xml.factory.NodeFactory.makeProcInstr", "link" : "scala\/xml\/factory\/NodeFactory.html#makeProcInstr(t:String,s:String):scala.collection.Seq[scala.xml.ProcInstr]", "kind" : "def"}, {"label" : "makeComment", "tail" : "(s: String): collection.Seq[Comment]", "member" : "scala.xml.factory.NodeFactory.makeComment", "link" : "scala\/xml\/factory\/NodeFactory.html#makeComment(s:String):scala.collection.Seq[scala.xml.Comment]", "kind" : "def"}, {"label" : "makeText", "tail" : "(s: String): Text", "member" : "scala.xml.factory.NodeFactory.makeText", "link" : "scala\/xml\/factory\/NodeFactory.html#makeText(s:String):scala.xml.Text", "kind" : "def"}, {"label" : "makeNode", "tail" : "(pre: String, name: String, attrSeq: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): A", "member" : "scala.xml.factory.NodeFactory.makeNode", "link" : "scala\/xml\/factory\/NodeFactory.html#makeNode(pre:String,name:String,attrSeq:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):A", "kind" : "def"}, {"label" : "nodeEquals", "tail" : "(n: Node, pre: String, name: String, attrSeq: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): Boolean", "member" : "scala.xml.factory.NodeFactory.nodeEquals", "link" : "scala\/xml\/factory\/NodeFactory.html#nodeEquals(n:scala.xml.Node,pre:String,name:String,attrSeq:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):Boolean", "kind" : "def"}, {"label" : "eqElements", "tail" : "(ch1: collection.Seq[Node], ch2: collection.Seq[Node]): Boolean", "member" : "scala.xml.factory.NodeFactory.eqElements", "link" : "scala\/xml\/factory\/NodeFactory.html#eqElements(ch1:scala.collection.Seq[scala.xml.Node],ch2:scala.collection.Seq[scala.xml.Node]):Boolean", "kind" : "def"}, {"label" : "construct", "tail" : "(hash: Int, old: List[A], pre: String, name: String, attrSeq: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): A", "member" : "scala.xml.factory.NodeFactory.construct", "link" : "scala\/xml\/factory\/NodeFactory.html#construct(hash:Int,old:List[A],pre:String,name:String,attrSeq:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):A", "kind" : "def"}, {"label" : "cache", "tail" : ": HashMap[Int, List[A]]", "member" : "scala.xml.factory.NodeFactory.cache", "link" : "scala\/xml\/factory\/NodeFactory.html#cache:scala.collection.mutable.HashMap[Int,List[A]]", "kind" : "val"}, {"label" : "ignoreProcInstr", "tail" : ": Boolean", "member" : "scala.xml.factory.NodeFactory.ignoreProcInstr", "link" : "scala\/xml\/factory\/NodeFactory.html#ignoreProcInstr:Boolean", "kind" : "val"}, {"label" : "ignoreComments", "tail" : ": Boolean", "member" : "scala.xml.factory.NodeFactory.ignoreComments", "link" : "scala\/xml\/factory\/NodeFactory.html#ignoreComments:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/factory\/NodeFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/factory\/NodeFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/factory\/NodeFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/factory\/NodeFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/factory\/NodeFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/factory\/NodeFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/factory\/NodeFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/NodeFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/NodeFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/NodeFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/factory\/NodeFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/factory\/NodeFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/factory\/NodeFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/factory\/NodeFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/factory\/NodeFactory.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/factory\/NodeFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/factory\/NodeFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/factory\/NodeFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/factory\/NodeFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "create", "tail" : "(pre: String, name: String, attrs: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): A", "member" : "scala.xml.factory.NodeFactory.create", "link" : "scala\/xml\/factory\/NodeFactory.html#create(pre:String,name:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):A", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "scala.xml.factory.XMLLoader", "trait" : "scala\/xml\/factory\/XMLLoader.html", "kind" : "trait", "members_trait" : [{"label" : "loadString", "tail" : "(string: String): T", "member" : "scala.xml.factory.XMLLoader.loadString", "link" : "scala\/xml\/factory\/XMLLoader.html#loadString(string:String):T", "kind" : "def"}, {"label" : "load", "tail" : "(url: URL): T", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/factory\/XMLLoader.html#load(url:java.net.URL):T", "kind" : "def"}, {"label" : "load", "tail" : "(source: InputSource): T", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/factory\/XMLLoader.html#load(source:scala.xml.InputSource):T", "kind" : "def"}, {"label" : "load", "tail" : "(sysID: String): T", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/factory\/XMLLoader.html#load(sysID:String):T", "kind" : "def"}, {"label" : "load", "tail" : "(reader: Reader): T", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/factory\/XMLLoader.html#load(reader:java.io.Reader):T", "kind" : "def"}, {"label" : "load", "tail" : "(is: InputStream): T", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/factory\/XMLLoader.html#load(is:java.io.InputStream):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(name: String): T", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/factory\/XMLLoader.html#loadFile(name:String):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(fd: FileDescriptor): T", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/factory\/XMLLoader.html#loadFile(fd:java.io.FileDescriptor):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(file: File): T", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/factory\/XMLLoader.html#loadFile(file:java.io.File):T", "kind" : "def"}, {"label" : "loadXML", "tail" : "(source: InputSource, parser: SAXParser): T", "member" : "scala.xml.factory.XMLLoader.loadXML", "link" : "scala\/xml\/factory\/XMLLoader.html#loadXML(source:scala.xml.InputSource,parser:scala.xml.SAXParser):T", "kind" : "def"}, {"label" : "parser", "tail" : "(): SAXParser", "member" : "scala.xml.factory.XMLLoader.parser", "link" : "scala\/xml\/factory\/XMLLoader.html#parser:scala.xml.SAXParser", "kind" : "def"}, {"label" : "adapter", "tail" : "(): FactoryAdapter", "member" : "scala.xml.factory.XMLLoader.adapter", "link" : "scala\/xml\/factory\/XMLLoader.html#adapter:scala.xml.parsing.FactoryAdapter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/factory\/XMLLoader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/factory\/XMLLoader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/factory\/XMLLoader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/factory\/XMLLoader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/factory\/XMLLoader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/factory\/XMLLoader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/factory\/XMLLoader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/XMLLoader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/XMLLoader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/factory\/XMLLoader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/factory\/XMLLoader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/factory\/XMLLoader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/factory\/XMLLoader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/factory\/XMLLoader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/factory\/XMLLoader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/factory\/XMLLoader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/factory\/XMLLoader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/factory\/XMLLoader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/factory\/XMLLoader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Presents collection of XML loading methods which use the parser created by \"def parser\"."}], "scala.xml.parsing" : [{"name" : "scala.xml.parsing.ConsoleErrorHandler", "trait" : "scala\/xml\/parsing\/ConsoleErrorHandler.html", "kind" : "trait", "members_trait" : [{"label" : "printError", "tail" : "(errtype: String, ex: SAXParseException): Unit", "member" : "scala.xml.parsing.ConsoleErrorHandler.printError", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#printError(errtype:String,ex:scala.xml.SAXParseException):Unit", "kind" : "def"}, {"label" : "fatalError", "tail" : "(ex: SAXParseException): Unit", "member" : "scala.xml.parsing.ConsoleErrorHandler.fatalError", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#fatalError(ex:scala.xml.SAXParseException):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(ex: SAXParseException): Unit", "member" : "scala.xml.parsing.ConsoleErrorHandler.error", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#error(ex:scala.xml.SAXParseException):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(ex: SAXParseException): Unit", "member" : "scala.xml.parsing.ConsoleErrorHandler.warning", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#warning(ex:scala.xml.SAXParseException):Unit", "kind" : "def"}, {"label" : "skippedEntity", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.skippedEntity", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#skippedEntity(x$1:String):Unit", "kind" : "def"}, {"label" : "processingInstruction", "tail" : "(arg0: String, arg1: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.processingInstruction", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#processingInstruction(x$1:String,x$2:String):Unit", "kind" : "def"}, {"label" : "ignorableWhitespace", "tail" : "(arg0: Array[Char], arg1: Int, arg2: Int): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.ignorableWhitespace", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#ignorableWhitespace(x$1:Array[Char],x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "characters", "tail" : "(arg0: Array[Char], arg1: Int, arg2: Int): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.characters", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#characters(x$1:Array[Char],x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "endElement", "tail" : "(arg0: String, arg1: String, arg2: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.endElement", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#endElement(x$1:String,x$2:String,x$3:String):Unit", "kind" : "def"}, {"label" : "startElement", "tail" : "(arg0: String, arg1: String, arg2: String, arg3: Attributes): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.startElement", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#startElement(x$1:String,x$2:String,x$3:String,x$4:org.xml.sax.Attributes):Unit", "kind" : "def"}, {"label" : "endPrefixMapping", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.endPrefixMapping", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#endPrefixMapping(x$1:String):Unit", "kind" : "def"}, {"label" : "startPrefixMapping", "tail" : "(arg0: String, arg1: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.startPrefixMapping", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#startPrefixMapping(x$1:String,x$2:String):Unit", "kind" : "def"}, {"label" : "endDocument", "tail" : "(): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.endDocument", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#endDocument():Unit", "kind" : "def"}, {"label" : "startDocument", "tail" : "(): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.startDocument", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#startDocument():Unit", "kind" : "def"}, {"label" : "setDocumentLocator", "tail" : "(arg0: Locator): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.setDocumentLocator", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#setDocumentLocator(x$1:org.xml.sax.Locator):Unit", "kind" : "def"}, {"label" : "unparsedEntityDecl", "tail" : "(arg0: String, arg1: String, arg2: String, arg3: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.unparsedEntityDecl", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#unparsedEntityDecl(x$1:String,x$2:String,x$3:String,x$4:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(arg0: String, arg1: String, arg2: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.notationDecl", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#notationDecl(x$1:String,x$2:String,x$3:String):Unit", "kind" : "def"}, {"label" : "resolveEntity", "tail" : "(arg0: String, arg1: String): org.xml.sax.InputSource", "member" : "org.xml.sax.helpers.DefaultHandler.resolveEntity", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#resolveEntity(x$1:String,x$2:String):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/ConsoleErrorHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "scala.xml.parsing.ConstructingHandler", "shortDescription" : "Implementation of MarkupHandler that constructs nodes.", "members_class" : [{"label" : "text", "tail" : "(pos: Int, txt: String): Text", "member" : "scala.xml.parsing.ConstructingHandler.text", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#text(pos:Int,txt:String):scala.xml.Text", "kind" : "def"}, {"label" : "entityRef", "tail" : "(pos: Int, n: String): EntityRef", "member" : "scala.xml.parsing.ConstructingHandler.entityRef", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#entityRef(pos:Int,n:String):scala.xml.EntityRef", "kind" : "def"}, {"label" : "comment", "tail" : "(pos: Int, txt: String): Comment", "member" : "scala.xml.parsing.ConstructingHandler.comment", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#comment(pos:Int,txt:String):scala.xml.Comment", "kind" : "def"}, {"label" : "procInstr", "tail" : "(pos: Int, target: String, txt: String): ProcInstr", "member" : "scala.xml.parsing.ConstructingHandler.procInstr", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#procInstr(pos:Int,target:String,txt:String):scala.xml.ProcInstr", "kind" : "def"}, {"label" : "elem", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, pscope: NamespaceBinding, empty: Boolean, nodes: NodeSeq): NodeSeq", "member" : "scala.xml.parsing.ConstructingHandler.elem", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#elem(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,pscope:scala.xml.NamespaceBinding,empty:Boolean,nodes:scala.xml.NodeSeq):scala.xml.NodeSeq", "kind" : "def"}, {"member" : "scala.xml.parsing.ConstructingHandler#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(msg: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.log", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#log(msg:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(notat: String, extID: ExternalID): Unit", "member" : "scala.xml.parsing.MarkupHandler.notationDecl", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#notationDecl(notat:String,extID:scala.xml.dtd.ExternalID):Unit", "kind" : "def"}, {"label" : "unparsedEntityDecl", "tail" : "(name: String, extID: ExternalID, notat: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.unparsedEntityDecl", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#unparsedEntityDecl(name:String,extID:scala.xml.dtd.ExternalID,notat:String):Unit", "kind" : "def"}, {"label" : "peReference", "tail" : "(name: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.peReference", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#peReference(name:String):Unit", "kind" : "def"}, {"label" : "parsedEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parsedEntityDecl", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#parsedEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "parameterEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parameterEntityDecl", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#parameterEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "attListDecl", "tail" : "(name: String, attList: List[AttrDecl]): Unit", "member" : "scala.xml.parsing.MarkupHandler.attListDecl", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#attListDecl(name:String,attList:List[scala.xml.dtd.AttrDecl]):Unit", "kind" : "def"}, {"label" : "elemDecl", "tail" : "(n: String, cmstr: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemDecl", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#elemDecl(n:String,cmstr:String):Unit", "kind" : "def"}, {"label" : "elemEnd", "tail" : "(pos: Int, pre: String, label: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemEnd", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#elemEnd(pos:Int,pre:String,label:String):Unit", "kind" : "def"}, {"label" : "elemStart", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemStart", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#elemStart(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):Unit", "kind" : "def"}, {"label" : "endDTD", "tail" : "(n: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.endDTD", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#endDTD(n:String):Unit", "kind" : "def"}, {"label" : "replacementText", "tail" : "(entityName: String): Source", "member" : "scala.xml.parsing.MarkupHandler.replacementText", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#replacementText(entityName:String):scala.io.Source", "kind" : "def"}, {"label" : "lookupElemDecl", "tail" : "(Label: String): ElemDecl", "member" : "scala.xml.parsing.MarkupHandler.lookupElemDecl", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#lookupElemDecl(Label:String):scala.xml.dtd.ElemDecl", "kind" : "def"}, {"label" : "ent", "tail" : ": Map[String, EntityDecl]", "member" : "scala.xml.parsing.MarkupHandler.ent", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#ent:scala.collection.mutable.Map[String,scala.xml.dtd.EntityDecl]", "kind" : "var"}, {"label" : "decls", "tail" : ": List[Decl]", "member" : "scala.xml.parsing.MarkupHandler.decls", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#decls:List[scala.xml.dtd.Decl]", "kind" : "var"}, {"label" : "isValidating", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupHandler.isValidating", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#isValidating:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/ConstructingHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "preserveWS", "tail" : ": Boolean", "member" : "scala.xml.parsing.ConstructingHandler.preserveWS", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#preserveWS:Boolean", "kind" : "abstract val"}, {"label" : "reportSyntaxError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.reportSyntaxError", "link" : "scala\/xml\/parsing\/ConstructingHandler.html#reportSyntaxError(pos:Int,str:String):Unit", "kind" : "abstract def"}], "class" : "scala\/xml\/parsing\/ConstructingHandler.html", "kind" : "class"}, {"name" : "scala.xml.parsing.ConstructingParser", "shortDescription" : "", "object" : "scala\/xml\/parsing\/ConstructingParser$.html", "members_class" : [{"member" : "scala.xml.parsing.ConstructingParser#<init>", "error" : "unsupported entity"}, {"label" : "preserveWS", "tail" : ": Boolean", "member" : "scala.xml.parsing.ConstructingParser.preserveWS", "link" : "scala\/xml\/parsing\/ConstructingParser.html#preserveWS:Boolean", "kind" : "val"}, {"label" : "input", "tail" : ": Source", "member" : "scala.xml.parsing.ConstructingParser.input", "link" : "scala\/xml\/parsing\/ConstructingParser.html#input:scala.io.Source", "kind" : "val"}, {"label" : "pop", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.pop", "link" : "scala\/xml\/parsing\/ConstructingParser.html#pop():Unit", "kind" : "def"}, {"label" : "pushExternal", "tail" : "(systemId: String): Unit", "member" : "scala.xml.parsing.MarkupParser.pushExternal", "link" : "scala\/xml\/parsing\/ConstructingParser.html#pushExternal(systemId:String):Unit", "kind" : "def"}, {"label" : "push", "tail" : "(entityName: String): Unit", "member" : "scala.xml.parsing.MarkupParser.push", "link" : "scala\/xml\/parsing\/ConstructingParser.html#push(entityName:String):Unit", "kind" : "def"}, {"label" : "reportValidationError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.MarkupParser.reportValidationError", "link" : "scala\/xml\/parsing\/ConstructingParser.html#reportValidationError(pos:Int,str:String):Unit", "kind" : "def"}, {"label" : "reportSyntaxError", "tail" : "(str: String): Unit", "member" : "scala.xml.parsing.MarkupParser.reportSyntaxError", "link" : "scala\/xml\/parsing\/ConstructingParser.html#reportSyntaxError(str:String):Unit", "kind" : "def"}, {"label" : "reportSyntaxError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.MarkupParser.reportSyntaxError", "link" : "scala\/xml\/parsing\/ConstructingParser.html#reportSyntaxError(pos:Int,str:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.notationDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#notationDecl():Unit", "kind" : "def"}, {"label" : "entityDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.entityDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#entityDecl():Unit", "kind" : "def"}, {"label" : "attrDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.attrDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#attrDecl():Unit", "kind" : "def"}, {"label" : "elementDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.elementDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#elementDecl():Unit", "kind" : "def"}, {"label" : "intSubset", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.intSubset", "link" : "scala\/xml\/parsing\/ConstructingParser.html#intSubset():Unit", "kind" : "def"}, {"label" : "markupDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.markupDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#markupDecl():Unit", "kind" : "def"}, {"label" : "markupDecl1", "tail" : "(): Any", "member" : "scala.xml.parsing.MarkupParser.markupDecl1", "link" : "scala\/xml\/parsing\/ConstructingParser.html#markupDecl1():Any", "kind" : "def"}, {"label" : "extSubset", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.extSubset", "link" : "scala\/xml\/parsing\/ConstructingParser.html#extSubset():Unit", "kind" : "def"}, {"label" : "pubidLiteral", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParser.pubidLiteral", "link" : "scala\/xml\/parsing\/ConstructingParser.html#pubidLiteral():String", "kind" : "def"}, {"label" : "systemLiteral", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParser.systemLiteral", "link" : "scala\/xml\/parsing\/ConstructingParser.html#systemLiteral():String", "kind" : "def"}, {"label" : "element1", "tail" : "(pscope: NamespaceBinding): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.element1", "link" : "scala\/xml\/parsing\/ConstructingParser.html#element1(pscope:scala.xml.NamespaceBinding):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "element", "tail" : "(pscope: NamespaceBinding): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.element", "link" : "scala\/xml\/parsing\/ConstructingParser.html#element(pscope:scala.xml.NamespaceBinding):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "parseDTD", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.parseDTD", "link" : "scala\/xml\/parsing\/ConstructingParser.html#parseDTD():Unit", "kind" : "def"}, {"label" : "externalID", "tail" : "(): ExternalID", "member" : "scala.xml.parsing.MarkupParser.externalID", "link" : "scala\/xml\/parsing\/ConstructingParser.html#externalID():scala.xml.dtd.ExternalID", "kind" : "def"}, {"label" : "content", "tail" : "(pscope: NamespaceBinding): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.content", "link" : "scala\/xml\/parsing\/ConstructingParser.html#content(pscope:scala.xml.NamespaceBinding):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "content1", "tail" : "(pscope: NamespaceBinding, ts: NodeBuffer): Unit", "member" : "scala.xml.parsing.MarkupParser.content1", "link" : "scala\/xml\/parsing\/ConstructingParser.html#content1(pscope:scala.xml.NamespaceBinding,ts:scala.xml.NodeBuffer):Unit", "kind" : "def"}, {"label" : "appendText", "tail" : "(pos: Int, ts: NodeBuffer, txt: String): Unit", "member" : "scala.xml.parsing.MarkupParser.appendText", "link" : "scala\/xml\/parsing\/ConstructingParser.html#appendText(pos:Int,ts:scala.xml.NodeBuffer,txt:String):Unit", "kind" : "def"}, {"label" : "xComment", "tail" : "(): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.xComment", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xComment:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xCharData", "tail" : "(): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.xCharData", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xCharData:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xEntityValue", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParser.xEntityValue", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xEntityValue():String", "kind" : "def"}, {"label" : "xAttributes", "tail" : "(pscope: NamespaceBinding): (MetaData, NamespaceBinding)", "member" : "scala.xml.parsing.MarkupParser.xAttributes", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xAttributes(pscope:scala.xml.NamespaceBinding):(scala.xml.MetaData,scala.xml.NamespaceBinding)", "kind" : "def"}, {"label" : "nextch", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.nextch", "link" : "scala\/xml\/parsing\/ConstructingParser.html#nextch():Unit", "kind" : "def"}, {"label" : "mkProcInstr", "tail" : "(position: Int, name: String, text: String): ElementType", "member" : "scala.xml.parsing.MarkupParser.mkProcInstr", "link" : "scala\/xml\/parsing\/ConstructingParser.html#mkProcInstr(position:Int,name:String,text:String):MarkupParser.this.ElementType", "kind" : "def"}, {"label" : "mkAttributes", "tail" : "(name: String, pscope: NamespaceBinding): AttributesType", "member" : "scala.xml.parsing.MarkupParser.mkAttributes", "link" : "scala\/xml\/parsing\/ConstructingParser.html#mkAttributes(name:String,pscope:scala.xml.NamespaceBinding):MarkupParser.this.AttributesType", "kind" : "def"}, {"label" : "ch_returning_nextch", "tail" : "(): Char", "member" : "scala.xml.parsing.MarkupParser.ch_returning_nextch", "link" : "scala\/xml\/parsing\/ConstructingParser.html#ch_returning_nextch:Char", "kind" : "def"}, {"label" : "initialize", "tail" : "(): ConstructingParser.this.type", "member" : "scala.xml.parsing.MarkupParser.initialize", "link" : "scala\/xml\/parsing\/ConstructingParser.html#initialize:scala.xml.parsing.<refinement>.type", "kind" : "def"}, {"label" : "putChar", "tail" : "(c: Char): collection.mutable.StringBuilder", "member" : "scala.xml.parsing.MarkupParser.putChar", "link" : "scala\/xml\/parsing\/ConstructingParser.html#putChar(c:Char):StringBuilder", "kind" : "def"}, {"label" : "document", "tail" : "(): Document", "member" : "scala.xml.parsing.MarkupParser.document", "link" : "scala\/xml\/parsing\/ConstructingParser.html#document():scala.xml.Document", "kind" : "def"}, {"label" : "textDecl", "tail" : "(): (Option[String], Option[String])", "member" : "scala.xml.parsing.MarkupParser.textDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#textDecl():(Option[String],Option[String])", "kind" : "def"}, {"label" : "prolog", "tail" : "(): (Option[String], Option[String], Option[Boolean])", "member" : "scala.xml.parsing.MarkupParser.prolog", "link" : "scala\/xml\/parsing\/ConstructingParser.html#prolog():(Option[String],Option[String],Option[Boolean])", "kind" : "def"}, {"label" : "xmlProcInstr", "tail" : "(): MetaData", "member" : "scala.xml.parsing.MarkupParser.xmlProcInstr", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xmlProcInstr():scala.xml.MetaData", "kind" : "def"}, {"label" : "eof", "tail" : "(): Boolean", "member" : "scala.xml.parsing.MarkupParser.eof", "link" : "scala\/xml\/parsing\/ConstructingParser.html#eof:Boolean", "kind" : "def"}, {"label" : "doc", "tail" : ": Document", "member" : "scala.xml.parsing.MarkupParser.doc", "link" : "scala\/xml\/parsing\/ConstructingParser.html#doc:scala.xml.Document", "kind" : "val"}, {"label" : "dtd", "tail" : ": DTD", "member" : "scala.xml.parsing.MarkupParser.dtd", "link" : "scala\/xml\/parsing\/ConstructingParser.html#dtd:scala.xml.dtd.DTD", "kind" : "val"}, {"label" : "cbuf", "tail" : ": collection.mutable.StringBuilder", "member" : "scala.xml.parsing.MarkupParser.cbuf", "link" : "scala\/xml\/parsing\/ConstructingParser.html#cbuf:StringBuilder", "kind" : "val"}, {"label" : "ch", "tail" : "(): Char", "member" : "scala.xml.parsing.MarkupParser.ch", "link" : "scala\/xml\/parsing\/ConstructingParser.html#ch:Char", "kind" : "def"}, {"label" : "lastChRead", "tail" : ": Char", "member" : "scala.xml.parsing.MarkupParser.lastChRead", "link" : "scala\/xml\/parsing\/ConstructingParser.html#lastChRead:Char", "kind" : "val"}, {"label" : "reachedEof", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupParser.reachedEof", "link" : "scala\/xml\/parsing\/ConstructingParser.html#reachedEof:Boolean", "kind" : "val"}, {"label" : "nextChNeeded", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupParser.nextChNeeded", "link" : "scala\/xml\/parsing\/ConstructingParser.html#nextChNeeded:Boolean", "kind" : "val"}, {"label" : "tmppos", "tail" : ": Int", "member" : "scala.xml.parsing.MarkupParser.tmppos", "link" : "scala\/xml\/parsing\/ConstructingParser.html#tmppos:Int", "kind" : "val"}, {"label" : "extIndex", "tail" : ": Int", "member" : "scala.xml.parsing.MarkupParser.extIndex", "link" : "scala\/xml\/parsing\/ConstructingParser.html#extIndex:Int", "kind" : "val"}, {"label" : "pos", "tail" : ": Int", "member" : "scala.xml.parsing.MarkupParser.pos", "link" : "scala\/xml\/parsing\/ConstructingParser.html#pos:Int", "kind" : "val"}, {"label" : "inpStack", "tail" : ": List[Source]", "member" : "scala.xml.parsing.MarkupParser.inpStack", "link" : "scala\/xml\/parsing\/ConstructingParser.html#inpStack:List[scala.io.Source]", "kind" : "val"}, {"label" : "lookahead", "tail" : "(): BufferedIterator[Char]", "member" : "scala.xml.parsing.MarkupParser.lookahead", "link" : "scala\/xml\/parsing\/ConstructingParser.html#lookahead():BufferedIterator[Char]", "kind" : "def"}, {"label" : "curInput", "tail" : ": Source", "member" : "scala.xml.parsing.MarkupParser.curInput", "link" : "scala\/xml\/parsing\/ConstructingParser.html#curInput:scala.io.Source", "kind" : "val"}, {"label" : "xHandleError", "tail" : "(that: Char, msg: String): Unit", "member" : "scala.xml.parsing.MarkupParser.xHandleError", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xHandleError(that:Char,msg:String):Unit", "kind" : "def"}, {"label" : "errorNoEnd", "tail" : "(tag: String): Nothing", "member" : "scala.xml.parsing.MarkupParser.errorNoEnd", "link" : "scala\/xml\/parsing\/ConstructingParser.html#errorNoEnd(tag:String):Nothing", "kind" : "def"}, {"label" : "truncatedError", "tail" : "(msg: String): Nothing", "member" : "scala.xml.parsing.MarkupParser.truncatedError", "link" : "scala\/xml\/parsing\/ConstructingParser.html#truncatedError(msg:String):Nothing", "kind" : "def"}, {"label" : "NamespaceType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.NamespaceType", "link" : "scala\/xml\/parsing\/ConstructingParser.html#NamespaceType=scala.xml.NamespaceBinding", "kind" : "type"}, {"label" : "AttributesType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.AttributesType", "link" : "scala\/xml\/parsing\/ConstructingParser.html#AttributesType=(scala.xml.MetaData,scala.xml.NamespaceBinding)", "kind" : "type"}, {"label" : "ElementType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.ElementType", "link" : "scala\/xml\/parsing\/ConstructingParser.html#ElementType=scala.xml.NodeSeq", "kind" : "type"}, {"label" : "InputType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.InputType", "link" : "scala\/xml\/parsing\/ConstructingParser.html#InputType=scala.io.Source", "kind" : "type"}, {"label" : "PositionType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.PositionType", "link" : "scala\/xml\/parsing\/ConstructingParser.html#PositionType=Int", "kind" : "type"}, {"label" : "xTakeUntil", "tail" : "(handler: (PositionType, String) => T, positioner: () => PositionType, until: String): T", "member" : "scala.xml.parsing.MarkupParserCommon.xTakeUntil", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xTakeUntil[T](handler:(MarkupParserCommon.this.PositionType,String)=>T,positioner:()=>MarkupParserCommon.this.PositionType,until:String):T", "kind" : "def"}, {"label" : "saving", "tail" : "(getter: A, setter: (A) => Unit)(body: => B): B", "member" : "scala.xml.parsing.MarkupParserCommon.saving", "link" : "scala\/xml\/parsing\/ConstructingParser.html#saving[A,B](getter:A,setter:A=>Unit)(body:=>B):B", "kind" : "def"}, {"label" : "returning", "tail" : "(x: T)(f: (T) => Unit): T", "member" : "scala.xml.parsing.MarkupParserCommon.returning", "link" : "scala\/xml\/parsing\/ConstructingParser.html#returning[T](x:T)(f:T=>Unit):T", "kind" : "def"}, {"label" : "xSpace", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xSpace", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xSpace():Unit", "kind" : "def"}, {"label" : "xSpaceOpt", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xSpaceOpt", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xSpaceOpt():Unit", "kind" : "def"}, {"label" : "xEQ", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xEQ", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xEQ():Unit", "kind" : "def"}, {"label" : "xToken", "tail" : "(that: collection.Seq[Char]): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xToken", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xToken(that:scala.collection.Seq[Char]):Unit", "kind" : "def"}, {"label" : "xToken", "tail" : "(that: Char): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xToken", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xToken(that:Char):Unit", "kind" : "def"}, {"label" : "errorAndResult", "tail" : "(msg: String, x: T): T", "member" : "scala.xml.parsing.MarkupParserCommon.errorAndResult", "link" : "scala\/xml\/parsing\/ConstructingParser.html#errorAndResult[T](msg:String,x:T):T", "kind" : "def"}, {"label" : "xCharRef", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParserCommon.xCharRef", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xCharRef:String", "kind" : "def"}, {"label" : "xCharRef", "tail" : "(it: Iterator[Char]): String", "member" : "scala.xml.parsing.MarkupParserCommon.xCharRef", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xCharRef(it:Iterator[Char]):String", "kind" : "def"}, {"label" : "xCharRef", "tail" : "(ch: () => Char, nextch: () => Unit): String", "member" : "scala.xml.parsing.MarkupParserCommon.xCharRef", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xCharRef(ch:()=>Char,nextch:()=>Unit):String", "kind" : "def"}, {"label" : "xName", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParserCommon.xName", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xName:String", "kind" : "def"}, {"label" : "xEndTag", "tail" : "(startName: String): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xEndTag", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xEndTag(startName:String):Unit", "kind" : "def"}, {"label" : "xAttributeValue", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParserCommon.xAttributeValue", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xAttributeValue():String", "kind" : "def"}, {"label" : "xAttributeValue", "tail" : "(endCh: Char): String", "member" : "scala.xml.parsing.MarkupParserCommon.xAttributeValue", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xAttributeValue(endCh:Char):String", "kind" : "def"}, {"label" : "xProcInstr", "tail" : "(): ElementType", "member" : "scala.xml.parsing.MarkupParserCommon.xProcInstr", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xProcInstr:MarkupParserCommon.this.ElementType", "kind" : "def"}, {"label" : "xTag", "tail" : "(pscope: NamespaceType): (String, AttributesType)", "member" : "scala.xml.parsing.MarkupParserCommon.xTag", "link" : "scala\/xml\/parsing\/ConstructingParser.html#xTag(pscope:MarkupParserCommon.this.NamespaceType):(String,MarkupParserCommon.this.AttributesType)", "kind" : "def"}, {"label" : "unreachable", "tail" : "(): Nothing", "member" : "scala.xml.parsing.MarkupParserCommon.unreachable", "link" : "scala\/xml\/parsing\/ConstructingParser.html#unreachable:Nothing", "kind" : "def"}, {"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/parsing\/ConstructingParser.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/parsing\/ConstructingParser.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "externalSource", "tail" : "(systemId: String): Source", "member" : "scala.xml.parsing.ExternalSources.externalSource", "link" : "scala\/xml\/parsing\/ConstructingParser.html#externalSource(systemId:String):scala.io.Source", "kind" : "def"}, {"label" : "text", "tail" : "(pos: Int, txt: String): Text", "member" : "scala.xml.parsing.ConstructingHandler.text", "link" : "scala\/xml\/parsing\/ConstructingParser.html#text(pos:Int,txt:String):scala.xml.Text", "kind" : "def"}, {"label" : "entityRef", "tail" : "(pos: Int, n: String): EntityRef", "member" : "scala.xml.parsing.ConstructingHandler.entityRef", "link" : "scala\/xml\/parsing\/ConstructingParser.html#entityRef(pos:Int,n:String):scala.xml.EntityRef", "kind" : "def"}, {"label" : "comment", "tail" : "(pos: Int, txt: String): Comment", "member" : "scala.xml.parsing.ConstructingHandler.comment", "link" : "scala\/xml\/parsing\/ConstructingParser.html#comment(pos:Int,txt:String):scala.xml.Comment", "kind" : "def"}, {"label" : "procInstr", "tail" : "(pos: Int, target: String, txt: String): ProcInstr", "member" : "scala.xml.parsing.ConstructingHandler.procInstr", "link" : "scala\/xml\/parsing\/ConstructingParser.html#procInstr(pos:Int,target:String,txt:String):scala.xml.ProcInstr", "kind" : "def"}, {"label" : "elem", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, pscope: NamespaceBinding, empty: Boolean, nodes: NodeSeq): NodeSeq", "member" : "scala.xml.parsing.ConstructingHandler.elem", "link" : "scala\/xml\/parsing\/ConstructingParser.html#elem(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,pscope:scala.xml.NamespaceBinding,empty:Boolean,nodes:scala.xml.NodeSeq):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "log", "tail" : "(msg: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.log", "link" : "scala\/xml\/parsing\/ConstructingParser.html#log(msg:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(notat: String, extID: ExternalID): Unit", "member" : "scala.xml.parsing.MarkupHandler.notationDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#notationDecl(notat:String,extID:scala.xml.dtd.ExternalID):Unit", "kind" : "def"}, {"label" : "unparsedEntityDecl", "tail" : "(name: String, extID: ExternalID, notat: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.unparsedEntityDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#unparsedEntityDecl(name:String,extID:scala.xml.dtd.ExternalID,notat:String):Unit", "kind" : "def"}, {"label" : "peReference", "tail" : "(name: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.peReference", "link" : "scala\/xml\/parsing\/ConstructingParser.html#peReference(name:String):Unit", "kind" : "def"}, {"label" : "parsedEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parsedEntityDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#parsedEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "parameterEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parameterEntityDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#parameterEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "attListDecl", "tail" : "(name: String, attList: List[AttrDecl]): Unit", "member" : "scala.xml.parsing.MarkupHandler.attListDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#attListDecl(name:String,attList:List[scala.xml.dtd.AttrDecl]):Unit", "kind" : "def"}, {"label" : "elemDecl", "tail" : "(n: String, cmstr: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#elemDecl(n:String,cmstr:String):Unit", "kind" : "def"}, {"label" : "elemEnd", "tail" : "(pos: Int, pre: String, label: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemEnd", "link" : "scala\/xml\/parsing\/ConstructingParser.html#elemEnd(pos:Int,pre:String,label:String):Unit", "kind" : "def"}, {"label" : "elemStart", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemStart", "link" : "scala\/xml\/parsing\/ConstructingParser.html#elemStart(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):Unit", "kind" : "def"}, {"label" : "endDTD", "tail" : "(n: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.endDTD", "link" : "scala\/xml\/parsing\/ConstructingParser.html#endDTD(n:String):Unit", "kind" : "def"}, {"label" : "replacementText", "tail" : "(entityName: String): Source", "member" : "scala.xml.parsing.MarkupHandler.replacementText", "link" : "scala\/xml\/parsing\/ConstructingParser.html#replacementText(entityName:String):scala.io.Source", "kind" : "def"}, {"label" : "lookupElemDecl", "tail" : "(Label: String): ElemDecl", "member" : "scala.xml.parsing.MarkupHandler.lookupElemDecl", "link" : "scala\/xml\/parsing\/ConstructingParser.html#lookupElemDecl(Label:String):scala.xml.dtd.ElemDecl", "kind" : "def"}, {"label" : "ent", "tail" : ": Map[String, EntityDecl]", "member" : "scala.xml.parsing.MarkupHandler.ent", "link" : "scala\/xml\/parsing\/ConstructingParser.html#ent:scala.collection.mutable.Map[String,scala.xml.dtd.EntityDecl]", "kind" : "var"}, {"label" : "decls", "tail" : ": List[Decl]", "member" : "scala.xml.parsing.MarkupHandler.decls", "link" : "scala\/xml\/parsing\/ConstructingParser.html#decls:List[scala.xml.dtd.Decl]", "kind" : "var"}, {"label" : "isValidating", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupHandler.isValidating", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isValidating:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/ConstructingParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/ConstructingParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/ConstructingParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/ConstructingParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/ConstructingParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/ConstructingParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/ConstructingParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConstructingParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConstructingParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConstructingParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/ConstructingParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/ConstructingParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/ConstructingParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/ConstructingParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/ConstructingParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/ConstructingParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/ConstructingParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/ConstructingParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/ConstructingParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromSource", "tail" : "(inp: Source, preserveWS: Boolean): ConstructingParser", "member" : "scala.xml.parsing.ConstructingParser.fromSource", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#fromSource(inp:scala.io.Source,preserveWS:Boolean):scala.xml.parsing.ConstructingParser", "kind" : "def"}, {"label" : "fromFile", "tail" : "(inp: File, preserveWS: Boolean): ConstructingParser", "member" : "scala.xml.parsing.ConstructingParser.fromFile", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#fromFile(inp:java.io.File,preserveWS:Boolean):scala.xml.parsing.ConstructingParser", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/ConstructingParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/ConstructingParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/parsing\/ConstructingParser.html", "kind" : "object"}, {"name" : "scala.xml.parsing.DefaultMarkupHandler", "shortDescription" : "Default implementation of markup handler always returns NodeSeq.Empty", "members_class" : [{"label" : "text", "tail" : "(pos: Int, txt: String): NodeSeq", "member" : "scala.xml.parsing.DefaultMarkupHandler.text", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#text(pos:Int,txt:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "entityRef", "tail" : "(pos: Int, n: String): NodeSeq", "member" : "scala.xml.parsing.DefaultMarkupHandler.entityRef", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#entityRef(pos:Int,n:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "comment", "tail" : "(pos: Int, comment: String): NodeSeq", "member" : "scala.xml.parsing.DefaultMarkupHandler.comment", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#comment(pos:Int,comment:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "procInstr", "tail" : "(pos: Int, target: String, txt: String): NodeSeq", "member" : "scala.xml.parsing.DefaultMarkupHandler.procInstr", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#procInstr(pos:Int,target:String,txt:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "elem", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding, empty: Boolean, args: NodeSeq): NodeSeq", "member" : "scala.xml.parsing.DefaultMarkupHandler.elem", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#elem(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,empty:Boolean,args:scala.xml.NodeSeq):scala.xml.NodeSeq", "kind" : "def"}, {"member" : "scala.xml.parsing.DefaultMarkupHandler#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(msg: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.log", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#log(msg:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(notat: String, extID: ExternalID): Unit", "member" : "scala.xml.parsing.MarkupHandler.notationDecl", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#notationDecl(notat:String,extID:scala.xml.dtd.ExternalID):Unit", "kind" : "def"}, {"label" : "unparsedEntityDecl", "tail" : "(name: String, extID: ExternalID, notat: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.unparsedEntityDecl", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#unparsedEntityDecl(name:String,extID:scala.xml.dtd.ExternalID,notat:String):Unit", "kind" : "def"}, {"label" : "peReference", "tail" : "(name: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.peReference", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#peReference(name:String):Unit", "kind" : "def"}, {"label" : "parsedEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parsedEntityDecl", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#parsedEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "parameterEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parameterEntityDecl", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#parameterEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "attListDecl", "tail" : "(name: String, attList: List[AttrDecl]): Unit", "member" : "scala.xml.parsing.MarkupHandler.attListDecl", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#attListDecl(name:String,attList:List[scala.xml.dtd.AttrDecl]):Unit", "kind" : "def"}, {"label" : "elemDecl", "tail" : "(n: String, cmstr: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemDecl", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#elemDecl(n:String,cmstr:String):Unit", "kind" : "def"}, {"label" : "elemEnd", "tail" : "(pos: Int, pre: String, label: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemEnd", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#elemEnd(pos:Int,pre:String,label:String):Unit", "kind" : "def"}, {"label" : "elemStart", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemStart", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#elemStart(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):Unit", "kind" : "def"}, {"label" : "endDTD", "tail" : "(n: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.endDTD", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#endDTD(n:String):Unit", "kind" : "def"}, {"label" : "replacementText", "tail" : "(entityName: String): Source", "member" : "scala.xml.parsing.MarkupHandler.replacementText", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#replacementText(entityName:String):scala.io.Source", "kind" : "def"}, {"label" : "lookupElemDecl", "tail" : "(Label: String): ElemDecl", "member" : "scala.xml.parsing.MarkupHandler.lookupElemDecl", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#lookupElemDecl(Label:String):scala.xml.dtd.ElemDecl", "kind" : "def"}, {"label" : "ent", "tail" : ": Map[String, EntityDecl]", "member" : "scala.xml.parsing.MarkupHandler.ent", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#ent:scala.collection.mutable.Map[String,scala.xml.dtd.EntityDecl]", "kind" : "var"}, {"label" : "decls", "tail" : ": List[Decl]", "member" : "scala.xml.parsing.MarkupHandler.decls", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#decls:List[scala.xml.dtd.Decl]", "kind" : "var"}, {"label" : "isValidating", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupHandler.isValidating", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#isValidating:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reportSyntaxError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.reportSyntaxError", "link" : "scala\/xml\/parsing\/DefaultMarkupHandler.html#reportSyntaxError(pos:Int,str:String):Unit", "kind" : "abstract def"}], "class" : "scala\/xml\/parsing\/DefaultMarkupHandler.html", "kind" : "class"}, {"name" : "scala.xml.parsing.ExternalSources", "trait" : "scala\/xml\/parsing\/ExternalSources.html", "kind" : "trait", "members_trait" : [{"label" : "externalSource", "tail" : "(systemId: String): Source", "member" : "scala.xml.parsing.ExternalSources.externalSource", "link" : "scala\/xml\/parsing\/ExternalSources.html#externalSource(systemId:String):scala.io.Source", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/ExternalSources.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/ExternalSources.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/ExternalSources.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/ExternalSources.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/ExternalSources.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/ExternalSources.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/ExternalSources.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ExternalSources.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ExternalSources.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ExternalSources.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/ExternalSources.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/ExternalSources.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/ExternalSources.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/ExternalSources.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/ExternalSources.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/ExternalSources.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/ExternalSources.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/ExternalSources.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/ExternalSources.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "scala.xml.parsing.FactoryAdapter", "shortDescription" : "SAX adapter class, for use with Java SAX parser.", "members_class" : [{"label" : "processingInstruction", "tail" : "(target: String, data: String): Unit", "member" : "scala.xml.parsing.FactoryAdapter.processingInstruction", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#processingInstruction(target:String,data:String):Unit", "kind" : "def"}, {"label" : "endElement", "tail" : "(uri: String, _localName: String, qname: String): Unit", "member" : "scala.xml.parsing.FactoryAdapter.endElement", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#endElement(uri:String,_localName:String,qname:String):Unit", "kind" : "def"}, {"label" : "captureText", "tail" : "(): Unit", "member" : "scala.xml.parsing.FactoryAdapter.captureText", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#captureText():Unit", "kind" : "def"}, {"label" : "startElement", "tail" : "(uri: String, _localName: String, qname: String, attributes: Attributes): Unit", "member" : "scala.xml.parsing.FactoryAdapter.startElement", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#startElement(uri:String,_localName:String,qname:String,attributes:org.xml.sax.Attributes):Unit", "kind" : "def"}, {"label" : "characters", "tail" : "(ch: Array[Char], offset: Int, length: Int): Unit", "member" : "scala.xml.parsing.FactoryAdapter.characters", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#characters(ch:Array[Char],offset:Int,length:Int):Unit", "kind" : "def"}, {"label" : "normalizeWhitespace", "tail" : ": Boolean", "member" : "scala.xml.parsing.FactoryAdapter.normalizeWhitespace", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#normalizeWhitespace:Boolean", "kind" : "val"}, {"label" : "capture", "tail" : ": Boolean", "member" : "scala.xml.parsing.FactoryAdapter.capture", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#capture:Boolean", "kind" : "var"}, {"label" : "curTag", "tail" : ": String", "member" : "scala.xml.parsing.FactoryAdapter.curTag", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#curTag:String", "kind" : "var"}, {"label" : "scopeStack", "tail" : ": Stack[NamespaceBinding]", "member" : "scala.xml.parsing.FactoryAdapter.scopeStack", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#scopeStack:scala.collection.mutable.Stack[scala.xml.NamespaceBinding]", "kind" : "var"}, {"label" : "tagStack", "tail" : ": Stack[String]", "member" : "scala.xml.parsing.FactoryAdapter.tagStack", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#tagStack:scala.collection.mutable.Stack[String]", "kind" : "val"}, {"label" : "hStack", "tail" : ": Stack[Node]", "member" : "scala.xml.parsing.FactoryAdapter.hStack", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#hStack:scala.collection.mutable.Stack[scala.xml.Node]", "kind" : "val"}, {"label" : "attribStack", "tail" : ": Stack[MetaData]", "member" : "scala.xml.parsing.FactoryAdapter.attribStack", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#attribStack:scala.collection.mutable.Stack[scala.xml.MetaData]", "kind" : "val"}, {"label" : "buffer", "tail" : ": collection.mutable.StringBuilder", "member" : "scala.xml.parsing.FactoryAdapter.buffer", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#buffer:StringBuilder", "kind" : "val"}, {"label" : "rootElem", "tail" : ": Node", "member" : "scala.xml.parsing.FactoryAdapter.rootElem", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#rootElem:scala.xml.Node", "kind" : "var"}, {"member" : "scala.xml.parsing.FactoryAdapter#<init>", "error" : "unsupported entity"}, {"label" : "loadString", "tail" : "(string: String): Node", "member" : "scala.xml.factory.XMLLoader.loadString", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#loadString(string:String):T", "kind" : "def"}, {"label" : "load", "tail" : "(url: URL): Node", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#load(url:java.net.URL):T", "kind" : "def"}, {"label" : "load", "tail" : "(source: InputSource): Node", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#load(source:scala.xml.InputSource):T", "kind" : "def"}, {"label" : "load", "tail" : "(sysID: String): Node", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#load(sysID:String):T", "kind" : "def"}, {"label" : "load", "tail" : "(reader: Reader): Node", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#load(reader:java.io.Reader):T", "kind" : "def"}, {"label" : "load", "tail" : "(is: InputStream): Node", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#load(is:java.io.InputStream):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(name: String): Node", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#loadFile(name:String):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(fd: FileDescriptor): Node", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#loadFile(fd:java.io.FileDescriptor):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(file: File): Node", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#loadFile(file:java.io.File):T", "kind" : "def"}, {"label" : "loadXML", "tail" : "(source: InputSource, parser: SAXParser): Node", "member" : "scala.xml.factory.XMLLoader.loadXML", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#loadXML(source:scala.xml.InputSource,parser:scala.xml.SAXParser):T", "kind" : "def"}, {"label" : "parser", "tail" : "(): SAXParser", "member" : "scala.xml.factory.XMLLoader.parser", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#parser:scala.xml.SAXParser", "kind" : "def"}, {"label" : "adapter", "tail" : "(): FactoryAdapter", "member" : "scala.xml.factory.XMLLoader.adapter", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#adapter:scala.xml.parsing.FactoryAdapter", "kind" : "def"}, {"label" : "fatalError", "tail" : "(arg0: org.xml.sax.SAXParseException): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.fatalError", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#fatalError(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(arg0: org.xml.sax.SAXParseException): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.error", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#error(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(arg0: org.xml.sax.SAXParseException): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.warning", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#warning(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "skippedEntity", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.skippedEntity", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#skippedEntity(x$1:String):Unit", "kind" : "def"}, {"label" : "ignorableWhitespace", "tail" : "(arg0: Array[Char], arg1: Int, arg2: Int): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.ignorableWhitespace", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#ignorableWhitespace(x$1:Array[Char],x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "endPrefixMapping", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.endPrefixMapping", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#endPrefixMapping(x$1:String):Unit", "kind" : "def"}, {"label" : "startPrefixMapping", "tail" : "(arg0: String, arg1: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.startPrefixMapping", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#startPrefixMapping(x$1:String,x$2:String):Unit", "kind" : "def"}, {"label" : "endDocument", "tail" : "(): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.endDocument", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#endDocument():Unit", "kind" : "def"}, {"label" : "startDocument", "tail" : "(): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.startDocument", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#startDocument():Unit", "kind" : "def"}, {"label" : "setDocumentLocator", "tail" : "(arg0: Locator): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.setDocumentLocator", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#setDocumentLocator(x$1:org.xml.sax.Locator):Unit", "kind" : "def"}, {"label" : "unparsedEntityDecl", "tail" : "(arg0: String, arg1: String, arg2: String, arg3: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.unparsedEntityDecl", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#unparsedEntityDecl(x$1:String,x$2:String,x$3:String,x$4:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(arg0: String, arg1: String, arg2: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.notationDecl", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#notationDecl(x$1:String,x$2:String,x$3:String):Unit", "kind" : "def"}, {"label" : "resolveEntity", "tail" : "(arg0: String, arg1: String): org.xml.sax.InputSource", "member" : "org.xml.sax.helpers.DefaultHandler.resolveEntity", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#resolveEntity(x$1:String,x$2:String):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/FactoryAdapter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createProcInstr", "tail" : "(target: String, data: String): collection.Seq[ProcInstr]", "member" : "scala.xml.parsing.FactoryAdapter.createProcInstr", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#createProcInstr(target:String,data:String):scala.collection.Seq[scala.xml.ProcInstr]", "kind" : "abstract def"}, {"label" : "createText", "tail" : "(text: String): Text", "member" : "scala.xml.parsing.FactoryAdapter.createText", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#createText(text:String):scala.xml.Text", "kind" : "abstract def"}, {"label" : "createNode", "tail" : "(pre: String, elemName: String, attribs: MetaData, scope: NamespaceBinding, chIter: List[Node]): Node", "member" : "scala.xml.parsing.FactoryAdapter.createNode", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#createNode(pre:String,elemName:String,attribs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,chIter:List[scala.xml.Node]):scala.xml.Node", "kind" : "abstract def"}, {"label" : "nodeContainsText", "tail" : "(localName: String): Boolean", "member" : "scala.xml.parsing.FactoryAdapter.nodeContainsText", "link" : "scala\/xml\/parsing\/FactoryAdapter.html#nodeContainsText(localName:String):Boolean", "kind" : "abstract def"}], "class" : "scala\/xml\/parsing\/FactoryAdapter.html", "kind" : "class"}, {"name" : "scala.xml.parsing.FatalError", "shortDescription" : "!!! This is poorly named, but I guess it's in the API.", "members_case class" : [{"member" : "scala.xml.parsing.FatalError#<init>", "error" : "unsupported entity"}, {"label" : "msg", "tail" : ": String", "member" : "scala.xml.parsing.FatalError.msg", "link" : "scala\/xml\/parsing\/FatalError.html#msg:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/parsing\/FatalError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[java.lang.Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scala\/xml\/parsing\/FatalError.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: java.lang.Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scala\/xml\/parsing\/FatalError.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scala\/xml\/parsing\/FatalError.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scala\/xml\/parsing\/FatalError.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scala\/xml\/parsing\/FatalError.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/parsing\/FatalError.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/parsing\/FatalError.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/parsing\/FatalError.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scala\/xml\/parsing\/FatalError.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: java.lang.Throwable): java.lang.Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scala\/xml\/parsing\/FatalError.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scala\/xml\/parsing\/FatalError.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scala\/xml\/parsing\/FatalError.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scala\/xml\/parsing\/FatalError.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/FatalError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/FatalError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/FatalError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/FatalError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/FatalError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/FatalError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/FatalError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/FatalError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/FatalError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/FatalError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/FatalError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/FatalError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/FatalError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/FatalError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/FatalError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/FatalError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/parsing\/FatalError.html", "kind" : "case class"}, {"name" : "scala.xml.parsing.MarkupHandler", "shortDescription" : "class that handles markup - provides callback methods to MarkupParser.", "members_class" : [{"label" : "log", "tail" : "(msg: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.log", "link" : "scala\/xml\/parsing\/MarkupHandler.html#log(msg:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(notat: String, extID: ExternalID): Unit", "member" : "scala.xml.parsing.MarkupHandler.notationDecl", "link" : "scala\/xml\/parsing\/MarkupHandler.html#notationDecl(notat:String,extID:scala.xml.dtd.ExternalID):Unit", "kind" : "def"}, {"label" : "unparsedEntityDecl", "tail" : "(name: String, extID: ExternalID, notat: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.unparsedEntityDecl", "link" : "scala\/xml\/parsing\/MarkupHandler.html#unparsedEntityDecl(name:String,extID:scala.xml.dtd.ExternalID,notat:String):Unit", "kind" : "def"}, {"label" : "peReference", "tail" : "(name: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.peReference", "link" : "scala\/xml\/parsing\/MarkupHandler.html#peReference(name:String):Unit", "kind" : "def"}, {"label" : "parsedEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parsedEntityDecl", "link" : "scala\/xml\/parsing\/MarkupHandler.html#parsedEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "parameterEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parameterEntityDecl", "link" : "scala\/xml\/parsing\/MarkupHandler.html#parameterEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "attListDecl", "tail" : "(name: String, attList: List[AttrDecl]): Unit", "member" : "scala.xml.parsing.MarkupHandler.attListDecl", "link" : "scala\/xml\/parsing\/MarkupHandler.html#attListDecl(name:String,attList:List[scala.xml.dtd.AttrDecl]):Unit", "kind" : "def"}, {"label" : "elemDecl", "tail" : "(n: String, cmstr: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemDecl", "link" : "scala\/xml\/parsing\/MarkupHandler.html#elemDecl(n:String,cmstr:String):Unit", "kind" : "def"}, {"label" : "elemEnd", "tail" : "(pos: Int, pre: String, label: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemEnd", "link" : "scala\/xml\/parsing\/MarkupHandler.html#elemEnd(pos:Int,pre:String,label:String):Unit", "kind" : "def"}, {"label" : "elemStart", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemStart", "link" : "scala\/xml\/parsing\/MarkupHandler.html#elemStart(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):Unit", "kind" : "def"}, {"label" : "endDTD", "tail" : "(n: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.endDTD", "link" : "scala\/xml\/parsing\/MarkupHandler.html#endDTD(n:String):Unit", "kind" : "def"}, {"label" : "replacementText", "tail" : "(entityName: String): Source", "member" : "scala.xml.parsing.MarkupHandler.replacementText", "link" : "scala\/xml\/parsing\/MarkupHandler.html#replacementText(entityName:String):scala.io.Source", "kind" : "def"}, {"label" : "lookupElemDecl", "tail" : "(Label: String): ElemDecl", "member" : "scala.xml.parsing.MarkupHandler.lookupElemDecl", "link" : "scala\/xml\/parsing\/MarkupHandler.html#lookupElemDecl(Label:String):scala.xml.dtd.ElemDecl", "kind" : "def"}, {"label" : "ent", "tail" : ": Map[String, EntityDecl]", "member" : "scala.xml.parsing.MarkupHandler.ent", "link" : "scala\/xml\/parsing\/MarkupHandler.html#ent:scala.collection.mutable.Map[String,scala.xml.dtd.EntityDecl]", "kind" : "var"}, {"label" : "decls", "tail" : ": List[Decl]", "member" : "scala.xml.parsing.MarkupHandler.decls", "link" : "scala\/xml\/parsing\/MarkupHandler.html#decls:List[scala.xml.dtd.Decl]", "kind" : "var"}, {"label" : "isValidating", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupHandler.isValidating", "link" : "scala\/xml\/parsing\/MarkupHandler.html#isValidating:Boolean", "kind" : "val"}, {"member" : "scala.xml.parsing.MarkupHandler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/MarkupHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/MarkupHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/MarkupHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/MarkupHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/MarkupHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/MarkupHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/MarkupHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/MarkupHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/MarkupHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/MarkupHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/MarkupHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/MarkupHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/MarkupHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/MarkupHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/MarkupHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/MarkupHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/MarkupHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/MarkupHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/MarkupHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reportSyntaxError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.reportSyntaxError", "link" : "scala\/xml\/parsing\/MarkupHandler.html#reportSyntaxError(pos:Int,str:String):Unit", "kind" : "abstract def"}, {"label" : "text", "tail" : "(pos: Int, txt: String): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.text", "link" : "scala\/xml\/parsing\/MarkupHandler.html#text(pos:Int,txt:String):scala.xml.NodeSeq", "kind" : "abstract def"}, {"label" : "entityRef", "tail" : "(pos: Int, n: String): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.entityRef", "link" : "scala\/xml\/parsing\/MarkupHandler.html#entityRef(pos:Int,n:String):scala.xml.NodeSeq", "kind" : "abstract def"}, {"label" : "comment", "tail" : "(pos: Int, comment: String): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.comment", "link" : "scala\/xml\/parsing\/MarkupHandler.html#comment(pos:Int,comment:String):scala.xml.NodeSeq", "kind" : "abstract def"}, {"label" : "procInstr", "tail" : "(pos: Int, target: String, txt: String): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.procInstr", "link" : "scala\/xml\/parsing\/MarkupHandler.html#procInstr(pos:Int,target:String,txt:String):scala.xml.NodeSeq", "kind" : "abstract def"}, {"label" : "elem", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding, empty: Boolean, args: NodeSeq): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.elem", "link" : "scala\/xml\/parsing\/MarkupHandler.html#elem(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,empty:Boolean,args:scala.xml.NodeSeq):scala.xml.NodeSeq", "kind" : "abstract def"}], "class" : "scala\/xml\/parsing\/MarkupHandler.html", "kind" : "class"}, {"name" : "scala.xml.parsing.MarkupParser", "trait" : "scala\/xml\/parsing\/MarkupParser.html", "kind" : "trait", "members_trait" : [{"label" : "pop", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.pop", "link" : "scala\/xml\/parsing\/MarkupParser.html#pop():Unit", "kind" : "def"}, {"label" : "pushExternal", "tail" : "(systemId: String): Unit", "member" : "scala.xml.parsing.MarkupParser.pushExternal", "link" : "scala\/xml\/parsing\/MarkupParser.html#pushExternal(systemId:String):Unit", "kind" : "def"}, {"label" : "push", "tail" : "(entityName: String): Unit", "member" : "scala.xml.parsing.MarkupParser.push", "link" : "scala\/xml\/parsing\/MarkupParser.html#push(entityName:String):Unit", "kind" : "def"}, {"label" : "reportValidationError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.MarkupParser.reportValidationError", "link" : "scala\/xml\/parsing\/MarkupParser.html#reportValidationError(pos:Int,str:String):Unit", "kind" : "def"}, {"label" : "reportSyntaxError", "tail" : "(str: String): Unit", "member" : "scala.xml.parsing.MarkupParser.reportSyntaxError", "link" : "scala\/xml\/parsing\/MarkupParser.html#reportSyntaxError(str:String):Unit", "kind" : "def"}, {"label" : "reportSyntaxError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.MarkupParser.reportSyntaxError", "link" : "scala\/xml\/parsing\/MarkupParser.html#reportSyntaxError(pos:Int,str:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.notationDecl", "link" : "scala\/xml\/parsing\/MarkupParser.html#notationDecl():Unit", "kind" : "def"}, {"label" : "entityDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.entityDecl", "link" : "scala\/xml\/parsing\/MarkupParser.html#entityDecl():Unit", "kind" : "def"}, {"label" : "attrDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.attrDecl", "link" : "scala\/xml\/parsing\/MarkupParser.html#attrDecl():Unit", "kind" : "def"}, {"label" : "elementDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.elementDecl", "link" : "scala\/xml\/parsing\/MarkupParser.html#elementDecl():Unit", "kind" : "def"}, {"label" : "intSubset", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.intSubset", "link" : "scala\/xml\/parsing\/MarkupParser.html#intSubset():Unit", "kind" : "def"}, {"label" : "markupDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.markupDecl", "link" : "scala\/xml\/parsing\/MarkupParser.html#markupDecl():Unit", "kind" : "def"}, {"label" : "markupDecl1", "tail" : "(): Any", "member" : "scala.xml.parsing.MarkupParser.markupDecl1", "link" : "scala\/xml\/parsing\/MarkupParser.html#markupDecl1():Any", "kind" : "def"}, {"label" : "extSubset", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.extSubset", "link" : "scala\/xml\/parsing\/MarkupParser.html#extSubset():Unit", "kind" : "def"}, {"label" : "pubidLiteral", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParser.pubidLiteral", "link" : "scala\/xml\/parsing\/MarkupParser.html#pubidLiteral():String", "kind" : "def"}, {"label" : "systemLiteral", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParser.systemLiteral", "link" : "scala\/xml\/parsing\/MarkupParser.html#systemLiteral():String", "kind" : "def"}, {"label" : "element1", "tail" : "(pscope: NamespaceBinding): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.element1", "link" : "scala\/xml\/parsing\/MarkupParser.html#element1(pscope:scala.xml.NamespaceBinding):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "element", "tail" : "(pscope: NamespaceBinding): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.element", "link" : "scala\/xml\/parsing\/MarkupParser.html#element(pscope:scala.xml.NamespaceBinding):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "parseDTD", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.parseDTD", "link" : "scala\/xml\/parsing\/MarkupParser.html#parseDTD():Unit", "kind" : "def"}, {"label" : "externalID", "tail" : "(): ExternalID", "member" : "scala.xml.parsing.MarkupParser.externalID", "link" : "scala\/xml\/parsing\/MarkupParser.html#externalID():scala.xml.dtd.ExternalID", "kind" : "def"}, {"label" : "content", "tail" : "(pscope: NamespaceBinding): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.content", "link" : "scala\/xml\/parsing\/MarkupParser.html#content(pscope:scala.xml.NamespaceBinding):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "content1", "tail" : "(pscope: NamespaceBinding, ts: NodeBuffer): Unit", "member" : "scala.xml.parsing.MarkupParser.content1", "link" : "scala\/xml\/parsing\/MarkupParser.html#content1(pscope:scala.xml.NamespaceBinding,ts:scala.xml.NodeBuffer):Unit", "kind" : "def"}, {"label" : "appendText", "tail" : "(pos: Int, ts: NodeBuffer, txt: String): Unit", "member" : "scala.xml.parsing.MarkupParser.appendText", "link" : "scala\/xml\/parsing\/MarkupParser.html#appendText(pos:Int,ts:scala.xml.NodeBuffer,txt:String):Unit", "kind" : "def"}, {"label" : "xComment", "tail" : "(): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.xComment", "link" : "scala\/xml\/parsing\/MarkupParser.html#xComment:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xCharData", "tail" : "(): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.xCharData", "link" : "scala\/xml\/parsing\/MarkupParser.html#xCharData:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xEntityValue", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParser.xEntityValue", "link" : "scala\/xml\/parsing\/MarkupParser.html#xEntityValue():String", "kind" : "def"}, {"label" : "xAttributes", "tail" : "(pscope: NamespaceBinding): (MetaData, NamespaceBinding)", "member" : "scala.xml.parsing.MarkupParser.xAttributes", "link" : "scala\/xml\/parsing\/MarkupParser.html#xAttributes(pscope:scala.xml.NamespaceBinding):(scala.xml.MetaData,scala.xml.NamespaceBinding)", "kind" : "def"}, {"label" : "nextch", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.nextch", "link" : "scala\/xml\/parsing\/MarkupParser.html#nextch():Unit", "kind" : "def"}, {"label" : "mkProcInstr", "tail" : "(position: Int, name: String, text: String): (MarkupParser.this)#ElementType", "member" : "scala.xml.parsing.MarkupParser.mkProcInstr", "link" : "scala\/xml\/parsing\/MarkupParser.html#mkProcInstr(position:Int,name:String,text:String):MarkupParser.this.ElementType", "kind" : "def"}, {"label" : "mkAttributes", "tail" : "(name: String, pscope: NamespaceBinding): (MarkupParser.this)#AttributesType", "member" : "scala.xml.parsing.MarkupParser.mkAttributes", "link" : "scala\/xml\/parsing\/MarkupParser.html#mkAttributes(name:String,pscope:scala.xml.NamespaceBinding):MarkupParser.this.AttributesType", "kind" : "def"}, {"label" : "ch_returning_nextch", "tail" : "(): Char", "member" : "scala.xml.parsing.MarkupParser.ch_returning_nextch", "link" : "scala\/xml\/parsing\/MarkupParser.html#ch_returning_nextch:Char", "kind" : "def"}, {"label" : "initialize", "tail" : "(): MarkupParser.this", "member" : "scala.xml.parsing.MarkupParser.initialize", "link" : "scala\/xml\/parsing\/MarkupParser.html#initialize:scala.xml.parsing.<refinement>.type", "kind" : "def"}, {"label" : "putChar", "tail" : "(c: Char): collection.mutable.StringBuilder", "member" : "scala.xml.parsing.MarkupParser.putChar", "link" : "scala\/xml\/parsing\/MarkupParser.html#putChar(c:Char):StringBuilder", "kind" : "def"}, {"label" : "document", "tail" : "(): Document", "member" : "scala.xml.parsing.MarkupParser.document", "link" : "scala\/xml\/parsing\/MarkupParser.html#document():scala.xml.Document", "kind" : "def"}, {"label" : "textDecl", "tail" : "(): (Option[String], Option[String])", "member" : "scala.xml.parsing.MarkupParser.textDecl", "link" : "scala\/xml\/parsing\/MarkupParser.html#textDecl():(Option[String],Option[String])", "kind" : "def"}, {"label" : "prolog", "tail" : "(): (Option[String], Option[String], Option[Boolean])", "member" : "scala.xml.parsing.MarkupParser.prolog", "link" : "scala\/xml\/parsing\/MarkupParser.html#prolog():(Option[String],Option[String],Option[Boolean])", "kind" : "def"}, {"label" : "xmlProcInstr", "tail" : "(): MetaData", "member" : "scala.xml.parsing.MarkupParser.xmlProcInstr", "link" : "scala\/xml\/parsing\/MarkupParser.html#xmlProcInstr():scala.xml.MetaData", "kind" : "def"}, {"label" : "eof", "tail" : "(): Boolean", "member" : "scala.xml.parsing.MarkupParser.eof", "link" : "scala\/xml\/parsing\/MarkupParser.html#eof:Boolean", "kind" : "def"}, {"label" : "doc", "tail" : ": Document", "member" : "scala.xml.parsing.MarkupParser.doc", "link" : "scala\/xml\/parsing\/MarkupParser.html#doc:scala.xml.Document", "kind" : "val"}, {"label" : "dtd", "tail" : ": DTD", "member" : "scala.xml.parsing.MarkupParser.dtd", "link" : "scala\/xml\/parsing\/MarkupParser.html#dtd:scala.xml.dtd.DTD", "kind" : "val"}, {"label" : "cbuf", "tail" : ": collection.mutable.StringBuilder", "member" : "scala.xml.parsing.MarkupParser.cbuf", "link" : "scala\/xml\/parsing\/MarkupParser.html#cbuf:StringBuilder", "kind" : "val"}, {"label" : "ch", "tail" : "(): Char", "member" : "scala.xml.parsing.MarkupParser.ch", "link" : "scala\/xml\/parsing\/MarkupParser.html#ch:Char", "kind" : "def"}, {"label" : "lastChRead", "tail" : ": Char", "member" : "scala.xml.parsing.MarkupParser.lastChRead", "link" : "scala\/xml\/parsing\/MarkupParser.html#lastChRead:Char", "kind" : "val"}, {"label" : "reachedEof", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupParser.reachedEof", "link" : "scala\/xml\/parsing\/MarkupParser.html#reachedEof:Boolean", "kind" : "val"}, {"label" : "nextChNeeded", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupParser.nextChNeeded", "link" : "scala\/xml\/parsing\/MarkupParser.html#nextChNeeded:Boolean", "kind" : "val"}, {"label" : "tmppos", "tail" : ": Int", "member" : "scala.xml.parsing.MarkupParser.tmppos", "link" : "scala\/xml\/parsing\/MarkupParser.html#tmppos:Int", "kind" : "val"}, {"label" : "extIndex", "tail" : ": Int", "member" : "scala.xml.parsing.MarkupParser.extIndex", "link" : "scala\/xml\/parsing\/MarkupParser.html#extIndex:Int", "kind" : "val"}, {"label" : "pos", "tail" : ": Int", "member" : "scala.xml.parsing.MarkupParser.pos", "link" : "scala\/xml\/parsing\/MarkupParser.html#pos:Int", "kind" : "val"}, {"label" : "inpStack", "tail" : ": List[Source]", "member" : "scala.xml.parsing.MarkupParser.inpStack", "link" : "scala\/xml\/parsing\/MarkupParser.html#inpStack:List[scala.io.Source]", "kind" : "val"}, {"label" : "lookahead", "tail" : "(): BufferedIterator[Char]", "member" : "scala.xml.parsing.MarkupParser.lookahead", "link" : "scala\/xml\/parsing\/MarkupParser.html#lookahead():BufferedIterator[Char]", "kind" : "def"}, {"label" : "curInput", "tail" : ": Source", "member" : "scala.xml.parsing.MarkupParser.curInput", "link" : "scala\/xml\/parsing\/MarkupParser.html#curInput:scala.io.Source", "kind" : "val"}, {"label" : "xHandleError", "tail" : "(that: Char, msg: String): Unit", "member" : "scala.xml.parsing.MarkupParser.xHandleError", "link" : "scala\/xml\/parsing\/MarkupParser.html#xHandleError(that:Char,msg:String):Unit", "kind" : "def"}, {"label" : "errorNoEnd", "tail" : "(tag: String): Nothing", "member" : "scala.xml.parsing.MarkupParser.errorNoEnd", "link" : "scala\/xml\/parsing\/MarkupParser.html#errorNoEnd(tag:String):Nothing", "kind" : "def"}, {"label" : "truncatedError", "tail" : "(msg: String): Nothing", "member" : "scala.xml.parsing.MarkupParser.truncatedError", "link" : "scala\/xml\/parsing\/MarkupParser.html#truncatedError(msg:String):Nothing", "kind" : "def"}, {"label" : "NamespaceType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.NamespaceType", "link" : "scala\/xml\/parsing\/MarkupParser.html#NamespaceType=scala.xml.NamespaceBinding", "kind" : "type"}, {"label" : "AttributesType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.AttributesType", "link" : "scala\/xml\/parsing\/MarkupParser.html#AttributesType=(scala.xml.MetaData,scala.xml.NamespaceBinding)", "kind" : "type"}, {"label" : "ElementType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.ElementType", "link" : "scala\/xml\/parsing\/MarkupParser.html#ElementType=scala.xml.NodeSeq", "kind" : "type"}, {"label" : "InputType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.InputType", "link" : "scala\/xml\/parsing\/MarkupParser.html#InputType=scala.io.Source", "kind" : "type"}, {"label" : "PositionType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.PositionType", "link" : "scala\/xml\/parsing\/MarkupParser.html#PositionType=Int", "kind" : "type"}, {"label" : "xTakeUntil", "tail" : "(handler: ((MarkupParser.this)#PositionType, String) => T, positioner: () => (MarkupParser.this)#PositionType, until: String): T", "member" : "scala.xml.parsing.MarkupParserCommon.xTakeUntil", "link" : "scala\/xml\/parsing\/MarkupParser.html#xTakeUntil[T](handler:(MarkupParserCommon.this.PositionType,String)=>T,positioner:()=>MarkupParserCommon.this.PositionType,until:String):T", "kind" : "def"}, {"label" : "saving", "tail" : "(getter: A, setter: (A) => Unit)(body: => B): B", "member" : "scala.xml.parsing.MarkupParserCommon.saving", "link" : "scala\/xml\/parsing\/MarkupParser.html#saving[A,B](getter:A,setter:A=>Unit)(body:=>B):B", "kind" : "def"}, {"label" : "returning", "tail" : "(x: T)(f: (T) => Unit): T", "member" : "scala.xml.parsing.MarkupParserCommon.returning", "link" : "scala\/xml\/parsing\/MarkupParser.html#returning[T](x:T)(f:T=>Unit):T", "kind" : "def"}, {"label" : "xSpace", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xSpace", "link" : "scala\/xml\/parsing\/MarkupParser.html#xSpace():Unit", "kind" : "def"}, {"label" : "xSpaceOpt", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xSpaceOpt", "link" : "scala\/xml\/parsing\/MarkupParser.html#xSpaceOpt():Unit", "kind" : "def"}, {"label" : "xEQ", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xEQ", "link" : "scala\/xml\/parsing\/MarkupParser.html#xEQ():Unit", "kind" : "def"}, {"label" : "xToken", "tail" : "(that: collection.Seq[Char]): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xToken", "link" : "scala\/xml\/parsing\/MarkupParser.html#xToken(that:scala.collection.Seq[Char]):Unit", "kind" : "def"}, {"label" : "xToken", "tail" : "(that: Char): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xToken", "link" : "scala\/xml\/parsing\/MarkupParser.html#xToken(that:Char):Unit", "kind" : "def"}, {"label" : "errorAndResult", "tail" : "(msg: String, x: T): T", "member" : "scala.xml.parsing.MarkupParserCommon.errorAndResult", "link" : "scala\/xml\/parsing\/MarkupParser.html#errorAndResult[T](msg:String,x:T):T", "kind" : "def"}, {"label" : "xCharRef", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParserCommon.xCharRef", "link" : "scala\/xml\/parsing\/MarkupParser.html#xCharRef:String", "kind" : "def"}, {"label" : "xCharRef", "tail" : "(it: Iterator[Char]): String", "member" : "scala.xml.parsing.MarkupParserCommon.xCharRef", "link" : "scala\/xml\/parsing\/MarkupParser.html#xCharRef(it:Iterator[Char]):String", "kind" : "def"}, {"label" : "xCharRef", "tail" : "(ch: () => Char, nextch: () => Unit): String", "member" : "scala.xml.parsing.MarkupParserCommon.xCharRef", "link" : "scala\/xml\/parsing\/MarkupParser.html#xCharRef(ch:()=>Char,nextch:()=>Unit):String", "kind" : "def"}, {"label" : "xName", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParserCommon.xName", "link" : "scala\/xml\/parsing\/MarkupParser.html#xName:String", "kind" : "def"}, {"label" : "xEndTag", "tail" : "(startName: String): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xEndTag", "link" : "scala\/xml\/parsing\/MarkupParser.html#xEndTag(startName:String):Unit", "kind" : "def"}, {"label" : "xAttributeValue", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParserCommon.xAttributeValue", "link" : "scala\/xml\/parsing\/MarkupParser.html#xAttributeValue():String", "kind" : "def"}, {"label" : "xAttributeValue", "tail" : "(endCh: Char): String", "member" : "scala.xml.parsing.MarkupParserCommon.xAttributeValue", "link" : "scala\/xml\/parsing\/MarkupParser.html#xAttributeValue(endCh:Char):String", "kind" : "def"}, {"label" : "xProcInstr", "tail" : "(): (MarkupParser.this)#ElementType", "member" : "scala.xml.parsing.MarkupParserCommon.xProcInstr", "link" : "scala\/xml\/parsing\/MarkupParser.html#xProcInstr:MarkupParserCommon.this.ElementType", "kind" : "def"}, {"label" : "xTag", "tail" : "(pscope: (MarkupParser.this)#NamespaceType): (String, (MarkupParser.this)#AttributesType)", "member" : "scala.xml.parsing.MarkupParserCommon.xTag", "link" : "scala\/xml\/parsing\/MarkupParser.html#xTag(pscope:MarkupParserCommon.this.NamespaceType):(String,MarkupParserCommon.this.AttributesType)", "kind" : "def"}, {"label" : "unreachable", "tail" : "(): Nothing", "member" : "scala.xml.parsing.MarkupParserCommon.unreachable", "link" : "scala\/xml\/parsing\/MarkupParser.html#unreachable:Nothing", "kind" : "def"}, {"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/parsing\/MarkupParser.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/parsing\/MarkupParser.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/parsing\/MarkupParser.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/parsing\/MarkupParser.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/parsing\/MarkupParser.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/parsing\/MarkupParser.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/parsing\/MarkupParser.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/parsing\/MarkupParser.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/parsing\/MarkupParser.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/parsing\/MarkupParser.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/parsing\/MarkupParser.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/MarkupParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/MarkupParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/MarkupParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/MarkupParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/MarkupParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/MarkupParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/MarkupParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/MarkupParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/MarkupParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/MarkupParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/MarkupParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/MarkupParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/MarkupParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/MarkupParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/MarkupParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/MarkupParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/MarkupParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/MarkupParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/MarkupParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "externalSource", "tail" : "(systemLiteral: String): Source", "member" : "scala.xml.parsing.MarkupParser.externalSource", "link" : "scala\/xml\/parsing\/MarkupParser.html#externalSource(systemLiteral:String):scala.io.Source", "kind" : "abstract def"}, {"label" : "preserveWS", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupParser.preserveWS", "link" : "scala\/xml\/parsing\/MarkupParser.html#preserveWS:Boolean", "kind" : "abstract val"}, {"label" : "input", "tail" : ": Source", "member" : "scala.xml.parsing.MarkupParser.input", "link" : "scala\/xml\/parsing\/MarkupParser.html#input:scala.io.Source", "kind" : "abstract val"}], "shortDescription" : "An XML parser."}, {"name" : "scala.xml.parsing.NoBindingFactoryAdapter", "shortDescription" : "nobinding adaptor providing callbacks to parser to create elements.", "members_class" : [{"label" : "createProcInstr", "tail" : "(target: String, data: String): collection.Seq[ProcInstr]", "member" : "scala.xml.parsing.NoBindingFactoryAdapter.createProcInstr", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#createProcInstr(target:String,data:String):scala.collection.Seq[scala.xml.ProcInstr]", "kind" : "def"}, {"label" : "createText", "tail" : "(text: String): Text", "member" : "scala.xml.parsing.NoBindingFactoryAdapter.createText", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#createText(text:String):scala.xml.Text", "kind" : "def"}, {"label" : "createNode", "tail" : "(pre: String, label: String, attrs: MetaData, scope: NamespaceBinding, children: List[Node]): Elem", "member" : "scala.xml.parsing.NoBindingFactoryAdapter.createNode", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#createNode(pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:List[scala.xml.Node]):scala.xml.Elem", "kind" : "def"}, {"label" : "create", "tail" : "(pre: String, label: String, attrs: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): Elem", "member" : "scala.xml.parsing.NoBindingFactoryAdapter.create", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#create(pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):scala.xml.Elem", "kind" : "def"}, {"label" : "nodeContainsText", "tail" : "(label: String): Boolean", "member" : "scala.xml.parsing.NoBindingFactoryAdapter.nodeContainsText", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#nodeContainsText(label:String):Boolean", "kind" : "def"}, {"member" : "scala.xml.parsing.NoBindingFactoryAdapter#<init>", "error" : "unsupported entity"}, {"label" : "makeProcInstr", "tail" : "(t: String, s: String): collection.Seq[ProcInstr]", "member" : "scala.xml.factory.NodeFactory.makeProcInstr", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#makeProcInstr(t:String,s:String):scala.collection.Seq[scala.xml.ProcInstr]", "kind" : "def"}, {"label" : "makeComment", "tail" : "(s: String): collection.Seq[Comment]", "member" : "scala.xml.factory.NodeFactory.makeComment", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#makeComment(s:String):scala.collection.Seq[scala.xml.Comment]", "kind" : "def"}, {"label" : "makeText", "tail" : "(s: String): Text", "member" : "scala.xml.factory.NodeFactory.makeText", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#makeText(s:String):scala.xml.Text", "kind" : "def"}, {"label" : "makeNode", "tail" : "(pre: String, name: String, attrSeq: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): Elem", "member" : "scala.xml.factory.NodeFactory.makeNode", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#makeNode(pre:String,name:String,attrSeq:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):A", "kind" : "def"}, {"label" : "nodeEquals", "tail" : "(n: Node, pre: String, name: String, attrSeq: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): Boolean", "member" : "scala.xml.factory.NodeFactory.nodeEquals", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#nodeEquals(n:scala.xml.Node,pre:String,name:String,attrSeq:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):Boolean", "kind" : "def"}, {"label" : "eqElements", "tail" : "(ch1: collection.Seq[Node], ch2: collection.Seq[Node]): Boolean", "member" : "scala.xml.factory.NodeFactory.eqElements", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#eqElements(ch1:scala.collection.Seq[scala.xml.Node],ch2:scala.collection.Seq[scala.xml.Node]):Boolean", "kind" : "def"}, {"label" : "construct", "tail" : "(hash: Int, old: List[Elem], pre: String, name: String, attrSeq: MetaData, scope: NamespaceBinding, children: collection.Seq[Node]): Elem", "member" : "scala.xml.factory.NodeFactory.construct", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#construct(hash:Int,old:List[A],pre:String,name:String,attrSeq:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,children:scala.collection.Seq[scala.xml.Node]):A", "kind" : "def"}, {"label" : "cache", "tail" : ": HashMap[Int, List[Elem]]", "member" : "scala.xml.factory.NodeFactory.cache", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#cache:scala.collection.mutable.HashMap[Int,List[A]]", "kind" : "val"}, {"label" : "ignoreProcInstr", "tail" : ": Boolean", "member" : "scala.xml.factory.NodeFactory.ignoreProcInstr", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#ignoreProcInstr:Boolean", "kind" : "val"}, {"label" : "ignoreComments", "tail" : ": Boolean", "member" : "scala.xml.factory.NodeFactory.ignoreComments", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#ignoreComments:Boolean", "kind" : "val"}, {"label" : "processingInstruction", "tail" : "(target: String, data: String): Unit", "member" : "scala.xml.parsing.FactoryAdapter.processingInstruction", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#processingInstruction(target:String,data:String):Unit", "kind" : "def"}, {"label" : "endElement", "tail" : "(uri: String, _localName: String, qname: String): Unit", "member" : "scala.xml.parsing.FactoryAdapter.endElement", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#endElement(uri:String,_localName:String,qname:String):Unit", "kind" : "def"}, {"label" : "captureText", "tail" : "(): Unit", "member" : "scala.xml.parsing.FactoryAdapter.captureText", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#captureText():Unit", "kind" : "def"}, {"label" : "startElement", "tail" : "(uri: String, _localName: String, qname: String, attributes: Attributes): Unit", "member" : "scala.xml.parsing.FactoryAdapter.startElement", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#startElement(uri:String,_localName:String,qname:String,attributes:org.xml.sax.Attributes):Unit", "kind" : "def"}, {"label" : "characters", "tail" : "(ch: Array[Char], offset: Int, length: Int): Unit", "member" : "scala.xml.parsing.FactoryAdapter.characters", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#characters(ch:Array[Char],offset:Int,length:Int):Unit", "kind" : "def"}, {"label" : "normalizeWhitespace", "tail" : ": Boolean", "member" : "scala.xml.parsing.FactoryAdapter.normalizeWhitespace", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#normalizeWhitespace:Boolean", "kind" : "val"}, {"label" : "capture", "tail" : ": Boolean", "member" : "scala.xml.parsing.FactoryAdapter.capture", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#capture:Boolean", "kind" : "var"}, {"label" : "curTag", "tail" : ": String", "member" : "scala.xml.parsing.FactoryAdapter.curTag", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#curTag:String", "kind" : "var"}, {"label" : "scopeStack", "tail" : ": Stack[NamespaceBinding]", "member" : "scala.xml.parsing.FactoryAdapter.scopeStack", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#scopeStack:scala.collection.mutable.Stack[scala.xml.NamespaceBinding]", "kind" : "var"}, {"label" : "tagStack", "tail" : ": Stack[String]", "member" : "scala.xml.parsing.FactoryAdapter.tagStack", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#tagStack:scala.collection.mutable.Stack[String]", "kind" : "val"}, {"label" : "hStack", "tail" : ": Stack[Node]", "member" : "scala.xml.parsing.FactoryAdapter.hStack", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#hStack:scala.collection.mutable.Stack[scala.xml.Node]", "kind" : "val"}, {"label" : "attribStack", "tail" : ": Stack[MetaData]", "member" : "scala.xml.parsing.FactoryAdapter.attribStack", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#attribStack:scala.collection.mutable.Stack[scala.xml.MetaData]", "kind" : "val"}, {"label" : "buffer", "tail" : ": collection.mutable.StringBuilder", "member" : "scala.xml.parsing.FactoryAdapter.buffer", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#buffer:StringBuilder", "kind" : "val"}, {"label" : "rootElem", "tail" : ": Node", "member" : "scala.xml.parsing.FactoryAdapter.rootElem", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#rootElem:scala.xml.Node", "kind" : "var"}, {"label" : "loadString", "tail" : "(string: String): Node", "member" : "scala.xml.factory.XMLLoader.loadString", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#loadString(string:String):T", "kind" : "def"}, {"label" : "load", "tail" : "(url: URL): Node", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#load(url:java.net.URL):T", "kind" : "def"}, {"label" : "load", "tail" : "(source: InputSource): Node", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#load(source:scala.xml.InputSource):T", "kind" : "def"}, {"label" : "load", "tail" : "(sysID: String): Node", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#load(sysID:String):T", "kind" : "def"}, {"label" : "load", "tail" : "(reader: Reader): Node", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#load(reader:java.io.Reader):T", "kind" : "def"}, {"label" : "load", "tail" : "(is: InputStream): Node", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#load(is:java.io.InputStream):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(name: String): Node", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#loadFile(name:String):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(fd: FileDescriptor): Node", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#loadFile(fd:java.io.FileDescriptor):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(file: File): Node", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#loadFile(file:java.io.File):T", "kind" : "def"}, {"label" : "loadXML", "tail" : "(source: InputSource, parser: SAXParser): Node", "member" : "scala.xml.factory.XMLLoader.loadXML", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#loadXML(source:scala.xml.InputSource,parser:scala.xml.SAXParser):T", "kind" : "def"}, {"label" : "parser", "tail" : "(): SAXParser", "member" : "scala.xml.factory.XMLLoader.parser", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#parser:scala.xml.SAXParser", "kind" : "def"}, {"label" : "adapter", "tail" : "(): FactoryAdapter", "member" : "scala.xml.factory.XMLLoader.adapter", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#adapter:scala.xml.parsing.FactoryAdapter", "kind" : "def"}, {"label" : "fatalError", "tail" : "(arg0: org.xml.sax.SAXParseException): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.fatalError", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#fatalError(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(arg0: org.xml.sax.SAXParseException): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.error", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#error(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(arg0: org.xml.sax.SAXParseException): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.warning", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#warning(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "skippedEntity", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.skippedEntity", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#skippedEntity(x$1:String):Unit", "kind" : "def"}, {"label" : "ignorableWhitespace", "tail" : "(arg0: Array[Char], arg1: Int, arg2: Int): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.ignorableWhitespace", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#ignorableWhitespace(x$1:Array[Char],x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "endPrefixMapping", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.endPrefixMapping", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#endPrefixMapping(x$1:String):Unit", "kind" : "def"}, {"label" : "startPrefixMapping", "tail" : "(arg0: String, arg1: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.startPrefixMapping", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#startPrefixMapping(x$1:String,x$2:String):Unit", "kind" : "def"}, {"label" : "endDocument", "tail" : "(): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.endDocument", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#endDocument():Unit", "kind" : "def"}, {"label" : "startDocument", "tail" : "(): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.startDocument", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#startDocument():Unit", "kind" : "def"}, {"label" : "setDocumentLocator", "tail" : "(arg0: Locator): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.setDocumentLocator", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#setDocumentLocator(x$1:org.xml.sax.Locator):Unit", "kind" : "def"}, {"label" : "unparsedEntityDecl", "tail" : "(arg0: String, arg1: String, arg2: String, arg3: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.unparsedEntityDecl", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#unparsedEntityDecl(x$1:String,x$2:String,x$3:String,x$4:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(arg0: String, arg1: String, arg2: String): Unit", "member" : "org.xml.sax.helpers.DefaultHandler.notationDecl", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#notationDecl(x$1:String,x$2:String,x$3:String):Unit", "kind" : "def"}, {"label" : "resolveEntity", "tail" : "(arg0: String, arg1: String): org.xml.sax.InputSource", "member" : "org.xml.sax.helpers.DefaultHandler.resolveEntity", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#resolveEntity(x$1:String,x$2:String):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/parsing\/NoBindingFactoryAdapter.html", "kind" : "class"}, {"name" : "scala.xml.parsing.TokenTests", "trait" : "scala\/xml\/parsing\/TokenTests.html", "kind" : "trait", "members_trait" : [{"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/parsing\/TokenTests.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/parsing\/TokenTests.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/parsing\/TokenTests.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/parsing\/TokenTests.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/parsing\/TokenTests.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/parsing\/TokenTests.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/parsing\/TokenTests.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/parsing\/TokenTests.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/parsing\/TokenTests.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/parsing\/TokenTests.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/parsing\/TokenTests.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/TokenTests.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/TokenTests.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/TokenTests.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/TokenTests.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/TokenTests.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/TokenTests.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/TokenTests.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/TokenTests.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/TokenTests.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/TokenTests.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/TokenTests.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/TokenTests.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/TokenTests.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/TokenTests.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/TokenTests.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/TokenTests.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/TokenTests.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/TokenTests.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/TokenTests.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Helper functions for parsing XML fragments"}, {"name" : "scala.xml.parsing.ValidatingMarkupHandler", "shortDescription" : "", "members_class" : [{"label" : "peReference", "tail" : "(name: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.peReference", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#peReference(name:String):Unit", "kind" : "final def"}, {"label" : "notationDecl", "tail" : "(notat: String, extID: ExternalID): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.notationDecl", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#notationDecl(notat:String,extID:scala.xml.dtd.ExternalID):Unit", "kind" : "final def"}, {"label" : "unparsedEntityDecl", "tail" : "(name: String, extID: ExternalID, notat: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.unparsedEntityDecl", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#unparsedEntityDecl(name:String,extID:scala.xml.dtd.ExternalID,notat:String):Unit", "kind" : "final def"}, {"label" : "attListDecl", "tail" : "(name: String, attList: List[AttrDecl]): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.attListDecl", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#attListDecl(name:String,attList:List[scala.xml.dtd.AttrDecl]):Unit", "kind" : "final def"}, {"label" : "elemDecl", "tail" : "(name: String, cmstr: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.elemDecl", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#elemDecl(name:String,cmstr:String):Unit", "kind" : "final def"}, {"label" : "elemEnd", "tail" : "(pos: Int, pre: String, label: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.elemEnd", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#elemEnd(pos:Int,pre:String,label:String):Unit", "kind" : "def"}, {"label" : "elemStart", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.elemStart", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#elemStart(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):Unit", "kind" : "def"}, {"label" : "endDTD", "tail" : "(n: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.endDTD", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#endDTD(n:String):Unit", "kind" : "def"}, {"label" : "isValidating", "tail" : ": Boolean(true)", "member" : "scala.xml.parsing.ValidatingMarkupHandler.isValidating", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#isValidating:Boolean(true)", "kind" : "final val"}, {"label" : "declCurrent", "tail" : ": ElemDecl", "member" : "scala.xml.parsing.ValidatingMarkupHandler.declCurrent", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#declCurrent:scala.xml.dtd.ElemDecl", "kind" : "var"}, {"label" : "declStack", "tail" : ": List[ElemDecl]", "member" : "scala.xml.parsing.ValidatingMarkupHandler.declStack", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#declStack:List[scala.xml.dtd.ElemDecl]", "kind" : "var"}, {"label" : "qCurrent", "tail" : ": Int", "member" : "scala.xml.parsing.ValidatingMarkupHandler.qCurrent", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#qCurrent:Int", "kind" : "var"}, {"label" : "qStack", "tail" : ": List[Int]", "member" : "scala.xml.parsing.ValidatingMarkupHandler.qStack", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#qStack:List[Int]", "kind" : "var"}, {"label" : "rootLabel", "tail" : ": String", "member" : "scala.xml.parsing.ValidatingMarkupHandler.rootLabel", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#rootLabel:String", "kind" : "var"}, {"member" : "scala.xml.parsing.ValidatingMarkupHandler#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(msg: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.log", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#log(msg:String):Unit", "kind" : "def"}, {"label" : "parsedEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parsedEntityDecl", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#parsedEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "parameterEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parameterEntityDecl", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#parameterEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "replacementText", "tail" : "(entityName: String): Source", "member" : "scala.xml.parsing.MarkupHandler.replacementText", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#replacementText(entityName:String):scala.io.Source", "kind" : "def"}, {"label" : "lookupElemDecl", "tail" : "(Label: String): ElemDecl", "member" : "scala.xml.parsing.MarkupHandler.lookupElemDecl", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#lookupElemDecl(Label:String):scala.xml.dtd.ElemDecl", "kind" : "def"}, {"label" : "ent", "tail" : ": Map[String, EntityDecl]", "member" : "scala.xml.parsing.MarkupHandler.ent", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#ent:scala.collection.mutable.Map[String,scala.xml.dtd.EntityDecl]", "kind" : "var"}, {"label" : "decls", "tail" : ": List[Decl]", "member" : "scala.xml.parsing.MarkupHandler.decls", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#decls:List[scala.xml.dtd.Decl]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "reportValidationError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.ValidatingMarkupHandler.reportValidationError", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#reportValidationError(pos:Int,str:String):Unit", "kind" : "abstract def"}, {"label" : "reportSyntaxError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.reportSyntaxError", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#reportSyntaxError(pos:Int,str:String):Unit", "kind" : "abstract def"}, {"label" : "text", "tail" : "(pos: Int, txt: String): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.text", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#text(pos:Int,txt:String):scala.xml.NodeSeq", "kind" : "abstract def"}, {"label" : "entityRef", "tail" : "(pos: Int, n: String): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.entityRef", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#entityRef(pos:Int,n:String):scala.xml.NodeSeq", "kind" : "abstract def"}, {"label" : "comment", "tail" : "(pos: Int, comment: String): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.comment", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#comment(pos:Int,comment:String):scala.xml.NodeSeq", "kind" : "abstract def"}, {"label" : "procInstr", "tail" : "(pos: Int, target: String, txt: String): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.procInstr", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#procInstr(pos:Int,target:String,txt:String):scala.xml.NodeSeq", "kind" : "abstract def"}, {"label" : "elem", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding, empty: Boolean, args: NodeSeq): NodeSeq", "member" : "scala.xml.parsing.MarkupHandler.elem", "link" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html#elem(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,empty:Boolean,args:scala.xml.NodeSeq):scala.xml.NodeSeq", "kind" : "abstract def"}], "class" : "scala\/xml\/parsing\/ValidatingMarkupHandler.html", "kind" : "class"}, {"name" : "scala.xml.parsing.XhtmlEntities", "shortDescription" : "", "object" : "scala\/xml\/parsing\/XhtmlEntities$.html", "members_object" : [{"label" : "apply", "tail" : "(): collection.immutable.List[(String, ParsedEntityDecl)]", "member" : "scala.xml.parsing.XhtmlEntities.apply", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#apply():List[(String,scala.xml.dtd.ParsedEntityDecl)]", "kind" : "def"}, {"label" : "entities", "tail" : ": collection.immutable.List[(String, ParsedEntityDecl)]", "member" : "scala.xml.parsing.XhtmlEntities.entities", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#entities:List[(String,scala.xml.dtd.ParsedEntityDecl)]", "kind" : "val"}, {"label" : "entMap", "tail" : ": Map[String, Char]", "member" : "scala.xml.parsing.XhtmlEntities.entMap", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#entMap:Map[String,Char]", "kind" : "val"}, {"label" : "entList", "tail" : ": collection.immutable.List[(String, Int)]", "member" : "scala.xml.parsing.XhtmlEntities.entList", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#entList:List[(String,Int)]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/XhtmlEntities$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.parsing.XhtmlParser", "shortDescription" : "An XML Parser that preserves CDATA blocks and knows about scala.xml.parsing.XhtmlEntities.", "object" : "scala\/xml\/parsing\/XhtmlParser$.html", "members_class" : [{"label" : "preserveWS", "tail" : ": Boolean", "member" : "scala.xml.parsing.XhtmlParser.preserveWS", "link" : "scala\/xml\/parsing\/XhtmlParser.html#preserveWS:Boolean", "kind" : "val"}, {"member" : "scala.xml.parsing.XhtmlParser#<init>", "error" : "unsupported entity"}, {"label" : "input", "tail" : ": Source", "member" : "scala.xml.parsing.XhtmlParser.input", "link" : "scala\/xml\/parsing\/XhtmlParser.html#input:scala.io.Source", "kind" : "val"}, {"label" : "externalSource", "tail" : "(systemId: String): Source", "member" : "scala.xml.parsing.ExternalSources.externalSource", "link" : "scala\/xml\/parsing\/XhtmlParser.html#externalSource(systemId:String):scala.io.Source", "kind" : "def"}, {"label" : "pop", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.pop", "link" : "scala\/xml\/parsing\/XhtmlParser.html#pop():Unit", "kind" : "def"}, {"label" : "pushExternal", "tail" : "(systemId: String): Unit", "member" : "scala.xml.parsing.MarkupParser.pushExternal", "link" : "scala\/xml\/parsing\/XhtmlParser.html#pushExternal(systemId:String):Unit", "kind" : "def"}, {"label" : "push", "tail" : "(entityName: String): Unit", "member" : "scala.xml.parsing.MarkupParser.push", "link" : "scala\/xml\/parsing\/XhtmlParser.html#push(entityName:String):Unit", "kind" : "def"}, {"label" : "reportValidationError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.MarkupParser.reportValidationError", "link" : "scala\/xml\/parsing\/XhtmlParser.html#reportValidationError(pos:Int,str:String):Unit", "kind" : "def"}, {"label" : "reportSyntaxError", "tail" : "(str: String): Unit", "member" : "scala.xml.parsing.MarkupParser.reportSyntaxError", "link" : "scala\/xml\/parsing\/XhtmlParser.html#reportSyntaxError(str:String):Unit", "kind" : "def"}, {"label" : "reportSyntaxError", "tail" : "(pos: Int, str: String): Unit", "member" : "scala.xml.parsing.MarkupParser.reportSyntaxError", "link" : "scala\/xml\/parsing\/XhtmlParser.html#reportSyntaxError(pos:Int,str:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.notationDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#notationDecl():Unit", "kind" : "def"}, {"label" : "entityDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.entityDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#entityDecl():Unit", "kind" : "def"}, {"label" : "attrDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.attrDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#attrDecl():Unit", "kind" : "def"}, {"label" : "elementDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.elementDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#elementDecl():Unit", "kind" : "def"}, {"label" : "intSubset", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.intSubset", "link" : "scala\/xml\/parsing\/XhtmlParser.html#intSubset():Unit", "kind" : "def"}, {"label" : "markupDecl", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.markupDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#markupDecl():Unit", "kind" : "def"}, {"label" : "markupDecl1", "tail" : "(): Any", "member" : "scala.xml.parsing.MarkupParser.markupDecl1", "link" : "scala\/xml\/parsing\/XhtmlParser.html#markupDecl1():Any", "kind" : "def"}, {"label" : "extSubset", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.extSubset", "link" : "scala\/xml\/parsing\/XhtmlParser.html#extSubset():Unit", "kind" : "def"}, {"label" : "pubidLiteral", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParser.pubidLiteral", "link" : "scala\/xml\/parsing\/XhtmlParser.html#pubidLiteral():String", "kind" : "def"}, {"label" : "systemLiteral", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParser.systemLiteral", "link" : "scala\/xml\/parsing\/XhtmlParser.html#systemLiteral():String", "kind" : "def"}, {"label" : "element1", "tail" : "(pscope: NamespaceBinding): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.element1", "link" : "scala\/xml\/parsing\/XhtmlParser.html#element1(pscope:scala.xml.NamespaceBinding):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "element", "tail" : "(pscope: NamespaceBinding): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.element", "link" : "scala\/xml\/parsing\/XhtmlParser.html#element(pscope:scala.xml.NamespaceBinding):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "parseDTD", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.parseDTD", "link" : "scala\/xml\/parsing\/XhtmlParser.html#parseDTD():Unit", "kind" : "def"}, {"label" : "externalID", "tail" : "(): ExternalID", "member" : "scala.xml.parsing.MarkupParser.externalID", "link" : "scala\/xml\/parsing\/XhtmlParser.html#externalID():scala.xml.dtd.ExternalID", "kind" : "def"}, {"label" : "content", "tail" : "(pscope: NamespaceBinding): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.content", "link" : "scala\/xml\/parsing\/XhtmlParser.html#content(pscope:scala.xml.NamespaceBinding):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "content1", "tail" : "(pscope: NamespaceBinding, ts: NodeBuffer): Unit", "member" : "scala.xml.parsing.MarkupParser.content1", "link" : "scala\/xml\/parsing\/XhtmlParser.html#content1(pscope:scala.xml.NamespaceBinding,ts:scala.xml.NodeBuffer):Unit", "kind" : "def"}, {"label" : "appendText", "tail" : "(pos: Int, ts: NodeBuffer, txt: String): Unit", "member" : "scala.xml.parsing.MarkupParser.appendText", "link" : "scala\/xml\/parsing\/XhtmlParser.html#appendText(pos:Int,ts:scala.xml.NodeBuffer,txt:String):Unit", "kind" : "def"}, {"label" : "xComment", "tail" : "(): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.xComment", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xComment:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xCharData", "tail" : "(): NodeSeq", "member" : "scala.xml.parsing.MarkupParser.xCharData", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xCharData:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xEntityValue", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParser.xEntityValue", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xEntityValue():String", "kind" : "def"}, {"label" : "xAttributes", "tail" : "(pscope: NamespaceBinding): (MetaData, NamespaceBinding)", "member" : "scala.xml.parsing.MarkupParser.xAttributes", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xAttributes(pscope:scala.xml.NamespaceBinding):(scala.xml.MetaData,scala.xml.NamespaceBinding)", "kind" : "def"}, {"label" : "nextch", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParser.nextch", "link" : "scala\/xml\/parsing\/XhtmlParser.html#nextch():Unit", "kind" : "def"}, {"label" : "mkProcInstr", "tail" : "(position: Int, name: String, text: String): ElementType", "member" : "scala.xml.parsing.MarkupParser.mkProcInstr", "link" : "scala\/xml\/parsing\/XhtmlParser.html#mkProcInstr(position:Int,name:String,text:String):MarkupParser.this.ElementType", "kind" : "def"}, {"label" : "mkAttributes", "tail" : "(name: String, pscope: NamespaceBinding): AttributesType", "member" : "scala.xml.parsing.MarkupParser.mkAttributes", "link" : "scala\/xml\/parsing\/XhtmlParser.html#mkAttributes(name:String,pscope:scala.xml.NamespaceBinding):MarkupParser.this.AttributesType", "kind" : "def"}, {"label" : "ch_returning_nextch", "tail" : "(): Char", "member" : "scala.xml.parsing.MarkupParser.ch_returning_nextch", "link" : "scala\/xml\/parsing\/XhtmlParser.html#ch_returning_nextch:Char", "kind" : "def"}, {"label" : "initialize", "tail" : "(): XhtmlParser.this.type", "member" : "scala.xml.parsing.MarkupParser.initialize", "link" : "scala\/xml\/parsing\/XhtmlParser.html#initialize:scala.xml.parsing.<refinement>.type", "kind" : "def"}, {"label" : "putChar", "tail" : "(c: Char): collection.mutable.StringBuilder", "member" : "scala.xml.parsing.MarkupParser.putChar", "link" : "scala\/xml\/parsing\/XhtmlParser.html#putChar(c:Char):StringBuilder", "kind" : "def"}, {"label" : "document", "tail" : "(): Document", "member" : "scala.xml.parsing.MarkupParser.document", "link" : "scala\/xml\/parsing\/XhtmlParser.html#document():scala.xml.Document", "kind" : "def"}, {"label" : "textDecl", "tail" : "(): (Option[String], Option[String])", "member" : "scala.xml.parsing.MarkupParser.textDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#textDecl():(Option[String],Option[String])", "kind" : "def"}, {"label" : "prolog", "tail" : "(): (Option[String], Option[String], Option[Boolean])", "member" : "scala.xml.parsing.MarkupParser.prolog", "link" : "scala\/xml\/parsing\/XhtmlParser.html#prolog():(Option[String],Option[String],Option[Boolean])", "kind" : "def"}, {"label" : "xmlProcInstr", "tail" : "(): MetaData", "member" : "scala.xml.parsing.MarkupParser.xmlProcInstr", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xmlProcInstr():scala.xml.MetaData", "kind" : "def"}, {"label" : "eof", "tail" : "(): Boolean", "member" : "scala.xml.parsing.MarkupParser.eof", "link" : "scala\/xml\/parsing\/XhtmlParser.html#eof:Boolean", "kind" : "def"}, {"label" : "doc", "tail" : ": Document", "member" : "scala.xml.parsing.MarkupParser.doc", "link" : "scala\/xml\/parsing\/XhtmlParser.html#doc:scala.xml.Document", "kind" : "val"}, {"label" : "dtd", "tail" : ": DTD", "member" : "scala.xml.parsing.MarkupParser.dtd", "link" : "scala\/xml\/parsing\/XhtmlParser.html#dtd:scala.xml.dtd.DTD", "kind" : "val"}, {"label" : "cbuf", "tail" : ": collection.mutable.StringBuilder", "member" : "scala.xml.parsing.MarkupParser.cbuf", "link" : "scala\/xml\/parsing\/XhtmlParser.html#cbuf:StringBuilder", "kind" : "val"}, {"label" : "ch", "tail" : "(): Char", "member" : "scala.xml.parsing.MarkupParser.ch", "link" : "scala\/xml\/parsing\/XhtmlParser.html#ch:Char", "kind" : "def"}, {"label" : "lastChRead", "tail" : ": Char", "member" : "scala.xml.parsing.MarkupParser.lastChRead", "link" : "scala\/xml\/parsing\/XhtmlParser.html#lastChRead:Char", "kind" : "val"}, {"label" : "reachedEof", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupParser.reachedEof", "link" : "scala\/xml\/parsing\/XhtmlParser.html#reachedEof:Boolean", "kind" : "val"}, {"label" : "nextChNeeded", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupParser.nextChNeeded", "link" : "scala\/xml\/parsing\/XhtmlParser.html#nextChNeeded:Boolean", "kind" : "val"}, {"label" : "tmppos", "tail" : ": Int", "member" : "scala.xml.parsing.MarkupParser.tmppos", "link" : "scala\/xml\/parsing\/XhtmlParser.html#tmppos:Int", "kind" : "val"}, {"label" : "extIndex", "tail" : ": Int", "member" : "scala.xml.parsing.MarkupParser.extIndex", "link" : "scala\/xml\/parsing\/XhtmlParser.html#extIndex:Int", "kind" : "val"}, {"label" : "pos", "tail" : ": Int", "member" : "scala.xml.parsing.MarkupParser.pos", "link" : "scala\/xml\/parsing\/XhtmlParser.html#pos:Int", "kind" : "val"}, {"label" : "inpStack", "tail" : ": List[Source]", "member" : "scala.xml.parsing.MarkupParser.inpStack", "link" : "scala\/xml\/parsing\/XhtmlParser.html#inpStack:List[scala.io.Source]", "kind" : "val"}, {"label" : "lookahead", "tail" : "(): BufferedIterator[Char]", "member" : "scala.xml.parsing.MarkupParser.lookahead", "link" : "scala\/xml\/parsing\/XhtmlParser.html#lookahead():BufferedIterator[Char]", "kind" : "def"}, {"label" : "curInput", "tail" : ": Source", "member" : "scala.xml.parsing.MarkupParser.curInput", "link" : "scala\/xml\/parsing\/XhtmlParser.html#curInput:scala.io.Source", "kind" : "val"}, {"label" : "xHandleError", "tail" : "(that: Char, msg: String): Unit", "member" : "scala.xml.parsing.MarkupParser.xHandleError", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xHandleError(that:Char,msg:String):Unit", "kind" : "def"}, {"label" : "errorNoEnd", "tail" : "(tag: String): Nothing", "member" : "scala.xml.parsing.MarkupParser.errorNoEnd", "link" : "scala\/xml\/parsing\/XhtmlParser.html#errorNoEnd(tag:String):Nothing", "kind" : "def"}, {"label" : "truncatedError", "tail" : "(msg: String): Nothing", "member" : "scala.xml.parsing.MarkupParser.truncatedError", "link" : "scala\/xml\/parsing\/XhtmlParser.html#truncatedError(msg:String):Nothing", "kind" : "def"}, {"label" : "NamespaceType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.NamespaceType", "link" : "scala\/xml\/parsing\/XhtmlParser.html#NamespaceType=scala.xml.NamespaceBinding", "kind" : "type"}, {"label" : "AttributesType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.AttributesType", "link" : "scala\/xml\/parsing\/XhtmlParser.html#AttributesType=(scala.xml.MetaData,scala.xml.NamespaceBinding)", "kind" : "type"}, {"label" : "ElementType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.ElementType", "link" : "scala\/xml\/parsing\/XhtmlParser.html#ElementType=scala.xml.NodeSeq", "kind" : "type"}, {"label" : "InputType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.InputType", "link" : "scala\/xml\/parsing\/XhtmlParser.html#InputType=scala.io.Source", "kind" : "type"}, {"label" : "PositionType", "tail" : "", "member" : "scala.xml.parsing.MarkupParser.PositionType", "link" : "scala\/xml\/parsing\/XhtmlParser.html#PositionType=Int", "kind" : "type"}, {"label" : "xTakeUntil", "tail" : "(handler: (PositionType, String) => T, positioner: () => PositionType, until: String): T", "member" : "scala.xml.parsing.MarkupParserCommon.xTakeUntil", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xTakeUntil[T](handler:(MarkupParserCommon.this.PositionType,String)=>T,positioner:()=>MarkupParserCommon.this.PositionType,until:String):T", "kind" : "def"}, {"label" : "saving", "tail" : "(getter: A, setter: (A) => Unit)(body: => B): B", "member" : "scala.xml.parsing.MarkupParserCommon.saving", "link" : "scala\/xml\/parsing\/XhtmlParser.html#saving[A,B](getter:A,setter:A=>Unit)(body:=>B):B", "kind" : "def"}, {"label" : "returning", "tail" : "(x: T)(f: (T) => Unit): T", "member" : "scala.xml.parsing.MarkupParserCommon.returning", "link" : "scala\/xml\/parsing\/XhtmlParser.html#returning[T](x:T)(f:T=>Unit):T", "kind" : "def"}, {"label" : "xSpace", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xSpace", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xSpace():Unit", "kind" : "def"}, {"label" : "xSpaceOpt", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xSpaceOpt", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xSpaceOpt():Unit", "kind" : "def"}, {"label" : "xEQ", "tail" : "(): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xEQ", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xEQ():Unit", "kind" : "def"}, {"label" : "xToken", "tail" : "(that: collection.Seq[Char]): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xToken", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xToken(that:scala.collection.Seq[Char]):Unit", "kind" : "def"}, {"label" : "xToken", "tail" : "(that: Char): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xToken", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xToken(that:Char):Unit", "kind" : "def"}, {"label" : "errorAndResult", "tail" : "(msg: String, x: T): T", "member" : "scala.xml.parsing.MarkupParserCommon.errorAndResult", "link" : "scala\/xml\/parsing\/XhtmlParser.html#errorAndResult[T](msg:String,x:T):T", "kind" : "def"}, {"label" : "xCharRef", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParserCommon.xCharRef", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xCharRef:String", "kind" : "def"}, {"label" : "xCharRef", "tail" : "(it: Iterator[Char]): String", "member" : "scala.xml.parsing.MarkupParserCommon.xCharRef", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xCharRef(it:Iterator[Char]):String", "kind" : "def"}, {"label" : "xCharRef", "tail" : "(ch: () => Char, nextch: () => Unit): String", "member" : "scala.xml.parsing.MarkupParserCommon.xCharRef", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xCharRef(ch:()=>Char,nextch:()=>Unit):String", "kind" : "def"}, {"label" : "xName", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParserCommon.xName", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xName:String", "kind" : "def"}, {"label" : "xEndTag", "tail" : "(startName: String): Unit", "member" : "scala.xml.parsing.MarkupParserCommon.xEndTag", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xEndTag(startName:String):Unit", "kind" : "def"}, {"label" : "xAttributeValue", "tail" : "(): String", "member" : "scala.xml.parsing.MarkupParserCommon.xAttributeValue", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xAttributeValue():String", "kind" : "def"}, {"label" : "xAttributeValue", "tail" : "(endCh: Char): String", "member" : "scala.xml.parsing.MarkupParserCommon.xAttributeValue", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xAttributeValue(endCh:Char):String", "kind" : "def"}, {"label" : "xProcInstr", "tail" : "(): ElementType", "member" : "scala.xml.parsing.MarkupParserCommon.xProcInstr", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xProcInstr:MarkupParserCommon.this.ElementType", "kind" : "def"}, {"label" : "xTag", "tail" : "(pscope: NamespaceType): (String, AttributesType)", "member" : "scala.xml.parsing.MarkupParserCommon.xTag", "link" : "scala\/xml\/parsing\/XhtmlParser.html#xTag(pscope:MarkupParserCommon.this.NamespaceType):(String,MarkupParserCommon.this.AttributesType)", "kind" : "def"}, {"label" : "unreachable", "tail" : "(): Nothing", "member" : "scala.xml.parsing.MarkupParserCommon.unreachable", "link" : "scala\/xml\/parsing\/XhtmlParser.html#unreachable:Nothing", "kind" : "def"}, {"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/parsing\/XhtmlParser.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/parsing\/XhtmlParser.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "text", "tail" : "(pos: Int, txt: String): Text", "member" : "scala.xml.parsing.ConstructingHandler.text", "link" : "scala\/xml\/parsing\/XhtmlParser.html#text(pos:Int,txt:String):scala.xml.Text", "kind" : "def"}, {"label" : "entityRef", "tail" : "(pos: Int, n: String): EntityRef", "member" : "scala.xml.parsing.ConstructingHandler.entityRef", "link" : "scala\/xml\/parsing\/XhtmlParser.html#entityRef(pos:Int,n:String):scala.xml.EntityRef", "kind" : "def"}, {"label" : "comment", "tail" : "(pos: Int, txt: String): Comment", "member" : "scala.xml.parsing.ConstructingHandler.comment", "link" : "scala\/xml\/parsing\/XhtmlParser.html#comment(pos:Int,txt:String):scala.xml.Comment", "kind" : "def"}, {"label" : "procInstr", "tail" : "(pos: Int, target: String, txt: String): ProcInstr", "member" : "scala.xml.parsing.ConstructingHandler.procInstr", "link" : "scala\/xml\/parsing\/XhtmlParser.html#procInstr(pos:Int,target:String,txt:String):scala.xml.ProcInstr", "kind" : "def"}, {"label" : "elem", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, pscope: NamespaceBinding, empty: Boolean, nodes: NodeSeq): NodeSeq", "member" : "scala.xml.parsing.ConstructingHandler.elem", "link" : "scala\/xml\/parsing\/XhtmlParser.html#elem(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,pscope:scala.xml.NamespaceBinding,empty:Boolean,nodes:scala.xml.NodeSeq):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "log", "tail" : "(msg: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.log", "link" : "scala\/xml\/parsing\/XhtmlParser.html#log(msg:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(notat: String, extID: ExternalID): Unit", "member" : "scala.xml.parsing.MarkupHandler.notationDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#notationDecl(notat:String,extID:scala.xml.dtd.ExternalID):Unit", "kind" : "def"}, {"label" : "unparsedEntityDecl", "tail" : "(name: String, extID: ExternalID, notat: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.unparsedEntityDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#unparsedEntityDecl(name:String,extID:scala.xml.dtd.ExternalID,notat:String):Unit", "kind" : "def"}, {"label" : "peReference", "tail" : "(name: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.peReference", "link" : "scala\/xml\/parsing\/XhtmlParser.html#peReference(name:String):Unit", "kind" : "def"}, {"label" : "parsedEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parsedEntityDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#parsedEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "parameterEntityDecl", "tail" : "(name: String, edef: EntityDef): Unit", "member" : "scala.xml.parsing.MarkupHandler.parameterEntityDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#parameterEntityDecl(name:String,edef:scala.xml.dtd.EntityDef):Unit", "kind" : "def"}, {"label" : "attListDecl", "tail" : "(name: String, attList: List[AttrDecl]): Unit", "member" : "scala.xml.parsing.MarkupHandler.attListDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#attListDecl(name:String,attList:List[scala.xml.dtd.AttrDecl]):Unit", "kind" : "def"}, {"label" : "elemDecl", "tail" : "(n: String, cmstr: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#elemDecl(n:String,cmstr:String):Unit", "kind" : "def"}, {"label" : "elemEnd", "tail" : "(pos: Int, pre: String, label: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemEnd", "link" : "scala\/xml\/parsing\/XhtmlParser.html#elemEnd(pos:Int,pre:String,label:String):Unit", "kind" : "def"}, {"label" : "elemStart", "tail" : "(pos: Int, pre: String, label: String, attrs: MetaData, scope: NamespaceBinding): Unit", "member" : "scala.xml.parsing.MarkupHandler.elemStart", "link" : "scala\/xml\/parsing\/XhtmlParser.html#elemStart(pos:Int,pre:String,label:String,attrs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):Unit", "kind" : "def"}, {"label" : "endDTD", "tail" : "(n: String): Unit", "member" : "scala.xml.parsing.MarkupHandler.endDTD", "link" : "scala\/xml\/parsing\/XhtmlParser.html#endDTD(n:String):Unit", "kind" : "def"}, {"label" : "replacementText", "tail" : "(entityName: String): Source", "member" : "scala.xml.parsing.MarkupHandler.replacementText", "link" : "scala\/xml\/parsing\/XhtmlParser.html#replacementText(entityName:String):scala.io.Source", "kind" : "def"}, {"label" : "lookupElemDecl", "tail" : "(Label: String): ElemDecl", "member" : "scala.xml.parsing.MarkupHandler.lookupElemDecl", "link" : "scala\/xml\/parsing\/XhtmlParser.html#lookupElemDecl(Label:String):scala.xml.dtd.ElemDecl", "kind" : "def"}, {"label" : "ent", "tail" : ": Map[String, EntityDecl]", "member" : "scala.xml.parsing.MarkupHandler.ent", "link" : "scala\/xml\/parsing\/XhtmlParser.html#ent:scala.collection.mutable.Map[String,scala.xml.dtd.EntityDecl]", "kind" : "var"}, {"label" : "decls", "tail" : ": List[Decl]", "member" : "scala.xml.parsing.MarkupHandler.decls", "link" : "scala\/xml\/parsing\/XhtmlParser.html#decls:List[scala.xml.dtd.Decl]", "kind" : "var"}, {"label" : "isValidating", "tail" : ": Boolean", "member" : "scala.xml.parsing.MarkupHandler.isValidating", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isValidating:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/XhtmlParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/XhtmlParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/XhtmlParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/XhtmlParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/XhtmlParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/XhtmlParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/XhtmlParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/XhtmlParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/XhtmlParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/XhtmlParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/XhtmlParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/XhtmlParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/XhtmlParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/XhtmlParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/XhtmlParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/XhtmlParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/XhtmlParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/XhtmlParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/XhtmlParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(source: Source): NodeSeq", "member" : "scala.xml.parsing.XhtmlParser.apply", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#apply(source:scala.io.Source):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/parsing\/XhtmlParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/parsing\/XhtmlParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/parsing\/XhtmlParser.html", "kind" : "class"}], "scala.xml.persistent" : [{"name" : "scala.xml.persistent.CachedFileStorage", "shortDescription" : "Mutable storage of immutable xml trees.", "members_class" : [{"label" : "log", "tail" : "(msg: String): Unit", "member" : "scala.xml.persistent.CachedFileStorage.log", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#log(msg:String):Unit", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "scala.xml.persistent.CachedFileStorage.flush", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#flush():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "scala.xml.persistent.CachedFileStorage.run", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#run():Unit", "kind" : "def"}, {"label" : "initialNodes", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.persistent.CachedFileStorage.initialNodes", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#initialNodes:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "interval", "tail" : ": Int", "member" : "scala.xml.persistent.CachedFileStorage.interval", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#interval:Int", "kind" : "val"}, {"label" : "dirty", "tail" : ": Boolean", "member" : "scala.xml.persistent.CachedFileStorage.dirty", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#dirty:Boolean", "kind" : "var"}, {"member" : "scala.xml.persistent.CachedFileStorage#<init>", "error" : "unsupported entity"}, {"label" : "setUncaughtExceptionHandler", "tail" : "(arg0: UncaughtExceptionHandler): Unit", "member" : "java.lang.Thread.setUncaughtExceptionHandler", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#setUncaughtExceptionHandler(x$1:java.lang.Thread.UncaughtExceptionHandler):Unit", "kind" : "def"}, {"label" : "getUncaughtExceptionHandler", "tail" : "(): UncaughtExceptionHandler", "member" : "java.lang.Thread.getUncaughtExceptionHandler", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#getUncaughtExceptionHandler():java.lang.Thread.UncaughtExceptionHandler", "kind" : "def"}, {"label" : "getState", "tail" : "(): State", "member" : "java.lang.Thread.getState", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#getState():java.lang.Thread.State", "kind" : "def"}, {"label" : "getId", "tail" : "(): Long", "member" : "java.lang.Thread.getId", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#getId():Long", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Thread.getStackTrace", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "setContextClassLoader", "tail" : "(arg0: ClassLoader): Unit", "member" : "java.lang.Thread.setContextClassLoader", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#setContextClassLoader(x$1:ClassLoader):Unit", "kind" : "def"}, {"label" : "getContextClassLoader", "tail" : "(): ClassLoader", "member" : "java.lang.Thread.getContextClassLoader", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#getContextClassLoader():ClassLoader", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Thread.toString", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#toString():String", "kind" : "def"}, {"label" : "checkAccess", "tail" : "(): Unit", "member" : "java.lang.Thread.checkAccess", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#checkAccess():Unit", "kind" : "final def"}, {"label" : "isDaemon", "tail" : "(): Boolean", "member" : "java.lang.Thread.isDaemon", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#isDaemon():Boolean", "kind" : "final def"}, {"label" : "setDaemon", "tail" : "(arg0: Boolean): Unit", "member" : "java.lang.Thread.setDaemon", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#setDaemon(x$1:Boolean):Unit", "kind" : "final def"}, {"label" : "join", "tail" : "(): Unit", "member" : "java.lang.Thread.join", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#join():Unit", "kind" : "final def"}, {"label" : "join", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "java.lang.Thread.join", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#join(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "join", "tail" : "(arg0: Long): Unit", "member" : "java.lang.Thread.join", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#join(x$1:Long):Unit", "kind" : "final def"}, {"label" : "countStackFrames", "tail" : "(): Int", "member" : "java.lang.Thread.countStackFrames", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#countStackFrames():Int", "kind" : "def"}, {"label" : "getThreadGroup", "tail" : "(): ThreadGroup", "member" : "java.lang.Thread.getThreadGroup", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#getThreadGroup():ThreadGroup", "kind" : "final def"}, {"label" : "getName", "tail" : "(): String", "member" : "java.lang.Thread.getName", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#getName():String", "kind" : "final def"}, {"label" : "setName", "tail" : "(arg0: String): Unit", "member" : "java.lang.Thread.setName", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#setName(x$1:String):Unit", "kind" : "final def"}, {"label" : "getPriority", "tail" : "(): Int", "member" : "java.lang.Thread.getPriority", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#getPriority():Int", "kind" : "final def"}, {"label" : "setPriority", "tail" : "(arg0: Int): Unit", "member" : "java.lang.Thread.setPriority", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#setPriority(x$1:Int):Unit", "kind" : "final def"}, {"label" : "resume", "tail" : "(): Unit", "member" : "java.lang.Thread.resume", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#resume():Unit", "kind" : "final def"}, {"label" : "suspend", "tail" : "(): Unit", "member" : "java.lang.Thread.suspend", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#suspend():Unit", "kind" : "final def"}, {"label" : "isAlive", "tail" : "(): Boolean", "member" : "java.lang.Thread.isAlive", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#isAlive():Boolean", "kind" : "final def"}, {"label" : "isInterrupted", "tail" : "(): Boolean", "member" : "java.lang.Thread.isInterrupted", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#isInterrupted():Boolean", "kind" : "def"}, {"label" : "interrupt", "tail" : "(): Unit", "member" : "java.lang.Thread.interrupt", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#interrupt():Unit", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "java.lang.Thread.stop", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#stop():Unit", "kind" : "final def"}, {"label" : "start", "tail" : "(): Unit", "member" : "java.lang.Thread.start", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#start():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Thread.clone", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#clone():Object", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/persistent\/CachedFileStorage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "-=", "tail" : "(e: Node): Unit", "member" : "scala.xml.persistent.CachedFileStorage.-=", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#-=(e:scala.xml.Node):Unit", "kind" : "abstract def"}, {"label" : "+=", "tail" : "(e: Node): Unit", "member" : "scala.xml.persistent.CachedFileStorage.+=", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#+=(e:scala.xml.Node):Unit", "kind" : "abstract def"}, {"label" : "nodes", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.persistent.CachedFileStorage.nodes", "link" : "scala\/xml\/persistent\/CachedFileStorage.html#nodes:Iterator[scala.xml.Node]", "kind" : "abstract def"}], "class" : "scala\/xml\/persistent\/CachedFileStorage.html", "kind" : "class"}, {"name" : "scala.xml.persistent.Index", "shortDescription" : "an Index returns some unique key that is part of a node", "members_class" : [{"member" : "scala.xml.persistent.Index#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "scala\/xml\/persistent\/Index.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (A) => A): (Node) => A", "member" : "scala.Function1.andThen", "link" : "scala\/xml\/persistent\/Index.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Node): (A) => A", "member" : "scala.Function1.compose", "link" : "scala\/xml\/persistent\/Index.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/persistent\/Index.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/persistent\/Index.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/persistent\/Index.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/persistent\/Index.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/persistent\/Index.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/persistent\/Index.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/persistent\/Index.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/persistent\/Index.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/persistent\/Index.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/persistent\/Index.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/persistent\/Index.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/persistent\/Index.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/persistent\/Index.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/persistent\/Index.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/persistent\/Index.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/persistent\/Index.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/persistent\/Index.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/persistent\/Index.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(v1: Node): A", "member" : "scala.Function1.apply", "link" : "scala\/xml\/persistent\/Index.html#apply(v1:T1):R", "kind" : "abstract def"}], "class" : "scala\/xml\/persistent\/Index.html", "kind" : "class"}, {"name" : "scala.xml.persistent.SetStorage", "shortDescription" : "A persistent store with set semantics.", "members_class" : [{"label" : "nodes", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.persistent.SetStorage.nodes", "link" : "scala\/xml\/persistent\/SetStorage.html#nodes:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "-=", "tail" : "(e: Node): Unit", "member" : "scala.xml.persistent.SetStorage.-=", "link" : "scala\/xml\/persistent\/SetStorage.html#-=(e:scala.xml.Node):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(e: Node): Unit", "member" : "scala.xml.persistent.SetStorage.+=", "link" : "scala\/xml\/persistent\/SetStorage.html#+=(e:scala.xml.Node):Unit", "kind" : "def"}, {"member" : "scala.xml.persistent.SetStorage#<init>", "error" : "unsupported entity"}, {"label" : "log", "tail" : "(msg: String): Unit", "member" : "scala.xml.persistent.CachedFileStorage.log", "link" : "scala\/xml\/persistent\/SetStorage.html#log(msg:String):Unit", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "scala.xml.persistent.CachedFileStorage.flush", "link" : "scala\/xml\/persistent\/SetStorage.html#flush():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "scala.xml.persistent.CachedFileStorage.run", "link" : "scala\/xml\/persistent\/SetStorage.html#run():Unit", "kind" : "def"}, {"label" : "initialNodes", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.persistent.CachedFileStorage.initialNodes", "link" : "scala\/xml\/persistent\/SetStorage.html#initialNodes:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "interval", "tail" : ": Int", "member" : "scala.xml.persistent.CachedFileStorage.interval", "link" : "scala\/xml\/persistent\/SetStorage.html#interval:Int", "kind" : "val"}, {"label" : "dirty", "tail" : ": Boolean", "member" : "scala.xml.persistent.CachedFileStorage.dirty", "link" : "scala\/xml\/persistent\/SetStorage.html#dirty:Boolean", "kind" : "var"}, {"label" : "setUncaughtExceptionHandler", "tail" : "(arg0: UncaughtExceptionHandler): Unit", "member" : "java.lang.Thread.setUncaughtExceptionHandler", "link" : "scala\/xml\/persistent\/SetStorage.html#setUncaughtExceptionHandler(x$1:java.lang.Thread.UncaughtExceptionHandler):Unit", "kind" : "def"}, {"label" : "getUncaughtExceptionHandler", "tail" : "(): UncaughtExceptionHandler", "member" : "java.lang.Thread.getUncaughtExceptionHandler", "link" : "scala\/xml\/persistent\/SetStorage.html#getUncaughtExceptionHandler():java.lang.Thread.UncaughtExceptionHandler", "kind" : "def"}, {"label" : "getState", "tail" : "(): State", "member" : "java.lang.Thread.getState", "link" : "scala\/xml\/persistent\/SetStorage.html#getState():java.lang.Thread.State", "kind" : "def"}, {"label" : "getId", "tail" : "(): Long", "member" : "java.lang.Thread.getId", "link" : "scala\/xml\/persistent\/SetStorage.html#getId():Long", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Thread.getStackTrace", "link" : "scala\/xml\/persistent\/SetStorage.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "setContextClassLoader", "tail" : "(arg0: ClassLoader): Unit", "member" : "java.lang.Thread.setContextClassLoader", "link" : "scala\/xml\/persistent\/SetStorage.html#setContextClassLoader(x$1:ClassLoader):Unit", "kind" : "def"}, {"label" : "getContextClassLoader", "tail" : "(): ClassLoader", "member" : "java.lang.Thread.getContextClassLoader", "link" : "scala\/xml\/persistent\/SetStorage.html#getContextClassLoader():ClassLoader", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Thread.toString", "link" : "scala\/xml\/persistent\/SetStorage.html#toString():String", "kind" : "def"}, {"label" : "checkAccess", "tail" : "(): Unit", "member" : "java.lang.Thread.checkAccess", "link" : "scala\/xml\/persistent\/SetStorage.html#checkAccess():Unit", "kind" : "final def"}, {"label" : "isDaemon", "tail" : "(): Boolean", "member" : "java.lang.Thread.isDaemon", "link" : "scala\/xml\/persistent\/SetStorage.html#isDaemon():Boolean", "kind" : "final def"}, {"label" : "setDaemon", "tail" : "(arg0: Boolean): Unit", "member" : "java.lang.Thread.setDaemon", "link" : "scala\/xml\/persistent\/SetStorage.html#setDaemon(x$1:Boolean):Unit", "kind" : "final def"}, {"label" : "join", "tail" : "(): Unit", "member" : "java.lang.Thread.join", "link" : "scala\/xml\/persistent\/SetStorage.html#join():Unit", "kind" : "final def"}, {"label" : "join", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "java.lang.Thread.join", "link" : "scala\/xml\/persistent\/SetStorage.html#join(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "join", "tail" : "(arg0: Long): Unit", "member" : "java.lang.Thread.join", "link" : "scala\/xml\/persistent\/SetStorage.html#join(x$1:Long):Unit", "kind" : "final def"}, {"label" : "countStackFrames", "tail" : "(): Int", "member" : "java.lang.Thread.countStackFrames", "link" : "scala\/xml\/persistent\/SetStorage.html#countStackFrames():Int", "kind" : "def"}, {"label" : "getThreadGroup", "tail" : "(): ThreadGroup", "member" : "java.lang.Thread.getThreadGroup", "link" : "scala\/xml\/persistent\/SetStorage.html#getThreadGroup():ThreadGroup", "kind" : "final def"}, {"label" : "getName", "tail" : "(): String", "member" : "java.lang.Thread.getName", "link" : "scala\/xml\/persistent\/SetStorage.html#getName():String", "kind" : "final def"}, {"label" : "setName", "tail" : "(arg0: String): Unit", "member" : "java.lang.Thread.setName", "link" : "scala\/xml\/persistent\/SetStorage.html#setName(x$1:String):Unit", "kind" : "final def"}, {"label" : "getPriority", "tail" : "(): Int", "member" : "java.lang.Thread.getPriority", "link" : "scala\/xml\/persistent\/SetStorage.html#getPriority():Int", "kind" : "final def"}, {"label" : "setPriority", "tail" : "(arg0: Int): Unit", "member" : "java.lang.Thread.setPriority", "link" : "scala\/xml\/persistent\/SetStorage.html#setPriority(x$1:Int):Unit", "kind" : "final def"}, {"label" : "resume", "tail" : "(): Unit", "member" : "java.lang.Thread.resume", "link" : "scala\/xml\/persistent\/SetStorage.html#resume():Unit", "kind" : "final def"}, {"label" : "suspend", "tail" : "(): Unit", "member" : "java.lang.Thread.suspend", "link" : "scala\/xml\/persistent\/SetStorage.html#suspend():Unit", "kind" : "final def"}, {"label" : "isAlive", "tail" : "(): Boolean", "member" : "java.lang.Thread.isAlive", "link" : "scala\/xml\/persistent\/SetStorage.html#isAlive():Boolean", "kind" : "final def"}, {"label" : "isInterrupted", "tail" : "(): Boolean", "member" : "java.lang.Thread.isInterrupted", "link" : "scala\/xml\/persistent\/SetStorage.html#isInterrupted():Boolean", "kind" : "def"}, {"label" : "interrupt", "tail" : "(): Unit", "member" : "java.lang.Thread.interrupt", "link" : "scala\/xml\/persistent\/SetStorage.html#interrupt():Unit", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "java.lang.Thread.stop", "link" : "scala\/xml\/persistent\/SetStorage.html#stop():Unit", "kind" : "final def"}, {"label" : "start", "tail" : "(): Unit", "member" : "java.lang.Thread.start", "link" : "scala\/xml\/persistent\/SetStorage.html#start():Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Thread.clone", "link" : "scala\/xml\/persistent\/SetStorage.html#clone():Object", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/persistent\/SetStorage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/persistent\/SetStorage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/persistent\/SetStorage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/persistent\/SetStorage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/persistent\/SetStorage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/persistent\/SetStorage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/persistent\/SetStorage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/persistent\/SetStorage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/persistent\/SetStorage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/persistent\/SetStorage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/persistent\/SetStorage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/persistent\/SetStorage.html#notify():Unit", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/persistent\/SetStorage.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/persistent\/SetStorage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/persistent\/SetStorage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/persistent\/SetStorage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/persistent\/SetStorage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/persistent\/SetStorage.html", "kind" : "class"}], "scala.xml.transform" : [{"name" : "scala.xml.transform.BasicTransformer", "shortDescription" : "A class for XML transformations.", "members_class" : [{"label" : "apply", "tail" : "(n: Node): Node", "member" : "scala.xml.transform.BasicTransformer.apply", "link" : "scala\/xml\/transform\/BasicTransformer.html#apply(n:scala.xml.Node):scala.xml.Node", "kind" : "def"}, {"label" : "transform", "tail" : "(n: Node): collection.Seq[Node]", "member" : "scala.xml.transform.BasicTransformer.transform", "link" : "scala\/xml\/transform\/BasicTransformer.html#transform(n:scala.xml.Node):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "transform", "tail" : "(ns: collection.Seq[Node]): collection.Seq[Node]", "member" : "scala.xml.transform.BasicTransformer.transform", "link" : "scala\/xml\/transform\/BasicTransformer.html#transform(ns:scala.collection.Seq[scala.xml.Node]):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "transform", "tail" : "(it: Iterator[Node], nb: NodeBuffer): collection.Seq[Node]", "member" : "scala.xml.transform.BasicTransformer.transform", "link" : "scala\/xml\/transform\/BasicTransformer.html#transform(it:Iterator[scala.xml.Node],nb:scala.xml.NodeBuffer):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "unchanged", "tail" : "(n: Node, ns: collection.Seq[Node]): Boolean", "member" : "scala.xml.transform.BasicTransformer.unchanged", "link" : "scala\/xml\/transform\/BasicTransformer.html#unchanged(n:scala.xml.Node,ns:scala.collection.Seq[scala.xml.Node]):Boolean", "kind" : "def"}, {"member" : "scala.xml.transform.BasicTransformer#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "scala\/xml\/transform\/BasicTransformer.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Node) => A): (Node) => A", "member" : "scala.Function1.andThen", "link" : "scala\/xml\/transform\/BasicTransformer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Node): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/transform\/BasicTransformer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/transform\/BasicTransformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/transform\/BasicTransformer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/transform\/BasicTransformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/transform\/BasicTransformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/transform\/BasicTransformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/transform\/BasicTransformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/transform\/BasicTransformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/transform\/BasicTransformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/transform\/BasicTransformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/transform\/BasicTransformer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/transform\/BasicTransformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/transform\/BasicTransformer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/transform\/BasicTransformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/transform\/BasicTransformer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/transform\/BasicTransformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/transform\/BasicTransformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/transform\/BasicTransformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/transform\/BasicTransformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/transform\/BasicTransformer.html", "kind" : "class"}, {"name" : "scala.xml.transform.RewriteRule", "shortDescription" : "A RewriteRule, when applied to a term, yields either the result of rewriting the term or the term itself if the rule is not applied.", "members_class" : [{"label" : "transform", "tail" : "(n: Node): collection.Seq[Node]", "member" : "scala.xml.transform.RewriteRule.transform", "link" : "scala\/xml\/transform\/RewriteRule.html#transform(n:scala.xml.Node):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "transform", "tail" : "(ns: collection.Seq[Node]): collection.Seq[Node]", "member" : "scala.xml.transform.RewriteRule.transform", "link" : "scala\/xml\/transform\/RewriteRule.html#transform(ns:scala.collection.Seq[scala.xml.Node]):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"member" : "scala.xml.transform.RewriteRule#<init>", "error" : "unsupported entity"}, {"label" : "apply", "tail" : "(n: Node): Node", "member" : "scala.xml.transform.BasicTransformer.apply", "link" : "scala\/xml\/transform\/RewriteRule.html#apply(n:scala.xml.Node):scala.xml.Node", "kind" : "def"}, {"label" : "transform", "tail" : "(it: Iterator[Node], nb: NodeBuffer): collection.Seq[Node]", "member" : "scala.xml.transform.BasicTransformer.transform", "link" : "scala\/xml\/transform\/RewriteRule.html#transform(it:Iterator[scala.xml.Node],nb:scala.xml.NodeBuffer):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "unchanged", "tail" : "(n: Node, ns: collection.Seq[Node]): Boolean", "member" : "scala.xml.transform.BasicTransformer.unchanged", "link" : "scala\/xml\/transform\/RewriteRule.html#unchanged(n:scala.xml.Node,ns:scala.collection.Seq[scala.xml.Node]):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "scala\/xml\/transform\/RewriteRule.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Node) => A): (Node) => A", "member" : "scala.Function1.andThen", "link" : "scala\/xml\/transform\/RewriteRule.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Node): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/transform\/RewriteRule.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/transform\/RewriteRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/transform\/RewriteRule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/transform\/RewriteRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/transform\/RewriteRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/transform\/RewriteRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/transform\/RewriteRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/transform\/RewriteRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/transform\/RewriteRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/transform\/RewriteRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/transform\/RewriteRule.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/transform\/RewriteRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/transform\/RewriteRule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/transform\/RewriteRule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/transform\/RewriteRule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/transform\/RewriteRule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/transform\/RewriteRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/transform\/RewriteRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/transform\/RewriteRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/transform\/RewriteRule.html", "kind" : "class"}, {"name" : "scala.xml.transform.RuleTransformer", "shortDescription" : "", "members_class" : [{"label" : "transform", "tail" : "(n: Node): collection.Seq[Node]", "member" : "scala.xml.transform.RuleTransformer.transform", "link" : "scala\/xml\/transform\/RuleTransformer.html#transform(n:scala.xml.Node):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"member" : "scala.xml.transform.RuleTransformer#<init>", "error" : "unsupported entity"}, {"label" : "apply", "tail" : "(n: Node): Node", "member" : "scala.xml.transform.BasicTransformer.apply", "link" : "scala\/xml\/transform\/RuleTransformer.html#apply(n:scala.xml.Node):scala.xml.Node", "kind" : "def"}, {"label" : "transform", "tail" : "(ns: collection.Seq[Node]): collection.Seq[Node]", "member" : "scala.xml.transform.BasicTransformer.transform", "link" : "scala\/xml\/transform\/RuleTransformer.html#transform(ns:scala.collection.Seq[scala.xml.Node]):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "transform", "tail" : "(it: Iterator[Node], nb: NodeBuffer): collection.Seq[Node]", "member" : "scala.xml.transform.BasicTransformer.transform", "link" : "scala\/xml\/transform\/RuleTransformer.html#transform(it:Iterator[scala.xml.Node],nb:scala.xml.NodeBuffer):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "unchanged", "tail" : "(n: Node, ns: collection.Seq[Node]): Boolean", "member" : "scala.xml.transform.BasicTransformer.unchanged", "link" : "scala\/xml\/transform\/RuleTransformer.html#unchanged(n:scala.xml.Node,ns:scala.collection.Seq[scala.xml.Node]):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "scala\/xml\/transform\/RuleTransformer.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Node) => A): (Node) => A", "member" : "scala.Function1.andThen", "link" : "scala\/xml\/transform\/RuleTransformer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Node): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/transform\/RuleTransformer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/transform\/RuleTransformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/transform\/RuleTransformer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/transform\/RuleTransformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/transform\/RuleTransformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/transform\/RuleTransformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/transform\/RuleTransformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/transform\/RuleTransformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/transform\/RuleTransformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/transform\/RuleTransformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/transform\/RuleTransformer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/transform\/RuleTransformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/transform\/RuleTransformer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/transform\/RuleTransformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/transform\/RuleTransformer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/transform\/RuleTransformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/transform\/RuleTransformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/transform\/RuleTransformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/transform\/RuleTransformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/transform\/RuleTransformer.html", "kind" : "class"}], "scala.xml" : [{"name" : "scala.xml.Atom", "shortDescription" : "The class Atom provides an XML node for text (PCDATA).", "members_class" : [{"label" : "text", "tail" : "(): String", "member" : "scala.xml.Atom.text", "link" : "scala\/xml\/Atom.html#text:String", "kind" : "def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Atom.buildString", "link" : "scala\/xml\/Atom.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "scala.xml.Atom.label", "link" : "scala\/xml\/Atom.html#label:String", "kind" : "def"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.Atom.doTransform", "link" : "scala\/xml\/Atom.html#doTransform:Boolean", "kind" : "final def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.Atom.doCollectNamespaces", "link" : "scala\/xml\/Atom.html#doCollectNamespaces:Boolean", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Atom.canEqual", "link" : "scala\/xml\/Atom.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Atom.strict_==", "link" : "scala\/xml\/Atom.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Atom.basisForHashCode", "link" : "scala\/xml\/Atom.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"member" : "scala.xml.Atom#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": A", "member" : "scala.xml.Atom.data", "link" : "scala\/xml\/Atom.html#data:A", "kind" : "val"}, {"label" : "child", "tail" : "(): collection.immutable.Nil", "member" : "scala.xml.SpecialNode.child", "link" : "scala\/xml\/Atom.html#child:scala.collection.immutable.Nil.type", "kind" : "final def"}, {"label" : "namespace", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.namespace", "link" : "scala\/xml\/Atom.html#namespace:Null", "kind" : "final def"}, {"label" : "attributes", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.attributes", "link" : "scala\/xml\/Atom.html#attributes:scala.xml.Null.type", "kind" : "final def"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/Atom.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/Atom.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/Atom.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/Atom.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.theSeq", "link" : "scala\/xml\/Atom.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/Atom.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/Atom.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/Atom.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Atom.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Atom.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/Atom.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "scope", "tail" : "(): NamespaceBinding", "member" : "scala.xml.Node.scope", "link" : "scala\/xml\/Atom.html#scope:scala.xml.NamespaceBinding", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/Atom.html#isAtom:Boolean", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "scala.xml.Node.prefix", "link" : "scala\/xml\/Atom.html#prefix:String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/Atom.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/Atom.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/Atom.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/Atom.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Atom.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Atom.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/Atom.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/Atom.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Atom.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Atom.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Atom.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Atom.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Atom.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/Atom.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/Atom.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/Atom.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/Atom.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/Atom.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/Atom.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/Atom.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/Atom.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/Atom.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/Atom.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/Atom.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/Atom.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/Atom.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/Atom.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/Atom.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/Atom.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/Atom.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/Atom.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/Atom.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/Atom.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/Atom.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/Atom.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/Atom.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/Atom.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/Atom.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/Atom.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/Atom.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/Atom.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/Atom.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/Atom.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/Atom.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/Atom.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/Atom.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/Atom.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/Atom.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/Atom.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/Atom.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/Atom.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/Atom.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/Atom.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/Atom.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/Atom.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/Atom.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/Atom.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/Atom.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/Atom.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/Atom.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Atom.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/Atom.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/Atom.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Atom.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Atom.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/Atom.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/Atom.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/Atom.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/Atom.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/Atom.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Atom.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Atom.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Atom.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Atom.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/Atom.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/Atom.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/Atom.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/Atom.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/Atom.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/Atom.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/Atom.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/Atom.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/Atom.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Atom.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Atom.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Atom.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Atom.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Atom.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Atom.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/Atom.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Atom.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Atom.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Atom.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Atom.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/Atom.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Atom.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Atom.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/Atom.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/Atom.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/Atom.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/Atom.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/Atom.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/Atom.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/Atom.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/Atom.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/Atom.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/Atom.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/Atom.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/Atom.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/Atom.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/Atom.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/Atom.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/Atom.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/Atom.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/Atom.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Atom.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Atom.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/Atom.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/Atom.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/Atom.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/Atom.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, Atom.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/Atom.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/Atom.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Atom.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/Atom.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Atom.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/Atom.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Atom.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/Atom.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/Atom.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/Atom.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/Atom.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/Atom.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/Atom.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/Atom.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/Atom.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/Atom.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/Atom.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/Atom.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/Atom.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/Atom.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Atom.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Atom.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/Atom.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/Atom.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/Atom.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/Atom.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/Atom.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/Atom.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/Atom.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/Atom.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Atom.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/Atom.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/Atom.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/Atom.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/Atom.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/Atom.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/Atom.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/Atom.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/Atom.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/Atom.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/Atom.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/Atom.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/Atom.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/Atom.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/Atom.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/Atom.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/Atom.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/Atom.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/Atom.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/Atom.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/Atom.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Atom.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Atom.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Atom.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Atom.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Atom.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Atom.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/Atom.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/Atom.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/Atom.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/Atom.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/Atom.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/Atom.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/Atom.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/Atom.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/Atom.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/Atom.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/Atom.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/Atom.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/Atom.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Atom.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Atom.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Atom.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/Atom.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/Atom.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/Atom.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/Atom.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/Atom.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/Atom.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/Atom.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/Atom.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/Atom.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/Atom.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/Atom.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/Atom.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/Atom.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/Atom.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/Atom.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/Atom.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/Atom.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/Atom.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/Atom.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/Atom.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/Atom.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Atom.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Atom.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Atom.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Atom.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Atom.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Atom.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Atom.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Atom.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Atom.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Atom.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Atom.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Atom.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Atom.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Atom.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Atom.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Atom.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/Atom.html", "kind" : "class"}, {"name" : "scala.xml.Attribute", "object" : "scala\/xml\/Attribute$.html", "members_object" : [{"label" : "apply", "tail" : "(pre: Option[String], key: String, value: collection.Seq[Node], next: MetaData): Attribute", "member" : "scala.xml.Attribute.apply", "link" : "scala\/xml\/Attribute$.html#apply(pre:Option[String],key:String,value:scala.collection.Seq[scala.xml.Node],next:scala.xml.MetaData):scala.xml.Attribute", "kind" : "def"}, {"label" : "apply", "tail" : "(pre: String, key: String, value: collection.Seq[Node], next: MetaData): Attribute", "member" : "scala.xml.Attribute.apply", "link" : "scala\/xml\/Attribute$.html#apply(pre:String,key:String,value:scala.collection.Seq[scala.xml.Node],next:scala.xml.MetaData):scala.xml.Attribute", "kind" : "def"}, {"label" : "apply", "tail" : "(pre: String, key: String, value: String, next: MetaData): Attribute", "member" : "scala.xml.Attribute.apply", "link" : "scala\/xml\/Attribute$.html#apply(pre:String,key:String,value:String,next:scala.xml.MetaData):scala.xml.Attribute", "kind" : "def"}, {"label" : "apply", "tail" : "(key: String, value: collection.Seq[Node], next: MetaData): Attribute", "member" : "scala.xml.Attribute.apply", "link" : "scala\/xml\/Attribute$.html#apply(key:String,value:scala.collection.Seq[scala.xml.Node],next:scala.xml.MetaData):scala.xml.Attribute", "kind" : "def"}, {"label" : "unapply", "tail" : "(x: Attribute): Option[(String, collection.Seq[Node], MetaData)]", "member" : "scala.xml.Attribute.unapply", "link" : "scala\/xml\/Attribute$.html#unapply(x:scala.xml.Attribute):Option[(String,scala.collection.Seq[scala.xml.Node],scala.xml.MetaData)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Attribute$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Attribute$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Attribute$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Attribute$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Attribute$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Attribute$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Attribute$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Attribute$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Attribute$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Attribute$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Attribute$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Attribute$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Attribute$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Attribute$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/Attribute$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/Attribute$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Attribute$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Attribute$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Attribute$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/xml\/Attribute.html", "kind" : "object", "members_trait" : [{"label" : "toString1", "tail" : "(sb: StringBuilder): Unit", "member" : "scala.xml.Attribute.toString1", "link" : "scala\/xml\/Attribute.html#toString1(sb:StringBuilder):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.xml.Attribute.size", "link" : "scala\/xml\/Attribute.html#size:Int", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[MetaData]", "member" : "scala.xml.Attribute.iterator", "link" : "scala\/xml\/Attribute.html#iterator:Iterator[scala.xml.MetaData]", "kind" : "def"}, {"label" : "wellformed", "tail" : "(scope: NamespaceBinding): Boolean", "member" : "scala.xml.Attribute.wellformed", "link" : "scala\/xml\/Attribute.html#wellformed(scope:scala.xml.NamespaceBinding):Boolean", "kind" : "def"}, {"label" : "isPrefixed", "tail" : "(): Boolean", "member" : "scala.xml.Attribute.isPrefixed", "link" : "scala\/xml\/Attribute.html#isPrefixed:Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(namespace: String, scope: NamespaceBinding, key: String): MetaData", "member" : "scala.xml.Attribute.remove", "link" : "scala\/xml\/Attribute.html#remove(namespace:String,scope:scala.xml.NamespaceBinding,key:String):scala.xml.MetaData", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): MetaData", "member" : "scala.xml.Attribute.remove", "link" : "scala\/xml\/Attribute.html#remove(key:String):scala.xml.MetaData", "kind" : "def"}, {"label" : "remove", "tail" : "(namespace: String, owner: Node, key: String): MetaData", "member" : "scala.xml.MetaData.remove", "link" : "scala\/xml\/Attribute.html#remove(namespace:String,owner:scala.xml.Node,key:String):scala.xml.MetaData", "kind" : "final def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.MetaData.buildString", "link" : "scala\/xml\/Attribute.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.MetaData.toString", "link" : "scala\/xml\/Attribute.html#toString():String", "kind" : "def"}, {"label" : "toString1", "tail" : "(): String", "member" : "scala.xml.MetaData.toString1", "link" : "scala\/xml\/Attribute.html#toString1():String", "kind" : "def"}, {"label" : "get", "tail" : "(uri: String, scope: NamespaceBinding, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/Attribute.html#get(uri:String,scope:scala.xml.NamespaceBinding,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "get", "tail" : "(uri: String, owner: Node, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/Attribute.html#get(uri:String,owner:scala.xml.Node,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "get", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/Attribute.html#get(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "asAttrMap", "tail" : "(): Map[String, String]", "member" : "scala.xml.MetaData.asAttrMap", "link" : "scala\/xml\/Attribute.html#asAttrMap:Map[String,String]", "kind" : "def"}, {"label" : "prefixedKey", "tail" : "(): String", "member" : "scala.xml.MetaData.prefixedKey", "link" : "scala\/xml\/Attribute.html#prefixedKey:String", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (MetaData) => Boolean): MetaData", "member" : "scala.xml.MetaData.filter", "link" : "scala\/xml\/Attribute.html#filter(f:scala.xml.MetaData=>Boolean):scala.xml.MetaData", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.MetaData.basisForHashCode", "link" : "scala\/xml\/Attribute.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.MetaData.strict_==", "link" : "scala\/xml\/Attribute.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.MetaData.canEqual", "link" : "scala\/xml\/Attribute.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(i: Int): Int", "member" : "scala.xml.MetaData.length", "link" : "scala\/xml\/Attribute.html#length(i:Int):Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.MetaData.length", "link" : "scala\/xml\/Attribute.html#length:Int", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scala.xml.MetaData.hasNext", "link" : "scala\/xml\/Attribute.html#hasNext:Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(namespace_uri: String, owner: Node, key: String): collection.Seq[Node]", "member" : "scala.xml.MetaData.apply", "link" : "scala\/xml\/Attribute.html#apply(namespace_uri:String,owner:scala.xml.Node,key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "final def"}, {"label" : "append", "tail" : "(updates: MetaData, scope: NamespaceBinding): MetaData", "member" : "scala.xml.MetaData.append", "link" : "scala\/xml\/Attribute.html#append(updates:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):scala.xml.MetaData", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Attribute.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Attribute.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Attribute.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Attribute.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Attribute.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[MetaData, B, Attribute.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/Attribute.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Iterable.stringPrefix", "link" : "scala\/xml\/Attribute.html#stringPrefix:String", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/Attribute.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Attribute.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/Attribute.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[collection.Iterable]", "member" : "scala.collection.Iterable.iterableFactory", "link" : "scala\/xml\/Attribute.html#iterableFactory:scala.collection.IterableFactory[Iterable]", "kind" : "def"}, {"label" : "coll", "tail" : "(): Attribute.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/Attribute.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Attribute.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/Attribute.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "scala\/xml\/Attribute.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[MetaData, collection.Iterable[MetaData]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "scala\/xml\/Attribute.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[MetaData]): collection.Iterable[MetaData]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "scala\/xml\/Attribute.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "scala\/xml\/Attribute.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (MetaData) => U): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.tapEach", "link" : "scala\/xml\/Attribute.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/Attribute.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/Attribute.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (MetaData) => (A1, A2, A3)): (collection.Iterable[A1], collection.Iterable[A2], collection.Iterable[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "scala\/xml\/Attribute.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (MetaData) => (A1, A2)): (collection.Iterable[A1], collection.Iterable[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "scala\/xml\/Attribute.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/Attribute.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.Iterable[(MetaData, Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "scala\/xml\/Attribute.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.Iterable[(MetaData, B)]", "member" : "scala.collection.IterableOps.zip", "link" : "scala\/xml\/Attribute.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/Attribute.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "scala\/xml\/Attribute.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (MetaData) => Either[A1, A2]): (collection.Iterable[A1], collection.Iterable[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "scala\/xml\/Attribute.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[MetaData, B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.collect", "link" : "scala\/xml\/Attribute.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (MetaData) => collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "scala\/xml\/Attribute.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (MetaData) => collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "scala\/xml\/Attribute.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (MetaData) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.map", "link" : "scala\/xml\/Attribute.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (MetaData, B) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/Attribute.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, MetaData) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "scala\/xml\/Attribute.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/Attribute.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (MetaData) => K)(f: (MetaData) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/Attribute.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (MetaData) => K)(f: (MetaData) => B): Map[K, collection.Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/Attribute.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (MetaData) => K): Map[K, collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/Attribute.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/Attribute.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/Attribute.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/Attribute.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Attribute.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Attribute.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/Attribute.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/Attribute.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.dropRight", "link" : "scala\/xml\/Attribute.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/Attribute.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (MetaData) => Boolean): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.span", "link" : "scala\/xml\/Attribute.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/Attribute.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.takeRight", "link" : "scala\/xml\/Attribute.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/Attribute.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/Attribute.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (MetaData) => Boolean): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.partition", "link" : "scala\/xml\/Attribute.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (MetaData) => Boolean): WithFilter[MetaData, collection.Iterable]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/Attribute.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.filterNot", "link" : "scala\/xml\/Attribute.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (MetaData) => collection.Iterable[B]): collection.Iterable[collection.Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/Attribute.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[MetaData]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Attribute.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "scala\/xml\/Attribute.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/Attribute.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "scala\/xml\/Attribute.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "view", "tail" : "(): View[MetaData]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Attribute.html#view:scala.collection.View[A]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[MetaData]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/Attribute.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): MetaData", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/Attribute.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[MetaData]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/Attribute.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): MetaData", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/Attribute.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[collection.Iterable]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/Attribute.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/Attribute.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/Attribute.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[MetaData]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/Attribute.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/Attribute.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/Attribute.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/Attribute.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[MetaData]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/Attribute.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[MetaData]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/Attribute.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): collection.immutable.Seq[MetaData]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "scala\/xml\/Attribute.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/Attribute.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[MetaData, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/Attribute.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[MetaData]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/Attribute.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[MetaData]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/Attribute.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[MetaData]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/Attribute.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[MetaData, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/Attribute.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Attribute.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Attribute.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Attribute.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Attribute.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Attribute.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Attribute.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (MetaData, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/Attribute.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, MetaData) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/Attribute.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[MetaData, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/Attribute.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/Attribute.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/Attribute.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/Attribute.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/Attribute.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/Attribute.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/Attribute.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/Attribute.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/Attribute.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/Attribute.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/Attribute.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Attribute.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Attribute.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Attribute.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/Attribute.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/Attribute.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isEmpty", "link" : "scala\/xml\/Attribute.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (MetaData, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/Attribute.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, MetaData) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/Attribute.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/Attribute.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/Attribute.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/Attribute.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/Attribute.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/Attribute.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/Attribute.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/Attribute.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/Attribute.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/Attribute.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (MetaData) => Boolean): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/Attribute.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (MetaData) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/Attribute.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (MetaData) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/Attribute.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (MetaData) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/Attribute.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (MetaData) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/Attribute.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/Attribute.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/Attribute.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[MetaData, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/Attribute.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Attribute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Attribute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Attribute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Attribute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Attribute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Attribute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Attribute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Attribute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Attribute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Attribute.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Attribute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Attribute.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Attribute.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Attribute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Attribute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Attribute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(owner: Node): String", "member" : "scala.xml.Attribute.getNamespace", "link" : "scala\/xml\/Attribute.html#getNamespace(owner:scala.xml.Node):String", "kind" : "abstract def"}, {"label" : "copy", "tail" : "(next: MetaData): Attribute", "member" : "scala.xml.Attribute.copy", "link" : "scala\/xml\/Attribute.html#copy(next:scala.xml.MetaData):scala.xml.Attribute", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(namespace: String, scope: NamespaceBinding, key: String): collection.Seq[Node]", "member" : "scala.xml.Attribute.apply", "link" : "scala\/xml\/Attribute.html#apply(namespace:String,scope:scala.xml.NamespaceBinding,key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(key: String): collection.Seq[Node]", "member" : "scala.xml.Attribute.apply", "link" : "scala\/xml\/Attribute.html#apply(key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "abstract def"}, {"label" : "next", "tail" : ": MetaData", "member" : "scala.xml.Attribute.next", "link" : "scala\/xml\/Attribute.html#next:scala.xml.MetaData", "kind" : "abstract val"}, {"label" : "value", "tail" : ": collection.Seq[Node]", "member" : "scala.xml.Attribute.value", "link" : "scala\/xml\/Attribute.html#value:scala.collection.Seq[scala.xml.Node]", "kind" : "abstract val"}, {"label" : "key", "tail" : ": String", "member" : "scala.xml.Attribute.key", "link" : "scala\/xml\/Attribute.html#key:String", "kind" : "abstract val"}, {"label" : "pre", "tail" : "(): String", "member" : "scala.xml.Attribute.pre", "link" : "scala\/xml\/Attribute.html#pre:String", "kind" : "abstract def"}], "shortDescription" : "This singleton object contains the apply and unapply methods for convenient construction and deconstruction."}, {"name" : "scala.xml.Comment", "shortDescription" : "The class Comment implements an XML node for comments.", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): collection.mutable.StringBuilder", "member" : "scala.xml.Comment.buildString", "link" : "scala\/xml\/Comment.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.Comment.doTransform", "link" : "scala\/xml\/Comment.html#doTransform:Boolean", "kind" : "final def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.Comment.doCollectNamespaces", "link" : "scala\/xml\/Comment.html#doCollectNamespaces:Boolean", "kind" : "final def"}, {"label" : "text", "tail" : "(): String", "member" : "scala.xml.Comment.text", "link" : "scala\/xml\/Comment.html#text:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "scala.xml.Comment.label", "link" : "scala\/xml\/Comment.html#label:String", "kind" : "def"}, {"member" : "scala.xml.Comment#<init>", "error" : "unsupported entity"}, {"label" : "commentText", "tail" : ": String", "member" : "scala.xml.Comment.commentText", "link" : "scala\/xml\/Comment.html#commentText:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/Comment.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "child", "tail" : "(): collection.immutable.Nil", "member" : "scala.xml.SpecialNode.child", "link" : "scala\/xml\/Comment.html#child:scala.collection.immutable.Nil.type", "kind" : "final def"}, {"label" : "namespace", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.namespace", "link" : "scala\/xml\/Comment.html#namespace:Null", "kind" : "final def"}, {"label" : "attributes", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.attributes", "link" : "scala\/xml\/Comment.html#attributes:scala.xml.Null.type", "kind" : "final def"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/Comment.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/Comment.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/Comment.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/Comment.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.theSeq", "link" : "scala\/xml\/Comment.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Node.strict_==", "link" : "scala\/xml\/Comment.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Node.basisForHashCode", "link" : "scala\/xml\/Comment.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Node.canEqual", "link" : "scala\/xml\/Comment.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/Comment.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/Comment.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/Comment.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Comment.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Comment.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/Comment.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "scope", "tail" : "(): NamespaceBinding", "member" : "scala.xml.Node.scope", "link" : "scala\/xml\/Comment.html#scope:scala.xml.NamespaceBinding", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/Comment.html#isAtom:Boolean", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "scala.xml.Node.prefix", "link" : "scala\/xml\/Comment.html#prefix:String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/Comment.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/Comment.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/Comment.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/Comment.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Comment.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Comment.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/Comment.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/Comment.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Comment.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Comment.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Comment.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Comment.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Comment.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/Comment.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/Comment.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/Comment.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/Comment.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/Comment.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/Comment.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/Comment.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/Comment.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/Comment.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/Comment.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/Comment.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/Comment.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/Comment.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/Comment.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/Comment.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/Comment.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/Comment.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/Comment.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/Comment.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/Comment.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/Comment.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/Comment.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/Comment.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/Comment.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/Comment.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/Comment.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/Comment.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/Comment.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/Comment.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/Comment.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/Comment.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/Comment.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/Comment.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/Comment.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/Comment.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/Comment.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/Comment.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/Comment.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/Comment.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/Comment.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/Comment.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/Comment.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/Comment.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/Comment.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/Comment.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/Comment.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/Comment.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Comment.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/Comment.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/Comment.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Comment.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Comment.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/Comment.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/Comment.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/Comment.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/Comment.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/Comment.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Comment.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Comment.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Comment.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Comment.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/Comment.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/Comment.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/Comment.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/Comment.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/Comment.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/Comment.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/Comment.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/Comment.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/Comment.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Comment.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Comment.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Comment.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Comment.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Comment.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Comment.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/Comment.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Comment.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Comment.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Comment.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Comment.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/Comment.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Comment.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Comment.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/Comment.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/Comment.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/Comment.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/Comment.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/Comment.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/Comment.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/Comment.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/Comment.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/Comment.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/Comment.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/Comment.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/Comment.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/Comment.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/Comment.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/Comment.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/Comment.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/Comment.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/Comment.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Comment.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Comment.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/Comment.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/Comment.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/Comment.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/Comment.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, Comment.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/Comment.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/Comment.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Comment.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/Comment.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Comment.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/Comment.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Comment.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/Comment.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/Comment.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/Comment.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/Comment.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/Comment.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/Comment.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/Comment.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/Comment.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/Comment.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/Comment.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/Comment.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/Comment.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/Comment.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Comment.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Comment.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/Comment.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/Comment.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/Comment.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/Comment.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/Comment.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/Comment.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/Comment.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/Comment.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Comment.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/Comment.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/Comment.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/Comment.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/Comment.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/Comment.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/Comment.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/Comment.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/Comment.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/Comment.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/Comment.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/Comment.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/Comment.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/Comment.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/Comment.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/Comment.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/Comment.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/Comment.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/Comment.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/Comment.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/Comment.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Comment.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Comment.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Comment.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Comment.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Comment.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Comment.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/Comment.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/Comment.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/Comment.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/Comment.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/Comment.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/Comment.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/Comment.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/Comment.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/Comment.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/Comment.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/Comment.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/Comment.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/Comment.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Comment.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Comment.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Comment.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/Comment.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/Comment.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/Comment.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/Comment.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/Comment.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/Comment.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/Comment.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/Comment.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/Comment.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/Comment.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/Comment.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/Comment.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/Comment.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/Comment.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/Comment.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/Comment.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/Comment.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/Comment.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/Comment.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/Comment.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/Comment.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Comment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Comment.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Comment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Comment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Comment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Comment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Comment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Comment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Comment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Comment.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Comment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Comment.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Comment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Comment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Comment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Comment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/Comment.html", "kind" : "case class"}, {"name" : "scala.xml.Document", "shortDescription" : "A document information item (according to InfoSet spec).", "members_class" : [{"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Document.canEqual", "link" : "scala\/xml\/Document.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Document.theSeq", "link" : "scala\/xml\/Document.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "allDeclarationsProcessed", "tail" : ": Boolean", "member" : "scala.xml.Document.allDeclarationsProcessed", "link" : "scala\/xml\/Document.html#allDeclarationsProcessed:Boolean", "kind" : "var"}, {"label" : "version", "tail" : ": Option[String]", "member" : "scala.xml.Document.version", "link" : "scala\/xml\/Document.html#version:Option[String]", "kind" : "var"}, {"label" : "standAlone", "tail" : ": Option[Boolean]", "member" : "scala.xml.Document.standAlone", "link" : "scala\/xml\/Document.html#standAlone:Option[Boolean]", "kind" : "var"}, {"label" : "encoding", "tail" : ": Option[String]", "member" : "scala.xml.Document.encoding", "link" : "scala\/xml\/Document.html#encoding:Option[String]", "kind" : "var"}, {"label" : "baseURI", "tail" : ": String", "member" : "scala.xml.Document.baseURI", "link" : "scala\/xml\/Document.html#baseURI:String", "kind" : "var"}, {"label" : "unparsedEntities", "tail" : "(): collection.Seq[EntityDecl]", "member" : "scala.xml.Document.unparsedEntities", "link" : "scala\/xml\/Document.html#unparsedEntities:scala.collection.Seq[scala.xml.dtd.EntityDecl]", "kind" : "def"}, {"label" : "notations", "tail" : "(): collection.Seq[NotationDecl]", "member" : "scala.xml.Document.notations", "link" : "scala\/xml\/Document.html#notations:scala.collection.Seq[scala.xml.dtd.NotationDecl]", "kind" : "def"}, {"label" : "dtd", "tail" : ": DTD", "member" : "scala.xml.Document.dtd", "link" : "scala\/xml\/Document.html#dtd:scala.xml.dtd.DTD", "kind" : "var"}, {"label" : "docElem", "tail" : ": Node", "member" : "scala.xml.Document.docElem", "link" : "scala\/xml\/Document.html#docElem:scala.xml.Node", "kind" : "var"}, {"label" : "children", "tail" : ": collection.Seq[Node]", "member" : "scala.xml.Document.children", "link" : "scala\/xml\/Document.html#children:scala.collection.Seq[scala.xml.Node]", "kind" : "var"}, {"member" : "scala.xml.Document#<init>", "error" : "unsupported entity"}, {"label" : "text", "tail" : "(): String", "member" : "scala.xml.NodeSeq.text", "link" : "scala\/xml\/Document.html#text:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.NodeSeq.toString", "link" : "scala\/xml\/Document.html#toString():String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/Document.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/Document.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/Document.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.NodeSeq.strict_==", "link" : "scala\/xml\/Document.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.NodeSeq.basisForHashCode", "link" : "scala\/xml\/Document.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/Document.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Document.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Document.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/Document.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/Document.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Document.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Document.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Document.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Document.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Document.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/Document.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/Document.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/Document.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/Document.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/Document.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/Document.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/Document.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/Document.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/Document.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/Document.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/Document.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/Document.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/Document.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/Document.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/Document.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/Document.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/Document.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/Document.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/Document.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/Document.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/Document.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/Document.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/Document.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/Document.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/Document.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/Document.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/Document.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/Document.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/Document.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/Document.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/Document.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/Document.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/Document.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/Document.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/Document.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/Document.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/Document.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/Document.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/Document.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/Document.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/Document.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/Document.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/Document.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/Document.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/Document.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/Document.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/Document.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Document.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/Document.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/Document.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Document.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Document.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/Document.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/Document.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/Document.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/Document.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/Document.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Document.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Document.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Document.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Document.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/Document.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/Document.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/Document.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/Document.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/Document.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/Document.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/Document.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/Document.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/Document.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Document.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Document.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Document.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Document.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Document.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Document.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/Document.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Document.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Document.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Document.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Document.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/Document.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Document.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Document.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/Document.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/Document.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/Document.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/Document.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/Document.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/Document.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/Document.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/Document.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/Document.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/Document.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/Document.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/Document.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/Document.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/Document.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/Document.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/Document.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/Document.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/Document.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Document.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Document.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/Document.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/Document.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/Document.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/Document.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, Document.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/Document.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/Document.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Document.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/Document.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Document.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/Document.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Document.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/Document.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/Document.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/Document.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/Document.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/Document.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/Document.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/Document.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/Document.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/Document.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/Document.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/Document.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/Document.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/Document.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Document.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Document.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/Document.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/Document.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/Document.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/Document.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/Document.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/Document.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/Document.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/Document.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Document.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/Document.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/Document.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/Document.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/Document.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/Document.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/Document.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/Document.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/Document.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/Document.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/Document.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/Document.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/Document.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/Document.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/Document.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/Document.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/Document.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/Document.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/Document.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/Document.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/Document.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Document.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Document.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Document.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Document.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Document.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Document.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/Document.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/Document.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/Document.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/Document.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/Document.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/Document.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/Document.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/Document.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/Document.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/Document.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/Document.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/Document.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/Document.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Document.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Document.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Document.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/Document.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/Document.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/Document.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/Document.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/Document.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/Document.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/Document.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/Document.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/Document.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/Document.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/Document.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/Document.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/Document.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/Document.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/Document.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/Document.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/Document.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/Document.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/Document.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/Document.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/Document.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Document.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Document.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Document.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Document.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Document.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Document.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Document.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Document.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Document.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Document.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Document.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Document.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Document.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Document.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Document.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Document.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/Document.html", "kind" : "class"}, {"name" : "scala.xml.Elem", "shortDescription" : "This singleton object contains the apply and unapplySeq methods for convenient construction and deconstruction.", "object" : "scala\/xml\/Elem$.html", "members_class" : [{"label" : "text", "tail" : "(): String", "member" : "scala.xml.Elem.text", "link" : "scala\/xml\/Elem.html#text:String", "kind" : "def"}, {"label" : "copy", "tail" : "(prefix: String, label: String, attributes: MetaData, scope: NamespaceBinding, minimizeEmpty: Boolean, child: collection.Seq[Node]): Elem", "member" : "scala.xml.Elem.copy", "link" : "scala\/xml\/Elem.html#copy(prefix:String,label:String,attributes:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,minimizeEmpty:Boolean,child:scala.collection.Seq[scala.xml.Node]):scala.xml.Elem", "kind" : "def"}, {"label" : "%", "tail" : "(updates: MetaData): Elem", "member" : "scala.xml.Elem.%", "link" : "scala\/xml\/Elem.html#%(updates:scala.xml.MetaData):scala.xml.Elem", "kind" : "final def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Elem.basisForHashCode", "link" : "scala\/xml\/Elem.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "attributes", "tail" : ": MetaData", "member" : "scala.xml.Elem.attributes", "link" : "scala\/xml\/Elem.html#attributes:scala.xml.MetaData", "kind" : "val"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.Elem.doTransform", "link" : "scala\/xml\/Elem.html#doTransform:Boolean", "kind" : "final def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.Elem.doCollectNamespaces", "link" : "scala\/xml\/Elem.html#doCollectNamespaces:Boolean", "kind" : "final def"}, {"member" : "scala.xml.Elem#<init>", "error" : "unsupported entity"}, {"member" : "scala.xml.Elem#<init>", "error" : "unsupported entity"}, {"label" : "child", "tail" : ": Node*", "member" : "scala.xml.Elem.child", "link" : "scala\/xml\/Elem.html#child:scala.xml.Node*", "kind" : "val"}, {"label" : "minimizeEmpty", "tail" : ": Boolean", "member" : "scala.xml.Elem.minimizeEmpty", "link" : "scala\/xml\/Elem.html#minimizeEmpty:Boolean", "kind" : "val"}, {"label" : "scope", "tail" : ": NamespaceBinding", "member" : "scala.xml.Elem.scope", "link" : "scala\/xml\/Elem.html#scope:scala.xml.NamespaceBinding", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "scala.xml.Elem.label", "link" : "scala\/xml\/Elem.html#label:String", "kind" : "val"}, {"label" : "prefix", "tail" : ": String", "member" : "scala.xml.Elem.prefix", "link" : "scala\/xml\/Elem.html#prefix:String", "kind" : "val"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/Elem.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/Elem.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/Elem.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/Elem.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.theSeq", "link" : "scala\/xml\/Elem.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Node.strict_==", "link" : "scala\/xml\/Elem.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Node.canEqual", "link" : "scala\/xml\/Elem.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/Elem.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/Elem.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/Elem.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Elem.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Elem.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/Elem.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "namespace", "tail" : "(): String", "member" : "scala.xml.Node.namespace", "link" : "scala\/xml\/Elem.html#namespace:String", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/Elem.html#isAtom:Boolean", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/Elem.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/Elem.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/Elem.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/Elem.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Elem.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Elem.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/Elem.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/Elem.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Elem.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Elem.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Elem.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Elem.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Elem.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/Elem.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/Elem.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/Elem.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/Elem.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/Elem.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/Elem.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/Elem.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/Elem.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/Elem.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/Elem.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/Elem.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/Elem.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/Elem.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/Elem.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/Elem.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/Elem.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/Elem.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/Elem.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/Elem.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/Elem.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/Elem.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/Elem.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/Elem.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/Elem.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/Elem.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/Elem.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/Elem.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/Elem.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/Elem.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/Elem.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/Elem.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/Elem.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/Elem.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/Elem.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/Elem.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/Elem.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/Elem.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/Elem.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/Elem.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/Elem.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/Elem.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/Elem.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/Elem.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/Elem.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/Elem.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/Elem.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/Elem.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Elem.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/Elem.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/Elem.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Elem.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Elem.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/Elem.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/Elem.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/Elem.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/Elem.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/Elem.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Elem.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Elem.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Elem.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Elem.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/Elem.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/Elem.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/Elem.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/Elem.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/Elem.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/Elem.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/Elem.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/Elem.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/Elem.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Elem.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Elem.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Elem.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Elem.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Elem.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Elem.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/Elem.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Elem.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Elem.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Elem.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Elem.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/Elem.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Elem.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Elem.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/Elem.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/Elem.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/Elem.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/Elem.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/Elem.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/Elem.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/Elem.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/Elem.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/Elem.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/Elem.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/Elem.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/Elem.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/Elem.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/Elem.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/Elem.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/Elem.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/Elem.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/Elem.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Elem.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Elem.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/Elem.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/Elem.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/Elem.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/Elem.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, Elem.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/Elem.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/Elem.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Elem.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/Elem.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Elem.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/Elem.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Elem.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/Elem.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/Elem.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/Elem.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/Elem.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/Elem.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/Elem.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/Elem.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/Elem.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/Elem.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/Elem.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/Elem.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/Elem.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/Elem.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Elem.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Elem.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/Elem.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/Elem.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/Elem.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/Elem.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/Elem.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/Elem.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/Elem.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/Elem.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Elem.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/Elem.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/Elem.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/Elem.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/Elem.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/Elem.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/Elem.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/Elem.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/Elem.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/Elem.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/Elem.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/Elem.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/Elem.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/Elem.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/Elem.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/Elem.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/Elem.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/Elem.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/Elem.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/Elem.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/Elem.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Elem.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Elem.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Elem.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Elem.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Elem.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Elem.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/Elem.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/Elem.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/Elem.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/Elem.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/Elem.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/Elem.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/Elem.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/Elem.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/Elem.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/Elem.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/Elem.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/Elem.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/Elem.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Elem.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Elem.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Elem.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/Elem.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/Elem.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/Elem.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/Elem.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/Elem.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/Elem.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/Elem.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/Elem.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/Elem.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/Elem.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/Elem.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/Elem.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/Elem.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/Elem.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/Elem.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/Elem.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/Elem.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/Elem.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/Elem.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/Elem.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/Elem.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Elem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Elem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Elem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Elem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Elem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Elem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Elem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Elem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Elem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Elem.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Elem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Elem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Elem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Elem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Elem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Elem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "processXml", "tail" : "(p: Process.type): AnyRef { def apply(command: scala.xml.Elem): scala.sys.process.ProcessBuilder }", "member" : "scala.xml.Elem.processXml", "link" : "scala\/xml\/Elem$.html#processXml(p:scala.sys.process.Process.type):AnyRef{defapply(command:scala.xml.Elem):scala.sys.process.ProcessBuilder}", "kind" : "implicit def"}, {"label" : "xmlToProcess", "tail" : "(command: Elem): ProcessBuilder", "member" : "scala.xml.Elem.xmlToProcess", "link" : "scala\/xml\/Elem$.html#xmlToProcess(command:scala.xml.Elem):scala.sys.process.ProcessBuilder", "kind" : "implicit def"}, {"label" : "unapplySeq", "tail" : "(n: Node): Option[(String, String, MetaData, NamespaceBinding, collection.immutable.Seq[Node])]", "member" : "scala.xml.Elem.unapplySeq", "link" : "scala\/xml\/Elem$.html#unapplySeq(n:scala.xml.Node):Option[(String,String,scala.xml.MetaData,scala.xml.NamespaceBinding,Seq[scala.xml.Node])]", "kind" : "def"}, {"label" : "apply", "tail" : "(prefix: String, label: String, attributes: MetaData, scope: NamespaceBinding, minimizeEmpty: Boolean, child: Node*): Elem", "member" : "scala.xml.Elem.apply", "link" : "scala\/xml\/Elem$.html#apply(prefix:String,label:String,attributes:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,minimizeEmpty:Boolean,child:scala.xml.Node*):scala.xml.Elem", "kind" : "def"}, {"label" : "apply", "tail" : "(prefix: String, label: String, attributes: MetaData, scope: NamespaceBinding, child: Node*): Elem", "member" : "scala.xml.Elem.apply", "link" : "scala\/xml\/Elem$.html#apply(prefix:String,label:String,attributes:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,child:scala.xml.Node*):scala.xml.Elem", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Elem$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Elem$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Elem$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Elem$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Elem$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Elem$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Elem$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Elem$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Elem$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Elem$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Elem$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Elem$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Elem$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Elem$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/Elem$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/Elem$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Elem$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Elem$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Elem$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/Elem.html", "kind" : "object"}, {"name" : "scala.xml.EntityRef", "shortDescription" : "The class EntityRef implements an XML node for entity references.", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): collection.mutable.StringBuilder", "member" : "scala.xml.EntityRef.buildString", "link" : "scala\/xml\/EntityRef.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "text", "tail" : "(): String", "member" : "scala.xml.EntityRef.text", "link" : "scala\/xml\/EntityRef.html#text:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "scala.xml.EntityRef.label", "link" : "scala\/xml\/EntityRef.html#label:String", "kind" : "def"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.EntityRef.doTransform", "link" : "scala\/xml\/EntityRef.html#doTransform:Boolean", "kind" : "final def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.EntityRef.doCollectNamespaces", "link" : "scala\/xml\/EntityRef.html#doCollectNamespaces:Boolean", "kind" : "final def"}, {"member" : "scala.xml.EntityRef#<init>", "error" : "unsupported entity"}, {"label" : "entityName", "tail" : ": String", "member" : "scala.xml.EntityRef.entityName", "link" : "scala\/xml\/EntityRef.html#entityName:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/EntityRef.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "child", "tail" : "(): collection.immutable.Nil", "member" : "scala.xml.SpecialNode.child", "link" : "scala\/xml\/EntityRef.html#child:scala.collection.immutable.Nil.type", "kind" : "final def"}, {"label" : "namespace", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.namespace", "link" : "scala\/xml\/EntityRef.html#namespace:Null", "kind" : "final def"}, {"label" : "attributes", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.attributes", "link" : "scala\/xml\/EntityRef.html#attributes:scala.xml.Null.type", "kind" : "final def"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/EntityRef.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/EntityRef.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/EntityRef.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/EntityRef.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.theSeq", "link" : "scala\/xml\/EntityRef.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Node.strict_==", "link" : "scala\/xml\/EntityRef.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Node.basisForHashCode", "link" : "scala\/xml\/EntityRef.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Node.canEqual", "link" : "scala\/xml\/EntityRef.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/EntityRef.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/EntityRef.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/EntityRef.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/EntityRef.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/EntityRef.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/EntityRef.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "scope", "tail" : "(): NamespaceBinding", "member" : "scala.xml.Node.scope", "link" : "scala\/xml\/EntityRef.html#scope:scala.xml.NamespaceBinding", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/EntityRef.html#isAtom:Boolean", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "scala.xml.Node.prefix", "link" : "scala\/xml\/EntityRef.html#prefix:String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/EntityRef.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/EntityRef.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/EntityRef.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/EntityRef.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/EntityRef.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/EntityRef.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/EntityRef.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/EntityRef.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/EntityRef.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/EntityRef.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/EntityRef.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/EntityRef.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/EntityRef.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/EntityRef.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/EntityRef.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/EntityRef.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/EntityRef.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/EntityRef.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/EntityRef.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/EntityRef.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/EntityRef.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/EntityRef.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/EntityRef.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/EntityRef.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/EntityRef.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/EntityRef.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/EntityRef.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/EntityRef.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/EntityRef.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/EntityRef.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/EntityRef.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/EntityRef.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/EntityRef.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/EntityRef.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/EntityRef.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/EntityRef.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/EntityRef.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/EntityRef.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/EntityRef.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/EntityRef.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/EntityRef.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/EntityRef.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/EntityRef.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/EntityRef.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/EntityRef.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/EntityRef.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/EntityRef.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/EntityRef.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/EntityRef.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/EntityRef.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/EntityRef.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/EntityRef.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/EntityRef.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/EntityRef.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/EntityRef.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/EntityRef.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/EntityRef.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/EntityRef.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/EntityRef.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/EntityRef.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): EntityRef.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/EntityRef.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/EntityRef.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/EntityRef.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/EntityRef.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/EntityRef.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/EntityRef.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/EntityRef.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/EntityRef.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/EntityRef.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/EntityRef.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/EntityRef.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/EntityRef.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/EntityRef.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/EntityRef.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/EntityRef.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/EntityRef.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/EntityRef.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/EntityRef.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/EntityRef.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/EntityRef.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/EntityRef.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/EntityRef.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/EntityRef.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/EntityRef.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/EntityRef.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/EntityRef.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/EntityRef.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/EntityRef.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/EntityRef.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/EntityRef.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/EntityRef.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/EntityRef.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/EntityRef.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/EntityRef.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/EntityRef.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/EntityRef.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/EntityRef.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/EntityRef.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/EntityRef.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/EntityRef.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/EntityRef.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/EntityRef.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/EntityRef.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/EntityRef.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/EntityRef.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/EntityRef.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/EntityRef.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/EntityRef.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/EntityRef.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/EntityRef.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/EntityRef.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/EntityRef.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/EntityRef.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/EntityRef.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/EntityRef.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/EntityRef.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/EntityRef.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/EntityRef.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/EntityRef.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/EntityRef.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, EntityRef.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/EntityRef.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/EntityRef.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): EntityRef.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/EntityRef.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): EntityRef.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/EntityRef.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): EntityRef.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/EntityRef.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/EntityRef.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/EntityRef.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/EntityRef.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/EntityRef.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/EntityRef.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/EntityRef.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/EntityRef.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/EntityRef.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/EntityRef.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/EntityRef.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/EntityRef.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/EntityRef.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/EntityRef.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/EntityRef.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/EntityRef.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/EntityRef.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/EntityRef.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/EntityRef.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/EntityRef.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/EntityRef.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/EntityRef.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/EntityRef.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/EntityRef.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/EntityRef.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/EntityRef.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/EntityRef.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/EntityRef.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/EntityRef.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/EntityRef.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/EntityRef.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/EntityRef.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/EntityRef.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/EntityRef.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/EntityRef.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/EntityRef.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/EntityRef.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/EntityRef.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/EntityRef.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/EntityRef.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/EntityRef.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/EntityRef.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/EntityRef.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/EntityRef.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/EntityRef.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/EntityRef.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/EntityRef.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/EntityRef.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/EntityRef.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/EntityRef.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/EntityRef.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/EntityRef.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/EntityRef.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/EntityRef.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/EntityRef.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/EntityRef.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/EntityRef.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/EntityRef.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/EntityRef.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/EntityRef.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/EntityRef.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/EntityRef.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/EntityRef.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/EntityRef.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/EntityRef.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/EntityRef.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/EntityRef.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/EntityRef.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/EntityRef.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/EntityRef.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/EntityRef.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/EntityRef.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/EntityRef.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/EntityRef.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/EntityRef.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/EntityRef.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/EntityRef.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/EntityRef.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/EntityRef.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/EntityRef.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/EntityRef.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/EntityRef.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/EntityRef.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/EntityRef.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/EntityRef.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/EntityRef.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/EntityRef.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/EntityRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/EntityRef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/EntityRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/EntityRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/EntityRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/EntityRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/EntityRef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/EntityRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/EntityRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/EntityRef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/EntityRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/EntityRef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/EntityRef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/EntityRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/EntityRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/EntityRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/EntityRef.html", "kind" : "case class"}, {"name" : "scala.xml.Equality", "object" : "scala\/xml\/Equality$.html", "members_object" : [{"label" : "compareBlithely", "tail" : "(x1: AnyRef, x2: AnyRef): Boolean", "member" : "scala.xml.Equality.compareBlithely", "link" : "scala\/xml\/Equality$.html#compareBlithely(x1:AnyRef,x2:AnyRef):Boolean", "kind" : "def"}, {"label" : "compareBlithely", "tail" : "(x1: AnyRef, x2: Node): Boolean", "member" : "scala.xml.Equality.compareBlithely", "link" : "scala\/xml\/Equality$.html#compareBlithely(x1:AnyRef,x2:scala.xml.Node):Boolean", "kind" : "def"}, {"label" : "compareBlithely", "tail" : "(x1: AnyRef, x2: String): Boolean", "member" : "scala.xml.Equality.compareBlithely", "link" : "scala\/xml\/Equality$.html#compareBlithely(x1:AnyRef,x2:String):Boolean", "kind" : "def"}, {"label" : "asRef", "tail" : "(x: Any): AnyRef", "member" : "scala.xml.Equality.asRef", "link" : "scala\/xml\/Equality$.html#asRef(x:Any):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Equality$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Equality$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Equality$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Equality$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Equality$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Equality$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Equality$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Equality$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Equality$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Equality$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Equality$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Equality$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Equality$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Equality$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/Equality$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/Equality$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Equality$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Equality$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Equality$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/xml\/Equality.html", "kind" : "object", "members_trait" : [{"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Equality.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Equality.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Equality.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Equality.html#hashCode():Int", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.canEqual", "link" : "scala\/xml\/Equality.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Equality.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Equality.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Equality.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Equality.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Equality.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Equality.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Equality.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Equality.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Equality.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Equality.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Equality.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Equality.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Equality.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Equality.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Equality.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Equality.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Equality.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Equality.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_==", "link" : "scala\/xml\/Equality.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "abstract def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Equality.basisForHashCode", "link" : "scala\/xml\/Equality.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "abstract def"}], "shortDescription" : "In an attempt to contain the damage being inflicted on consistency by the ad hoc equals methods spread around xml, the logic is centralized and all the xml classes go through the xml.Equality trait."}, {"name" : "scala.xml.Group", "shortDescription" : "A hack to group XML nodes in one node for output.", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): Nothing", "member" : "scala.xml.Group.buildString", "link" : "scala\/xml\/Group.html#buildString(sb:StringBuilder):Nothing", "kind" : "def"}, {"label" : "child", "tail" : "(): Nothing", "member" : "scala.xml.Group.child", "link" : "scala\/xml\/Group.html#child:Nothing", "kind" : "def"}, {"label" : "namespace", "tail" : "(): Nothing", "member" : "scala.xml.Group.namespace", "link" : "scala\/xml\/Group.html#namespace:Nothing", "kind" : "def"}, {"label" : "attributes", "tail" : "(): Nothing", "member" : "scala.xml.Group.attributes", "link" : "scala\/xml\/Group.html#attributes:Nothing", "kind" : "def"}, {"label" : "label", "tail" : "(): Nothing", "member" : "scala.xml.Group.label", "link" : "scala\/xml\/Group.html#label:Nothing", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Group.basisForHashCode", "link" : "scala\/xml\/Group.html#basisForHashCode:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Group.strict_==", "link" : "scala\/xml\/Group.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Group.canEqual", "link" : "scala\/xml\/Group.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Group.theSeq", "link" : "scala\/xml\/Group.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"member" : "scala.xml.Group#<init>", "error" : "unsupported entity"}, {"label" : "nodes", "tail" : ": collection.Seq[Node]", "member" : "scala.xml.Group.nodes", "link" : "scala\/xml\/Group.html#nodes:scala.collection.Seq[scala.xml.Node]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/Group.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "text", "tail" : "(): String", "member" : "scala.xml.Node.text", "link" : "scala\/xml\/Group.html#text:String", "kind" : "def"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/Group.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/Group.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/Group.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/Group.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/Group.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/Group.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/Group.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Group.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Group.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/Group.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "scope", "tail" : "(): NamespaceBinding", "member" : "scala.xml.Node.scope", "link" : "scala\/xml\/Group.html#scope:scala.xml.NamespaceBinding", "kind" : "def"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.Node.doTransform", "link" : "scala\/xml\/Group.html#doTransform:Boolean", "kind" : "def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.Node.doCollectNamespaces", "link" : "scala\/xml\/Group.html#doCollectNamespaces:Boolean", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/Group.html#isAtom:Boolean", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "scala.xml.Node.prefix", "link" : "scala\/xml\/Group.html#prefix:String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/Group.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/Group.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/Group.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/Group.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Group.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Group.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/Group.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/Group.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Group.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Group.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Group.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Group.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Group.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/Group.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/Group.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/Group.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/Group.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/Group.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/Group.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/Group.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/Group.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/Group.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/Group.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/Group.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/Group.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/Group.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/Group.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/Group.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/Group.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/Group.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/Group.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/Group.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/Group.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/Group.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/Group.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/Group.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/Group.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/Group.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/Group.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/Group.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/Group.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/Group.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/Group.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/Group.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/Group.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/Group.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/Group.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/Group.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/Group.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/Group.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/Group.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/Group.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/Group.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/Group.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/Group.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/Group.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/Group.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/Group.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/Group.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/Group.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Group.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/Group.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/Group.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Group.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Group.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/Group.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/Group.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/Group.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/Group.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/Group.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Group.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Group.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Group.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Group.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/Group.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/Group.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/Group.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/Group.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/Group.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/Group.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/Group.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/Group.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/Group.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Group.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Group.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Group.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Group.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Group.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Group.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/Group.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Group.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Group.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Group.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Group.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/Group.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Group.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Group.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/Group.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/Group.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/Group.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/Group.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/Group.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/Group.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/Group.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/Group.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/Group.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/Group.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/Group.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/Group.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/Group.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/Group.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/Group.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/Group.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/Group.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/Group.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Group.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Group.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/Group.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/Group.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/Group.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/Group.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, Group.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/Group.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/Group.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Group.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/Group.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Group.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/Group.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Group.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/Group.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/Group.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/Group.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/Group.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/Group.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/Group.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/Group.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/Group.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/Group.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/Group.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/Group.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/Group.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/Group.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Group.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Group.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/Group.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/Group.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/Group.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/Group.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/Group.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/Group.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/Group.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/Group.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Group.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/Group.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/Group.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/Group.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/Group.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/Group.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/Group.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/Group.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/Group.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/Group.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/Group.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/Group.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/Group.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/Group.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/Group.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/Group.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/Group.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/Group.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/Group.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/Group.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/Group.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Group.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Group.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Group.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Group.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Group.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Group.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/Group.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/Group.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/Group.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/Group.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/Group.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/Group.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/Group.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/Group.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/Group.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/Group.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/Group.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/Group.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/Group.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Group.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Group.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Group.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/Group.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/Group.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/Group.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/Group.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/Group.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/Group.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/Group.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/Group.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/Group.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/Group.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/Group.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/Group.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/Group.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/Group.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/Group.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/Group.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/Group.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/Group.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/Group.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/Group.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/Group.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Group.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Group.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Group.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Group.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Group.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Group.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Group.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Group.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Group.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Group.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Group.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Group.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Group.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Group.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Group.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Group.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/Group.html", "kind" : "case class"}, {"name" : "scala.xml.MalformedAttributeException", "shortDescription" : "", "members_case class" : [{"member" : "scala.xml.MalformedAttributeException#<init>", "error" : "unsupported entity"}, {"label" : "msg", "tail" : ": String", "member" : "scala.xml.MalformedAttributeException.msg", "link" : "scala\/xml\/MalformedAttributeException.html#msg:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/MalformedAttributeException.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[java.lang.Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scala\/xml\/MalformedAttributeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: java.lang.Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scala\/xml\/MalformedAttributeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scala\/xml\/MalformedAttributeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scala\/xml\/MalformedAttributeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scala\/xml\/MalformedAttributeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/MalformedAttributeException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/MalformedAttributeException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/MalformedAttributeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scala\/xml\/MalformedAttributeException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: java.lang.Throwable): java.lang.Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scala\/xml\/MalformedAttributeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scala\/xml\/MalformedAttributeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scala\/xml\/MalformedAttributeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scala\/xml\/MalformedAttributeException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/MalformedAttributeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/MalformedAttributeException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/MalformedAttributeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/MalformedAttributeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/MalformedAttributeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/MalformedAttributeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/MalformedAttributeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MalformedAttributeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MalformedAttributeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MalformedAttributeException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/MalformedAttributeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/MalformedAttributeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/MalformedAttributeException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/MalformedAttributeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/MalformedAttributeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/MalformedAttributeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/MalformedAttributeException.html", "kind" : "case class"}, {"name" : "scala.xml.MetaData", "shortDescription" : "", "object" : "scala\/xml\/MetaData$.html", "members_class" : [{"label" : "remove", "tail" : "(namespace: String, owner: Node, key: String): MetaData", "member" : "scala.xml.MetaData.remove", "link" : "scala\/xml\/MetaData.html#remove(namespace:String,owner:scala.xml.Node,key:String):scala.xml.MetaData", "kind" : "final def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.MetaData.buildString", "link" : "scala\/xml\/MetaData.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.MetaData.toString", "link" : "scala\/xml\/MetaData.html#toString():String", "kind" : "def"}, {"label" : "toString1", "tail" : "(): String", "member" : "scala.xml.MetaData.toString1", "link" : "scala\/xml\/MetaData.html#toString1():String", "kind" : "def"}, {"label" : "get", "tail" : "(uri: String, scope: NamespaceBinding, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/MetaData.html#get(uri:String,scope:scala.xml.NamespaceBinding,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "get", "tail" : "(uri: String, owner: Node, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/MetaData.html#get(uri:String,owner:scala.xml.Node,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "get", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/MetaData.html#get(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "asAttrMap", "tail" : "(): Map[String, String]", "member" : "scala.xml.MetaData.asAttrMap", "link" : "scala\/xml\/MetaData.html#asAttrMap:Map[String,String]", "kind" : "def"}, {"label" : "prefixedKey", "tail" : "(): String", "member" : "scala.xml.MetaData.prefixedKey", "link" : "scala\/xml\/MetaData.html#prefixedKey:String", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (MetaData) => Boolean): MetaData", "member" : "scala.xml.MetaData.filter", "link" : "scala\/xml\/MetaData.html#filter(f:scala.xml.MetaData=>Boolean):scala.xml.MetaData", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.MetaData.basisForHashCode", "link" : "scala\/xml\/MetaData.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.MetaData.strict_==", "link" : "scala\/xml\/MetaData.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.MetaData.canEqual", "link" : "scala\/xml\/MetaData.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(i: Int): Int", "member" : "scala.xml.MetaData.length", "link" : "scala\/xml\/MetaData.html#length(i:Int):Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.MetaData.length", "link" : "scala\/xml\/MetaData.html#length:Int", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scala.xml.MetaData.hasNext", "link" : "scala\/xml\/MetaData.html#hasNext:Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(namespace_uri: String, owner: Node, key: String): collection.Seq[Node]", "member" : "scala.xml.MetaData.apply", "link" : "scala\/xml\/MetaData.html#apply(namespace_uri:String,owner:scala.xml.Node,key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "final def"}, {"label" : "append", "tail" : "(updates: MetaData, scope: NamespaceBinding): MetaData", "member" : "scala.xml.MetaData.append", "link" : "scala\/xml\/MetaData.html#append(updates:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):scala.xml.MetaData", "kind" : "def"}, {"member" : "scala.xml.MetaData#<init>", "error" : "unsupported entity"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/MetaData.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/MetaData.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/MetaData.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/MetaData.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/MetaData.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[MetaData, B, MetaData.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/MetaData.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Iterable.stringPrefix", "link" : "scala\/xml\/MetaData.html#stringPrefix:String", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/MetaData.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): MetaData.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/MetaData.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[collection.Iterable]", "member" : "scala.collection.Iterable.iterableFactory", "link" : "scala\/xml\/MetaData.html#iterableFactory:scala.collection.IterableFactory[Iterable]", "kind" : "def"}, {"label" : "coll", "tail" : "(): MetaData.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/MetaData.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): MetaData.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/MetaData.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "scala\/xml\/MetaData.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[MetaData, collection.Iterable[MetaData]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "scala\/xml\/MetaData.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[MetaData]): collection.Iterable[MetaData]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "scala\/xml\/MetaData.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "scala\/xml\/MetaData.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (MetaData) => U): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.tapEach", "link" : "scala\/xml\/MetaData.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/MetaData.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/MetaData.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (MetaData) => (A1, A2, A3)): (collection.Iterable[A1], collection.Iterable[A2], collection.Iterable[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "scala\/xml\/MetaData.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (MetaData) => (A1, A2)): (collection.Iterable[A1], collection.Iterable[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "scala\/xml\/MetaData.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/MetaData.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.Iterable[(MetaData, Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "scala\/xml\/MetaData.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.Iterable[(MetaData, B)]", "member" : "scala.collection.IterableOps.zip", "link" : "scala\/xml\/MetaData.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/MetaData.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "scala\/xml\/MetaData.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (MetaData) => Either[A1, A2]): (collection.Iterable[A1], collection.Iterable[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "scala\/xml\/MetaData.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[MetaData, B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.collect", "link" : "scala\/xml\/MetaData.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (MetaData) => collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "scala\/xml\/MetaData.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (MetaData) => collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "scala\/xml\/MetaData.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (MetaData) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.map", "link" : "scala\/xml\/MetaData.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (MetaData, B) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/MetaData.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, MetaData) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "scala\/xml\/MetaData.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/MetaData.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (MetaData) => K)(f: (MetaData) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/MetaData.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (MetaData) => K)(f: (MetaData) => B): Map[K, collection.Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/MetaData.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (MetaData) => K): Map[K, collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/MetaData.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/MetaData.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/MetaData.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/MetaData.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/MetaData.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/MetaData.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/MetaData.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/MetaData.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.dropRight", "link" : "scala\/xml\/MetaData.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/MetaData.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (MetaData) => Boolean): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.span", "link" : "scala\/xml\/MetaData.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/MetaData.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.takeRight", "link" : "scala\/xml\/MetaData.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/MetaData.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/MetaData.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (MetaData) => Boolean): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.partition", "link" : "scala\/xml\/MetaData.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (MetaData) => Boolean): WithFilter[MetaData, collection.Iterable]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/MetaData.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.filterNot", "link" : "scala\/xml\/MetaData.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (MetaData) => collection.Iterable[B]): collection.Iterable[collection.Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/MetaData.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[MetaData]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/MetaData.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "scala\/xml\/MetaData.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/MetaData.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "scala\/xml\/MetaData.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "view", "tail" : "(): View[MetaData]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/MetaData.html#view:scala.collection.View[A]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[MetaData]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/MetaData.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): MetaData", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/MetaData.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[MetaData]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/MetaData.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): MetaData", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/MetaData.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[collection.Iterable]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/MetaData.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/MetaData.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/MetaData.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[MetaData]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/MetaData.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/MetaData.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/MetaData.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/MetaData.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[MetaData]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/MetaData.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[MetaData]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/MetaData.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): collection.immutable.Seq[MetaData]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "scala\/xml\/MetaData.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/MetaData.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[MetaData, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/MetaData.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[MetaData]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/MetaData.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[MetaData]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/MetaData.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[MetaData]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/MetaData.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[MetaData, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/MetaData.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/MetaData.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/MetaData.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/MetaData.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/MetaData.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/MetaData.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/MetaData.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (MetaData, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/MetaData.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, MetaData) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/MetaData.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[MetaData, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/MetaData.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/MetaData.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/MetaData.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/MetaData.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/MetaData.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/MetaData.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/MetaData.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/MetaData.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/MetaData.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/MetaData.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/MetaData.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/MetaData.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/MetaData.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/MetaData.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/MetaData.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "scala\/xml\/MetaData.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/MetaData.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isEmpty", "link" : "scala\/xml\/MetaData.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (MetaData, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/MetaData.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, MetaData) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/MetaData.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/MetaData.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/MetaData.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/MetaData.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/MetaData.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/MetaData.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/MetaData.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/MetaData.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/MetaData.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/MetaData.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (MetaData) => Boolean): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/MetaData.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (MetaData) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/MetaData.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (MetaData) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/MetaData.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (MetaData) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/MetaData.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (MetaData) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/MetaData.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/MetaData.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/MetaData.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[MetaData, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/MetaData.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/MetaData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/MetaData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/MetaData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/MetaData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/MetaData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/MetaData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/MetaData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MetaData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MetaData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MetaData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/MetaData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/MetaData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/MetaData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/MetaData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/MetaData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/MetaData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "remove", "tail" : "(namespace: String, scope: NamespaceBinding, key: String): MetaData", "member" : "scala.xml.MetaData.remove", "link" : "scala\/xml\/MetaData.html#remove(namespace:String,scope:scala.xml.NamespaceBinding,key:String):scala.xml.MetaData", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(key: String): MetaData", "member" : "scala.xml.MetaData.remove", "link" : "scala\/xml\/MetaData.html#remove(key:String):scala.xml.MetaData", "kind" : "abstract def"}, {"label" : "wellformed", "tail" : "(scope: NamespaceBinding): Boolean", "member" : "scala.xml.MetaData.wellformed", "link" : "scala\/xml\/MetaData.html#wellformed(scope:scala.xml.NamespaceBinding):Boolean", "kind" : "abstract def"}, {"label" : "toString1", "tail" : "(sb: StringBuilder): Unit", "member" : "scala.xml.MetaData.toString1", "link" : "scala\/xml\/MetaData.html#toString1(sb:StringBuilder):Unit", "kind" : "abstract def"}, {"label" : "next", "tail" : "(): MetaData", "member" : "scala.xml.MetaData.next", "link" : "scala\/xml\/MetaData.html#next:scala.xml.MetaData", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.MetaData.value", "link" : "scala\/xml\/MetaData.html#value:scala.collection.Seq[scala.xml.Node]", "kind" : "abstract def"}, {"label" : "key", "tail" : "(): String", "member" : "scala.xml.MetaData.key", "link" : "scala\/xml\/MetaData.html#key:String", "kind" : "abstract def"}, {"label" : "isPrefixed", "tail" : "(): Boolean", "member" : "scala.xml.MetaData.isPrefixed", "link" : "scala\/xml\/MetaData.html#isPrefixed:Boolean", "kind" : "abstract def"}, {"label" : "getNamespace", "tail" : "(owner: Node): String", "member" : "scala.xml.MetaData.getNamespace", "link" : "scala\/xml\/MetaData.html#getNamespace(owner:scala.xml.Node):String", "kind" : "abstract def"}, {"label" : "copy", "tail" : "(next: MetaData): MetaData", "member" : "scala.xml.MetaData.copy", "link" : "scala\/xml\/MetaData.html#copy(next:scala.xml.MetaData):scala.xml.MetaData", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(namespace_uri: String, scp: NamespaceBinding, k: String): collection.Seq[Node]", "member" : "scala.xml.MetaData.apply", "link" : "scala\/xml\/MetaData.html#apply(namespace_uri:String,scp:scala.xml.NamespaceBinding,k:String):scala.collection.Seq[scala.xml.Node]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(key: String): collection.Seq[Node]", "member" : "scala.xml.MetaData.apply", "link" : "scala\/xml\/MetaData.html#apply(key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "abstract def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[MetaData]", "member" : "scala.collection.IterableOnce.iterator", "link" : "scala\/xml\/MetaData.html#iterator:Iterator[A]", "kind" : "abstract def"}], "members_object" : [{"label" : "update", "tail" : "(attribs: MetaData, scope: NamespaceBinding, updates: MetaData): MetaData", "member" : "scala.xml.MetaData.update", "link" : "scala\/xml\/MetaData$.html#update(attribs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding,updates:scala.xml.MetaData):scala.xml.MetaData", "kind" : "def"}, {"label" : "getUniversalKey", "tail" : "(attrib: MetaData, scope: NamespaceBinding): String", "member" : "scala.xml.MetaData.getUniversalKey", "link" : "scala\/xml\/MetaData$.html#getUniversalKey(attrib:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):String", "kind" : "def"}, {"label" : "normalize", "tail" : "(attribs: MetaData, scope: NamespaceBinding): MetaData", "member" : "scala.xml.MetaData.normalize", "link" : "scala\/xml\/MetaData$.html#normalize(attribs:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):scala.xml.MetaData", "kind" : "def"}, {"label" : "concatenate", "tail" : "(attribs: MetaData, new_tail: MetaData): MetaData", "member" : "scala.xml.MetaData.concatenate", "link" : "scala\/xml\/MetaData$.html#concatenate(attribs:scala.xml.MetaData,new_tail:scala.xml.MetaData):scala.xml.MetaData", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/MetaData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/MetaData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/MetaData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/MetaData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/MetaData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/MetaData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/MetaData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MetaData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MetaData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MetaData$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/MetaData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/MetaData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/MetaData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/MetaData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/MetaData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/MetaData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/MetaData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/MetaData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/MetaData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/MetaData.html", "kind" : "object"}, {"name" : "scala.xml.MinimizeMode", "shortDescription" : "Governs how empty elements (i.e.", "object" : "scala\/xml\/MinimizeMode$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "scala\/xml\/MinimizeMode$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetOps[Enumeration.this.Value,scala.collection.immutable.SortedSet,Enumeration.this.ValueSet]withStrictOptimizedIterableOps[Enumeration.this.Value,scala.collection.immutable.Set,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "ValueOrdering", "tail" : "", "member" : "scala.Enumeration.ValueOrdering", "link" : "scala\/xml\/MinimizeMode$.html#ValueOrdering", "kind" : "implicit object"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "scala\/xml\/MinimizeMode$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "scala\/xml\/MinimizeMode$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "Never", "tail" : ": Value", "member" : "scala.xml.MinimizeMode.Never", "link" : "scala\/xml\/MinimizeMode$.html#Never:scala.xml.MinimizeMode.Value", "kind" : "val"}, {"label" : "Always", "tail" : ": Value", "member" : "scala.xml.MinimizeMode.Always", "link" : "scala\/xml\/MinimizeMode$.html#Always:scala.xml.MinimizeMode.Value", "kind" : "val"}, {"label" : "Default", "tail" : ": Value", "member" : "scala.xml.MinimizeMode.Default", "link" : "scala\/xml\/MinimizeMode$.html#Default:scala.xml.MinimizeMode.Value", "kind" : "val"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "scala\/xml\/MinimizeMode$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "scala\/xml\/MinimizeMode$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "scala\/xml\/MinimizeMode$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "scala\/xml\/MinimizeMode$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "scala\/xml\/MinimizeMode$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "scala\/xml\/MinimizeMode$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "scala\/xml\/MinimizeMode$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "scala\/xml\/MinimizeMode$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "scala\/xml\/MinimizeMode$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "scala\/xml\/MinimizeMode$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "scala\/xml\/MinimizeMode$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "scala\/xml\/MinimizeMode$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/MinimizeMode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/MinimizeMode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/MinimizeMode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/MinimizeMode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/MinimizeMode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/MinimizeMode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/MinimizeMode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MinimizeMode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MinimizeMode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/MinimizeMode$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/MinimizeMode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/MinimizeMode$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/MinimizeMode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/MinimizeMode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/MinimizeMode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/MinimizeMode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/MinimizeMode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/MinimizeMode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.NamespaceBinding", "shortDescription" : "The class NamespaceBinding represents namespace bindings and scopes.", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder, stop: NamespaceBinding): Unit", "member" : "scala.xml.NamespaceBinding.buildString", "link" : "scala\/xml\/NamespaceBinding.html#buildString(sb:StringBuilder,stop:scala.xml.NamespaceBinding):Unit", "kind" : "def"}, {"label" : "buildString", "tail" : "(stop: NamespaceBinding): String", "member" : "scala.xml.NamespaceBinding.buildString", "link" : "scala\/xml\/NamespaceBinding.html#buildString(stop:scala.xml.NamespaceBinding):String", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.NamespaceBinding.basisForHashCode", "link" : "scala\/xml\/NamespaceBinding.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.NamespaceBinding.strict_==", "link" : "scala\/xml\/NamespaceBinding.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.NamespaceBinding.canEqual", "link" : "scala\/xml\/NamespaceBinding.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.NamespaceBinding.toString", "link" : "scala\/xml\/NamespaceBinding.html#toString():String", "kind" : "def"}, {"label" : "getPrefix", "tail" : "(_uri: String): String", "member" : "scala.xml.NamespaceBinding.getPrefix", "link" : "scala\/xml\/NamespaceBinding.html#getPrefix(_uri:String):String", "kind" : "def"}, {"label" : "getURI", "tail" : "(_prefix: String): String", "member" : "scala.xml.NamespaceBinding.getURI", "link" : "scala\/xml\/NamespaceBinding.html#getURI(_prefix:String):String", "kind" : "def"}, {"member" : "scala.xml.NamespaceBinding#<init>", "error" : "unsupported entity"}, {"label" : "parent", "tail" : ": NamespaceBinding", "member" : "scala.xml.NamespaceBinding.parent", "link" : "scala\/xml\/NamespaceBinding.html#parent:scala.xml.NamespaceBinding", "kind" : "val"}, {"label" : "uri", "tail" : ": String", "member" : "scala.xml.NamespaceBinding.uri", "link" : "scala\/xml\/NamespaceBinding.html#uri:String", "kind" : "val"}, {"label" : "prefix", "tail" : ": String", "member" : "scala.xml.NamespaceBinding.prefix", "link" : "scala\/xml\/NamespaceBinding.html#prefix:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/NamespaceBinding.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/NamespaceBinding.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/NamespaceBinding.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/NamespaceBinding.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/NamespaceBinding.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/NamespaceBinding.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/NamespaceBinding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/NamespaceBinding.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/NamespaceBinding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/NamespaceBinding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/NamespaceBinding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/NamespaceBinding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/NamespaceBinding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NamespaceBinding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NamespaceBinding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NamespaceBinding.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/NamespaceBinding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/NamespaceBinding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/NamespaceBinding.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/NamespaceBinding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/NamespaceBinding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/NamespaceBinding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/NamespaceBinding.html", "kind" : "case class"}, {"name" : "scala.xml.Node", "shortDescription" : "This singleton object contains the unapplySeq method for convenient deconstruction.", "object" : "scala\/xml\/Node$.html", "members_class" : [{"label" : "text", "tail" : "(): String", "member" : "scala.xml.Node.text", "link" : "scala\/xml\/Node.html#text:String", "kind" : "def"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/Node.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/Node.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/Node.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/Node.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.theSeq", "link" : "scala\/xml\/Node.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Node.strict_==", "link" : "scala\/xml\/Node.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Node.basisForHashCode", "link" : "scala\/xml\/Node.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Node.canEqual", "link" : "scala\/xml\/Node.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/Node.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/Node.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/Node.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attributes", "tail" : "(): MetaData", "member" : "scala.xml.Node.attributes", "link" : "scala\/xml\/Node.html#attributes:scala.xml.MetaData", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Node.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Node.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/Node.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "namespace", "tail" : "(): String", "member" : "scala.xml.Node.namespace", "link" : "scala\/xml\/Node.html#namespace:String", "kind" : "def"}, {"label" : "scope", "tail" : "(): NamespaceBinding", "member" : "scala.xml.Node.scope", "link" : "scala\/xml\/Node.html#scope:scala.xml.NamespaceBinding", "kind" : "def"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.Node.doTransform", "link" : "scala\/xml\/Node.html#doTransform:Boolean", "kind" : "def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.Node.doCollectNamespaces", "link" : "scala\/xml\/Node.html#doCollectNamespaces:Boolean", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/Node.html#isAtom:Boolean", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "scala.xml.Node.prefix", "link" : "scala\/xml\/Node.html#prefix:String", "kind" : "def"}, {"member" : "scala.xml.Node#<init>", "error" : "unsupported entity"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/Node.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/Node.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/Node.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/Node.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Node.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Node.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/Node.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/Node.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Node.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Node.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Node.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Node.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Node.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/Node.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/Node.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/Node.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/Node.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/Node.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/Node.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/Node.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/Node.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/Node.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/Node.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/Node.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/Node.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/Node.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/Node.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/Node.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/Node.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/Node.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/Node.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/Node.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/Node.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/Node.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/Node.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/Node.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/Node.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/Node.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/Node.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/Node.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/Node.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/Node.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/Node.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/Node.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/Node.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/Node.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/Node.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/Node.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/Node.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/Node.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/Node.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/Node.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/Node.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/Node.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/Node.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/Node.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/Node.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/Node.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/Node.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/Node.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Node.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/Node.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/Node.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Node.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Node.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/Node.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/Node.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/Node.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/Node.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/Node.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Node.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Node.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Node.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Node.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/Node.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/Node.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/Node.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/Node.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/Node.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/Node.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/Node.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/Node.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/Node.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Node.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Node.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Node.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Node.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Node.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Node.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/Node.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Node.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Node.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Node.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Node.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/Node.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Node.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Node.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/Node.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/Node.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/Node.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/Node.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/Node.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/Node.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/Node.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/Node.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/Node.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/Node.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/Node.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/Node.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/Node.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/Node.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/Node.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/Node.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/Node.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/Node.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Node.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Node.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/Node.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/Node.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/Node.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/Node.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, Node.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/Node.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/Node.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Node.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/Node.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Node.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/Node.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Node.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/Node.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/Node.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/Node.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/Node.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/Node.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/Node.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/Node.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/Node.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/Node.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/Node.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/Node.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/Node.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/Node.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Node.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Node.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/Node.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/Node.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/Node.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/Node.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/Node.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/Node.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/Node.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/Node.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Node.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/Node.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/Node.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/Node.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/Node.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/Node.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/Node.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/Node.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/Node.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/Node.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/Node.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/Node.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/Node.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/Node.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/Node.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/Node.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/Node.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/Node.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/Node.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/Node.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/Node.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Node.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Node.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Node.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Node.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Node.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Node.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/Node.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/Node.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/Node.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/Node.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/Node.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/Node.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/Node.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/Node.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/Node.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/Node.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/Node.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/Node.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/Node.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Node.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Node.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Node.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/Node.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/Node.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/Node.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/Node.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/Node.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/Node.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/Node.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/Node.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/Node.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/Node.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/Node.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/Node.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/Node.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/Node.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/Node.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/Node.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/Node.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/Node.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/Node.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/Node.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/Node.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Node.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Node.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Node.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Node.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Node.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Node.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Node.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Node.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Node.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Node.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Node.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Node.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Node.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Node.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Node.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Node.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "child", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.child", "link" : "scala\/xml\/Node.html#child:scala.collection.Seq[scala.xml.Node]", "kind" : "abstract def"}, {"label" : "label", "tail" : "(): String", "member" : "scala.xml.Node.label", "link" : "scala\/xml\/Node.html#label:String", "kind" : "abstract def"}], "members_object" : [{"label" : "unapplySeq", "tail" : "(n: Node): Some[(String, MetaData, collection.immutable.Seq[Node])]", "member" : "scala.xml.Node.unapplySeq", "link" : "scala\/xml\/Node$.html#unapplySeq(n:scala.xml.Node):Some[(String,scala.xml.MetaData,Seq[scala.xml.Node])]", "kind" : "def"}, {"label" : "EmptyNamespace", "tail" : ": String", "member" : "scala.xml.Node.EmptyNamespace", "link" : "scala\/xml\/Node$.html#EmptyNamespace:String", "kind" : "val"}, {"label" : "NoAttributes", "tail" : "(): MetaData", "member" : "scala.xml.Node.NoAttributes", "link" : "scala\/xml\/Node$.html#NoAttributes:scala.xml.MetaData", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Node$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Node$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Node$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Node$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Node$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Node$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Node$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Node$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Node$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Node$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Node$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Node$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Node$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Node$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/Node$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/Node$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Node$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Node$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Node$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/Node.html", "kind" : "object"}, {"name" : "scala.xml.NodeBuffer", "shortDescription" : "This class acts as a Buffer for nodes.", "members_class" : [{"label" : "&+", "tail" : "(o: Any): NodeBuffer", "member" : "scala.xml.NodeBuffer.&+", "link" : "scala\/xml\/NodeBuffer.html#&+(o:Any):scala.xml.NodeBuffer", "kind" : "def"}, {"member" : "scala.xml.NodeBuffer#<init>", "error" : "unsupported entity"}, {"label" : "className", "tail" : "(): String", "member" : "scala.xml.ScalaVersionSpecificNodeBuffer.className", "link" : "scala\/xml\/NodeBuffer.html#className:String", "kind" : "def"}, {"label" : "sortInPlace", "tail" : "()(ord: Ordering[B]): NodeBuffer.this.type", "member" : "scala.collection.mutable.ArrayBuffer.sortInPlace", "link" : "scala\/xml\/NodeBuffer.html#sortInPlace[B>:A]()(implicitord:Ordering[B]):ArrayBuffer.this.type", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.mutable.ArrayBuffer.copyToArray", "link" : "scala\/xml\/NodeBuffer.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.mutable.ArrayBuffer.copyToArray", "link" : "scala\/xml\/NodeBuffer.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.mutable.ArrayBuffer.stringPrefix", "link" : "scala\/xml\/NodeBuffer.html#stringPrefix:String", "kind" : "def"}, {"label" : "mapResult", "tail" : "(f: (ArrayBuffer[Node]) => NewTo): Builder[Node, NewTo]", "member" : "scala.collection.mutable.ArrayBuffer.mapResult", "link" : "scala\/xml\/NodeBuffer.html#mapResult[NewTo](f:scala.collection.mutable.ArrayBuffer[A]=>NewTo):scala.collection.mutable.Builder[A,NewTo]", "kind" : "def"}, {"label" : "result", "tail" : "(): NodeBuffer.this.type", "member" : "scala.collection.mutable.ArrayBuffer.result", "link" : "scala\/xml\/NodeBuffer.html#result():ArrayBuffer.this.type", "kind" : "def"}, {"label" : "remove", "tail" : "(index: Int, count: Int): Unit", "member" : "scala.collection.mutable.ArrayBuffer.remove", "link" : "scala\/xml\/NodeBuffer.html#remove(index:Int,count:Int):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(index: Int): Node", "member" : "scala.collection.mutable.ArrayBuffer.remove", "link" : "scala\/xml\/NodeBuffer.html#remove(index:Int):A", "kind" : "def"}, {"label" : "insertAll", "tail" : "(index: Int, elems: collection.IterableOnce[Node]): Unit", "member" : "scala.collection.mutable.ArrayBuffer.insertAll", "link" : "scala\/xml\/NodeBuffer.html#insertAll(index:Int,elems:scala.collection.IterableOnce[A]):Unit", "kind" : "def"}, {"label" : "prepend", "tail" : "(elem: Node): NodeBuffer.this.type", "member" : "scala.collection.mutable.ArrayBuffer.prepend", "link" : "scala\/xml\/NodeBuffer.html#prepend(elem:A):ArrayBuffer.this.type", "kind" : "def"}, {"label" : "insert", "tail" : "(index: Int, elem: Node): Unit", "member" : "scala.collection.mutable.ArrayBuffer.insert", "link" : "scala\/xml\/NodeBuffer.html#insert(index:Int,elem:A):Unit", "kind" : "def"}, {"label" : "addAll", "tail" : "(elems: collection.IterableOnce[Node]): NodeBuffer.this.type", "member" : "scala.collection.mutable.ArrayBuffer.addAll", "link" : "scala\/xml\/NodeBuffer.html#addAll(elems:scala.collection.IterableOnce[A]):ArrayBuffer.this.type", "kind" : "def"}, {"label" : "addOne", "tail" : "(elem: Node): NodeBuffer.this.type", "member" : "scala.collection.mutable.ArrayBuffer.addOne", "link" : "scala\/xml\/NodeBuffer.html#addOne(elem:A):ArrayBuffer.this.type", "kind" : "def"}, {"label" : "clearAndShrink", "tail" : "(size: Int): NodeBuffer.this.type", "member" : "scala.collection.mutable.ArrayBuffer.clearAndShrink", "link" : "scala\/xml\/NodeBuffer.html#clearAndShrink(size:Int):ArrayBuffer.this.type", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.ArrayBuffer.clear", "link" : "scala\/xml\/NodeBuffer.html#clear():Unit", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[ArrayBuffer]", "member" : "scala.collection.mutable.ArrayBuffer.iterableFactory", "link" : "scala\/xml\/NodeBuffer.html#iterableFactory:scala.collection.SeqFactory[scala.collection.mutable.ArrayBuffer]", "kind" : "def"}, {"label" : "view", "tail" : "(): ArrayBufferView[Node]", "member" : "scala.collection.mutable.ArrayBuffer.view", "link" : "scala\/xml\/NodeBuffer.html#view:scala.collection.mutable.ArrayBufferView[A]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.mutable.ArrayBuffer.length", "link" : "scala\/xml\/NodeBuffer.html#length:Int", "kind" : "def"}, {"label" : "update", "tail" : "(index: Int, elem: Node): Unit", "member" : "scala.collection.mutable.ArrayBuffer.update", "link" : "scala\/xml\/NodeBuffer.html#update(index:Int,elem:A):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int): Node", "member" : "scala.collection.mutable.ArrayBuffer.apply", "link" : "scala\/xml\/NodeBuffer.html#apply(n:Int):A", "kind" : "def"}, {"label" : "trimToSize", "tail" : "(): Unit", "member" : "scala.collection.mutable.ArrayBuffer.trimToSize", "link" : "scala\/xml\/NodeBuffer.html#trimToSize():Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.ArrayBuffer.sizeHint", "link" : "scala\/xml\/NodeBuffer.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "ensureSize", "tail" : "(n: Int): Unit", "member" : "scala.collection.mutable.ArrayBuffer.ensureSize", "link" : "scala\/xml\/NodeBuffer.html#ensureSize(n:Int):Unit", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.mutable.ArrayBuffer.knownSize", "link" : "scala\/xml\/NodeBuffer.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S with EfficientSplit", "member" : "scala.collection.mutable.ArrayBuffer.stepper", "link" : "scala\/xml\/NodeBuffer.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):Swithcollection.Stepper.EfficientSplit", "kind" : "def"}, {"label" : "size0", "tail" : ": Int", "member" : "scala.collection.mutable.ArrayBuffer.size0", "link" : "scala\/xml\/NodeBuffer.html#size0:Int", "kind" : "var"}, {"label" : "array", "tail" : ": Array[AnyRef]", "member" : "scala.collection.mutable.ArrayBuffer.array", "link" : "scala\/xml\/NodeBuffer.html#array:Array[AnyRef]", "kind" : "var"}, {"label" : "writeReplace", "tail" : "(): AnyRef", "member" : "scala.collection.generic.DefaultSerializable.writeReplace", "link" : "scala\/xml\/NodeBuffer.html#writeReplace():AnyRef", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): ArrayBuffer[Node]", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/NodeBuffer.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): ArrayBuffer[Node]", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/NodeBuffer.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): ArrayBuffer[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/NodeBuffer.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): ArrayBuffer[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/NodeBuffer.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): ArrayBuffer[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/NodeBuffer.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): ArrayBuffer[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/NodeBuffer.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): ArrayBuffer[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/NodeBuffer.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): ArrayBuffer[Node]", "member" : "scala.collection.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/NodeBuffer.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): ArrayBuffer[Node]", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/NodeBuffer.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): ArrayBuffer[Node]", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/NodeBuffer.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): ArrayBuffer[Node]", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/NodeBuffer.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (ArrayBuffer[A1], ArrayBuffer[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/NodeBuffer.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): ArrayBuffer[Node]", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/NodeBuffer.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): ArrayBuffer[Node]", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/NodeBuffer.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): ArrayBuffer[Node]", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/NodeBuffer.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): ArrayBuffer[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/NodeBuffer.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): ArrayBuffer[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/NodeBuffer.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/NodeBuffer.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): ArrayBuffer[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/NodeBuffer.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/NodeBuffer.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): ArrayBuffer[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/NodeBuffer.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/NodeBuffer.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): ArrayBuffer[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/NodeBuffer.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/NodeBuffer.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/NodeBuffer.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): ArrayBuffer[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/NodeBuffer.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/NodeBuffer.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): ArrayBuffer[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/NodeBuffer.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (ArrayBuffer[A1], ArrayBuffer[A2], ArrayBuffer[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/NodeBuffer.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (ArrayBuffer[A1], ArrayBuffer[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/NodeBuffer.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (ArrayBuffer[Node], ArrayBuffer[Node])", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/NodeBuffer.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (ArrayBuffer[Node], ArrayBuffer[Node])", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/NodeBuffer.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "patchInPlace", "tail" : "(from: Int, patch: collection.IterableOnce[Node], replaced: Int): NodeBuffer.this.type", "member" : "scala.collection.mutable.IndexedBuffer.patchInPlace", "link" : "scala\/xml\/NodeBuffer.html#patchInPlace(from:Int,patch:scala.collection.IterableOnce[A],replaced:Int):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "filterInPlace", "tail" : "(p: (Node) => Boolean): NodeBuffer.this.type", "member" : "scala.collection.mutable.IndexedBuffer.filterInPlace", "link" : "scala\/xml\/NodeBuffer.html#filterInPlace(p:A=>Boolean):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "flatMapInPlace", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeBuffer.this.type", "member" : "scala.collection.mutable.IndexedBuffer.flatMapInPlace", "link" : "scala\/xml\/NodeBuffer.html#flatMapInPlace(f:A=>scala.collection.IterableOnce[A]):IndexedBuffer.this.type", "kind" : "def"}, {"label" : "sortInPlaceBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeBuffer.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlaceBy", "link" : "scala\/xml\/NodeBuffer.html#sortInPlaceBy[B](f:A=>B)(implicitord:Ordering[B]):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "sortInPlaceWith", "tail" : "(lt: (Node, Node) => Boolean): NodeBuffer.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.sortInPlaceWith", "link" : "scala\/xml\/NodeBuffer.html#sortInPlaceWith(lt:(A,A)=>Boolean):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "mapInPlace", "tail" : "(f: (Node) => Node): NodeBuffer.this.type", "member" : "scala.collection.mutable.IndexedSeqOps.mapInPlace", "link" : "scala\/xml\/NodeBuffer.html#mapInPlace(f:A=>A):IndexedSeqOps.this.type", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: math.Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "scala\/xml\/NodeBuffer.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: math.Ordering[B]): SearchResult", "member" : "scala.collection.IndexedSeqOps.search", "link" : "scala\/xml\/NodeBuffer.html#search[B>:A](elem:B)(implicitord:scala.math.Ordering[B]):collection.Searching.SearchResult", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "scala\/xml\/NodeBuffer.html#lengthCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOps.lengthCompare", "link" : "scala\/xml\/NodeBuffer.html#lengthCompare(len:Int):Int", "kind" : "final def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IndexedSeqOps.last", "link" : "scala\/xml\/NodeBuffer.html#last:A", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): ArrayBuffer[Node]", "member" : "scala.collection.IndexedSeqOps.slice", "link" : "scala\/xml\/NodeBuffer.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "reverse", "tail" : "(): ArrayBuffer[Node]", "member" : "scala.collection.IndexedSeqOps.reverse", "link" : "scala\/xml\/NodeBuffer.html#reverse:C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): ArrayBuffer[Node]", "member" : "scala.collection.IndexedSeqOps.drop", "link" : "scala\/xml\/NodeBuffer.html#drop(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): ArrayBuffer[Node]", "member" : "scala.collection.IndexedSeqOps.take", "link" : "scala\/xml\/NodeBuffer.html#take(n:Int):C", "kind" : "def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IndexedSeqOps.reversed", "link" : "scala\/xml\/NodeBuffer.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IndexedSeqView[Node]", "member" : "scala.collection.IndexedSeqOps.view", "link" : "scala\/xml\/NodeBuffer.html#view(from:Int,until:Int):scala.collection.IndexedSeqView[A]", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IndexedSeqOps.reverseIterator", "link" : "scala\/xml\/NodeBuffer.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IndexedSeqOps.iterator", "link" : "scala\/xml\/NodeBuffer.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "padToInPlace", "tail" : "(len: Int, elem: Node): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.padToInPlace", "link" : "scala\/xml\/NodeBuffer.html#padToInPlace(len:Int,elem:A):Buffer.this.type", "kind" : "def"}, {"label" : "takeWhileInPlace", "tail" : "(p: (Node) => Boolean): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.takeWhileInPlace", "link" : "scala\/xml\/NodeBuffer.html#takeWhileInPlace(p:A=>Boolean):Buffer.this.type", "kind" : "def"}, {"label" : "dropWhileInPlace", "tail" : "(p: (Node) => Boolean): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.dropWhileInPlace", "link" : "scala\/xml\/NodeBuffer.html#dropWhileInPlace(p:A=>Boolean):Buffer.this.type", "kind" : "def"}, {"label" : "sliceInPlace", "tail" : "(start: Int, end: Int): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.sliceInPlace", "link" : "scala\/xml\/NodeBuffer.html#sliceInPlace(start:Int,end:Int):Buffer.this.type", "kind" : "def"}, {"label" : "takeRightInPlace", "tail" : "(n: Int): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.takeRightInPlace", "link" : "scala\/xml\/NodeBuffer.html#takeRightInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "takeInPlace", "tail" : "(n: Int): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.takeInPlace", "link" : "scala\/xml\/NodeBuffer.html#takeInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "dropRightInPlace", "tail" : "(n: Int): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.dropRightInPlace", "link" : "scala\/xml\/NodeBuffer.html#dropRightInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "dropInPlace", "tail" : "(n: Int): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.dropInPlace", "link" : "scala\/xml\/NodeBuffer.html#dropInPlace(n:Int):Buffer.this.type", "kind" : "def"}, {"label" : "trimEnd", "tail" : "(n: Int): Unit", "member" : "scala.collection.mutable.Buffer.trimEnd", "link" : "scala\/xml\/NodeBuffer.html#trimEnd(n:Int):Unit", "kind" : "def"}, {"label" : "trimStart", "tail" : "(n: Int): Unit", "member" : "scala.collection.mutable.Buffer.trimStart", "link" : "scala\/xml\/NodeBuffer.html#trimStart(n:Int):Unit", "kind" : "def"}, {"label" : "subtractOne", "tail" : "(x: Node): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.subtractOne", "link" : "scala\/xml\/NodeBuffer.html#subtractOne(x:A):Buffer.this.type", "kind" : "def"}, {"label" : "++=:", "tail" : "(elems: collection.IterableOnce[Node]): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.++=:", "link" : "scala\/xml\/NodeBuffer.html#++=:(elems:scala.collection.IterableOnce[A]):Buffer.this.type", "kind" : "final def"}, {"label" : "prepend", "tail" : "(elems: Node*): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.prepend", "link" : "scala\/xml\/NodeBuffer.html#prepend(elems:A*):Buffer.this.type", "kind" : "final def"}, {"label" : "prependAll", "tail" : "(elems: collection.IterableOnce[Node]): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.prependAll", "link" : "scala\/xml\/NodeBuffer.html#prependAll(elems:scala.collection.IterableOnce[A]):Buffer.this.type", "kind" : "def"}, {"label" : "+=:", "tail" : "(elem: Node): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.+=:", "link" : "scala\/xml\/NodeBuffer.html#+=:(elem:A):Buffer.this.type", "kind" : "final def"}, {"label" : "appendAll", "tail" : "(xs: collection.IterableOnce[Node]): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.appendAll", "link" : "scala\/xml\/NodeBuffer.html#appendAll(xs:scala.collection.IterableOnce[A]):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(elems: Node*): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.append", "link" : "scala\/xml\/NodeBuffer.html#append(elems:A*):Buffer.this.type", "kind" : "final def"}, {"label" : "append", "tail" : "(elem: Node): NodeBuffer.this.type", "member" : "scala.collection.mutable.Buffer.append", "link" : "scala\/xml\/NodeBuffer.html#append(elem:A):Buffer.this.type", "kind" : "final def"}, {"label" : "--=", "tail" : "(xs: collection.IterableOnce[Node]): NodeBuffer.this.type", "member" : "scala.collection.mutable.Shrinkable.--=", "link" : "scala\/xml\/NodeBuffer.html#--=(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "final def"}, {"label" : "subtractAll", "tail" : "(xs: collection.IterableOnce[Node]): NodeBuffer.this.type", "member" : "scala.collection.mutable.Shrinkable.subtractAll", "link" : "scala\/xml\/NodeBuffer.html#subtractAll(xs:scala.collection.IterableOnce[A]):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem1: Node, elem2: Node, elems: Node*): NodeBuffer.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "scala\/xml\/NodeBuffer.html#-=(elem1:A,elem2:A,elems:A*):Shrinkable.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(elem: Node): NodeBuffer.this.type", "member" : "scala.collection.mutable.Shrinkable.-=", "link" : "scala\/xml\/NodeBuffer.html#-=(elem:A):Shrinkable.this.type", "kind" : "final def"}, {"label" : "++=", "tail" : "(xs: collection.IterableOnce[Node]): NodeBuffer.this.type", "member" : "scala.collection.mutable.Growable.++=", "link" : "scala\/xml\/NodeBuffer.html#++=(xs:scala.collection.IterableOnce[A]):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem1: Node, elem2: Node, elems: Node*): NodeBuffer.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "scala\/xml\/NodeBuffer.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "final def"}, {"label" : "+=", "tail" : "(elem: Node): NodeBuffer.this.type", "member" : "scala.collection.mutable.Growable.+=", "link" : "scala\/xml\/NodeBuffer.html#+=(elem:A):Growable.this.type", "kind" : "final def"}, {"label" : "transform", "tail" : "(f: (Node) => Node): NodeBuffer.this.type", "member" : "scala.collection.mutable.SeqOps.transform", "link" : "scala\/xml\/NodeBuffer.html#transform(f:A=>A):SeqOps.this.type", "kind" : "final def"}, {"label" : "clone", "tail" : "(): ArrayBuffer[Node]", "member" : "scala.collection.mutable.SeqOps.clone", "link" : "scala\/xml\/NodeBuffer.html#clone():C", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Seq.toString", "link" : "scala\/xml\/NodeBuffer.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.Seq.hashCode", "link" : "scala\/xml\/NodeBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "scala.collection.Seq.equals", "link" : "scala\/xml\/NodeBuffer.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.Seq.canEqual", "link" : "scala\/xml\/NodeBuffer.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/NodeBuffer.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): ArrayBuffer[B]", "member" : "scala.collection.SeqOps.updated", "link" : "scala\/xml\/NodeBuffer.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): ArrayBuffer[B]", "member" : "scala.collection.SeqOps.patch", "link" : "scala\/xml\/NodeBuffer.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/NodeBuffer.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/NodeBuffer.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/NodeBuffer.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/NodeBuffer.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/NodeBuffer.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/NodeBuffer.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/NodeBuffer.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): ArrayBuffer[Node]", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/NodeBuffer.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): ArrayBuffer[Node]", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/NodeBuffer.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): ArrayBuffer[Node]", "member" : "scala.collection.SeqOps.sorted", "link" : "scala\/xml\/NodeBuffer.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[ArrayBuffer[Node]]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/NodeBuffer.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[ArrayBuffer[Node]]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/NodeBuffer.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): ArrayBuffer[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/NodeBuffer.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/NodeBuffer.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/NodeBuffer.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/NodeBuffer.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/NodeBuffer.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/NodeBuffer.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/NodeBuffer.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/NodeBuffer.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/NodeBuffer.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/NodeBuffer.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/NodeBuffer.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/NodeBuffer.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/NodeBuffer.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/NodeBuffer.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/NodeBuffer.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/NodeBuffer.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/NodeBuffer.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/NodeBuffer.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/NodeBuffer.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/NodeBuffer.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/NodeBuffer.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "distinct", "tail" : "(): ArrayBuffer[Node]", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/NodeBuffer.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/NodeBuffer.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): ArrayBuffer[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/NodeBuffer.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): ArrayBuffer[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/NodeBuffer.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): ArrayBuffer[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/NodeBuffer.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): ArrayBuffer[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/NodeBuffer.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): ArrayBuffer[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/NodeBuffer.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): ArrayBuffer[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/NodeBuffer.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/NodeBuffer.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/NodeBuffer.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/NodeBuffer.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/NodeBuffer.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/NodeBuffer.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/NodeBuffer.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/NodeBuffer.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/NodeBuffer.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/NodeBuffer.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/NodeBuffer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, NodeBuffer.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/NodeBuffer.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "seq", "tail" : "(): NodeBuffer.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/NodeBuffer.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): NodeBuffer.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/NodeBuffer.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): NodeBuffer.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/NodeBuffer.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): ArrayBuffer[Node]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "scala\/xml\/NodeBuffer.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, ArrayBuffer[Node]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "scala\/xml\/NodeBuffer.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): ArrayBuffer[Node]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "scala\/xml\/NodeBuffer.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "inits", "tail" : "(): collection.Iterator[ArrayBuffer[Node]]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/NodeBuffer.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[ArrayBuffer[Node]]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/NodeBuffer.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): ArrayBuffer[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/NodeBuffer.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): ArrayBuffer[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/NodeBuffer.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): ArrayBuffer[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/NodeBuffer.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): ArrayBuffer[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/NodeBuffer.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/NodeBuffer.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, ArrayBuffer[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/NodeBuffer.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, ArrayBuffer[Node]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/NodeBuffer.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "init", "tail" : "(): ArrayBuffer[Node]", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/NodeBuffer.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): ArrayBuffer[Node]", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/NodeBuffer.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[ArrayBuffer[Node]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/NodeBuffer.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[ArrayBuffer[Node]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/NodeBuffer.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[ArrayBuffer[Node]]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/NodeBuffer.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): ArrayBuffer[Node]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/NodeBuffer.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): ArrayBuffer[Node]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/NodeBuffer.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (ArrayBuffer[Node], ArrayBuffer[Node])", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/NodeBuffer.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]ArrayBuffer[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/NodeBuffer.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): ArrayBuffer[ArrayBuffer[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/NodeBuffer.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/NodeBuffer.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/NodeBuffer.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/NodeBuffer.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/NodeBuffer.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]ArrayBuffer[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/NodeBuffer.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): ArrayBuffer[Node]", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/NodeBuffer.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/NodeBuffer.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/NodeBuffer.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/NodeBuffer.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/NodeBuffer.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/NodeBuffer.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/NodeBuffer.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): collection.immutable.Seq[Node]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "scala\/xml\/NodeBuffer.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/NodeBuffer.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/NodeBuffer.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/NodeBuffer.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/NodeBuffer.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/NodeBuffer.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/NodeBuffer.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/NodeBuffer.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/NodeBuffer.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/NodeBuffer.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/NodeBuffer.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/NodeBuffer.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/NodeBuffer.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/NodeBuffer.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/NodeBuffer.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/NodeBuffer.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/NodeBuffer.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/NodeBuffer.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/NodeBuffer.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/NodeBuffer.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/NodeBuffer.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/NodeBuffer.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/NodeBuffer.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/NodeBuffer.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/NodeBuffer.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/NodeBuffer.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/NodeBuffer.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/NodeBuffer.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/NodeBuffer.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/NodeBuffer.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/NodeBuffer.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/NodeBuffer.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/NodeBuffer.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/NodeBuffer.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/NodeBuffer.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/NodeBuffer.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/NodeBuffer.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/NodeBuffer.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/NodeBuffer.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/NodeBuffer.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/NodeBuffer.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/NodeBuffer.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/NodeBuffer.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/NodeBuffer.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/NodeBuffer.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/NodeBuffer.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/NodeBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/NodeBuffer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/NodeBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/NodeBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/NodeBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/NodeBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/NodeBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NodeBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NodeBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NodeBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/NodeBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/NodeBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/NodeBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/NodeBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/NodeBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/NodeBuffer.html", "kind" : "class"}, {"name" : "scala.xml.NodeSeq", "shortDescription" : "This object ...", "object" : "scala\/xml\/NodeSeq$.html", "members_class" : [{"label" : "text", "tail" : "(): String", "member" : "scala.xml.NodeSeq.text", "link" : "scala\/xml\/NodeSeq.html#text:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.NodeSeq.toString", "link" : "scala\/xml\/NodeSeq.html#toString():String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/NodeSeq.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/NodeSeq.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/NodeSeq.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.NodeSeq.strict_==", "link" : "scala\/xml\/NodeSeq.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.NodeSeq.canEqual", "link" : "scala\/xml\/NodeSeq.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.NodeSeq.basisForHashCode", "link" : "scala\/xml\/NodeSeq.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/NodeSeq.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/NodeSeq.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/NodeSeq.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/NodeSeq.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/NodeSeq.html#length:Int", "kind" : "def"}, {"member" : "scala.xml.NodeSeq#<init>", "error" : "unsupported entity"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/NodeSeq.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/NodeSeq.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/NodeSeq.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/NodeSeq.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/NodeSeq.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/NodeSeq.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/NodeSeq.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/NodeSeq.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/NodeSeq.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/NodeSeq.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/NodeSeq.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/NodeSeq.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/NodeSeq.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/NodeSeq.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/NodeSeq.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/NodeSeq.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/NodeSeq.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/NodeSeq.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/NodeSeq.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/NodeSeq.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/NodeSeq.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/NodeSeq.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/NodeSeq.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/NodeSeq.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/NodeSeq.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/NodeSeq.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/NodeSeq.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/NodeSeq.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/NodeSeq.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/NodeSeq.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/NodeSeq.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/NodeSeq.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/NodeSeq.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/NodeSeq.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/NodeSeq.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/NodeSeq.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/NodeSeq.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/NodeSeq.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/NodeSeq.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/NodeSeq.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/NodeSeq.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/NodeSeq.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/NodeSeq.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/NodeSeq.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/NodeSeq.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/NodeSeq.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/NodeSeq.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/NodeSeq.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/NodeSeq.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/NodeSeq.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/NodeSeq.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/NodeSeq.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): NodeSeq.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/NodeSeq.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/NodeSeq.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/NodeSeq.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/NodeSeq.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/NodeSeq.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/NodeSeq.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/NodeSeq.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/NodeSeq.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/NodeSeq.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/NodeSeq.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/NodeSeq.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/NodeSeq.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/NodeSeq.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/NodeSeq.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/NodeSeq.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/NodeSeq.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/NodeSeq.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/NodeSeq.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/NodeSeq.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/NodeSeq.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/NodeSeq.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/NodeSeq.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/NodeSeq.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/NodeSeq.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/NodeSeq.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/NodeSeq.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/NodeSeq.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/NodeSeq.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/NodeSeq.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/NodeSeq.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/NodeSeq.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/NodeSeq.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/NodeSeq.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/NodeSeq.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/NodeSeq.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/NodeSeq.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/NodeSeq.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/NodeSeq.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/NodeSeq.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/NodeSeq.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/NodeSeq.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/NodeSeq.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/NodeSeq.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/NodeSeq.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/NodeSeq.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/NodeSeq.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/NodeSeq.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/NodeSeq.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/NodeSeq.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/NodeSeq.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/NodeSeq.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/NodeSeq.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/NodeSeq.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/NodeSeq.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/NodeSeq.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/NodeSeq.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/NodeSeq.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/NodeSeq.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/NodeSeq.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/NodeSeq.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, NodeSeq.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/NodeSeq.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/NodeSeq.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): NodeSeq.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/NodeSeq.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): NodeSeq.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/NodeSeq.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): NodeSeq.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/NodeSeq.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/NodeSeq.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/NodeSeq.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/NodeSeq.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/NodeSeq.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/NodeSeq.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/NodeSeq.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/NodeSeq.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/NodeSeq.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/NodeSeq.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/NodeSeq.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/NodeSeq.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/NodeSeq.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/NodeSeq.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/NodeSeq.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/NodeSeq.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/NodeSeq.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/NodeSeq.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/NodeSeq.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/NodeSeq.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/NodeSeq.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/NodeSeq.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/NodeSeq.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/NodeSeq.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/NodeSeq.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/NodeSeq.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/NodeSeq.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/NodeSeq.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/NodeSeq.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/NodeSeq.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/NodeSeq.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/NodeSeq.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/NodeSeq.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/NodeSeq.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/NodeSeq.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/NodeSeq.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/NodeSeq.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/NodeSeq.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/NodeSeq.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/NodeSeq.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/NodeSeq.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/NodeSeq.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/NodeSeq.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/NodeSeq.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/NodeSeq.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/NodeSeq.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/NodeSeq.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/NodeSeq.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/NodeSeq.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/NodeSeq.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/NodeSeq.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/NodeSeq.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/NodeSeq.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/NodeSeq.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/NodeSeq.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/NodeSeq.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/NodeSeq.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/NodeSeq.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/NodeSeq.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/NodeSeq.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/NodeSeq.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/NodeSeq.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/NodeSeq.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/NodeSeq.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/NodeSeq.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/NodeSeq.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/NodeSeq.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/NodeSeq.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/NodeSeq.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/NodeSeq.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/NodeSeq.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/NodeSeq.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/NodeSeq.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/NodeSeq.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/NodeSeq.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/NodeSeq.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/NodeSeq.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/NodeSeq.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/NodeSeq.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/NodeSeq.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/NodeSeq.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/NodeSeq.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/NodeSeq.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/NodeSeq.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/NodeSeq.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/NodeSeq.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/NodeSeq.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/NodeSeq.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/NodeSeq.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/NodeSeq.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/NodeSeq.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/NodeSeq.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/NodeSeq.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/NodeSeq.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NodeSeq.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NodeSeq.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NodeSeq.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/NodeSeq.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/NodeSeq.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/NodeSeq.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/NodeSeq.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/NodeSeq.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/NodeSeq.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.NodeSeq.theSeq", "link" : "scala\/xml\/NodeSeq.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "abstract def"}], "members_object" : [{"label" : "seqToNodeSeq", "tail" : "(s: collection.Seq[Node]): NodeSeq", "member" : "scala.xml.NodeSeq.seqToNodeSeq", "link" : "scala\/xml\/NodeSeq$.html#seqToNodeSeq(s:scala.collection.Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "implicit def"}, {"label" : "newBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.NodeSeq.newBuilder", "link" : "scala\/xml\/NodeSeq$.html#newBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "canBuildFrom", "tail" : "(): CBF[Coll, Node, NodeSeq]", "member" : "scala.xml.NodeSeq.canBuildFrom", "link" : "scala\/xml\/NodeSeq$.html#canBuildFrom:scala.xml.ScalaVersionSpecific.CBF[scala.xml.NodeSeq.Coll,scala.xml.Node,scala.xml.NodeSeq]", "kind" : "implicit def"}, {"label" : "Coll", "tail" : "", "member" : "scala.xml.NodeSeq.Coll", "link" : "scala\/xml\/NodeSeq$.html#Coll=scala.xml.NodeSeq", "kind" : "type"}, {"label" : "fromSeq", "tail" : "(s: collection.Seq[Node]): NodeSeq", "member" : "scala.xml.NodeSeq.fromSeq", "link" : "scala\/xml\/NodeSeq$.html#fromSeq(s:scala.collection.Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "Empty", "tail" : ": NodeSeq", "member" : "scala.xml.NodeSeq.Empty", "link" : "scala\/xml\/NodeSeq$.html#Empty:scala.xml.NodeSeq", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/NodeSeq$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/NodeSeq$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/NodeSeq$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/NodeSeq$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/NodeSeq$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/NodeSeq$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/NodeSeq$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NodeSeq$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NodeSeq$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/NodeSeq$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/NodeSeq$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/NodeSeq$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/NodeSeq$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/NodeSeq$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/NodeSeq$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/NodeSeq$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/NodeSeq$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/NodeSeq$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/NodeSeq$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/NodeSeq.html", "kind" : "object"}, {"name" : "scala.xml.Null", "shortDescription" : "Essentially, every method in here is a dummy, returning Zero[T].", "object" : "scala\/xml\/Null$.html", "members_object" : [{"label" : "remove", "tail" : "(namespace: String, scope: NamespaceBinding, key: String): Null", "member" : "scala.xml.Null.remove", "link" : "scala\/xml\/Null$.html#remove(namespace:String,scope:scala.xml.NamespaceBinding,key:String):scala.xml.Null.type", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): Null", "member" : "scala.xml.Null.remove", "link" : "scala\/xml\/Null$.html#remove(key:String):scala.xml.Null.type", "kind" : "def"}, {"label" : "wellformed", "tail" : "(scope: NamespaceBinding): Boolean", "member" : "scala.xml.Null.wellformed", "link" : "scala\/xml\/Null$.html#wellformed(scope:scala.xml.NamespaceBinding):Boolean", "kind" : "def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Null.buildString", "link" : "scala\/xml\/Null$.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Null.toString", "link" : "scala\/xml\/Null$.html#toString():String", "kind" : "def"}, {"label" : "toString1", "tail" : "(): String", "member" : "scala.xml.Null.toString1", "link" : "scala\/xml\/Null$.html#toString1():String", "kind" : "def"}, {"label" : "toString1", "tail" : "(sb: StringBuilder): Unit", "member" : "scala.xml.Null.toString1", "link" : "scala\/xml\/Null$.html#toString1(sb:StringBuilder):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(key: String): collection.Seq[Node]", "member" : "scala.xml.Null.apply", "link" : "scala\/xml\/Null$.html#apply(key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "apply", "tail" : "(namespace: String, scope: NamespaceBinding, key: String): Null", "member" : "scala.xml.Null.apply", "link" : "scala\/xml\/Null$.html#apply(namespace:String,scope:scala.xml.NamespaceBinding,key:String):Null", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Null.basisForHashCode", "link" : "scala\/xml\/Null$.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Null.strict_==", "link" : "scala\/xml\/Null$.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(i: Int): Int", "member" : "scala.xml.Null.length", "link" : "scala\/xml\/Null$.html#length(i:Int):Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.Null.length", "link" : "scala\/xml\/Null$.html#length:Int", "kind" : "def"}, {"label" : "isPrefixed", "tail" : "(): Boolean", "member" : "scala.xml.Null.isPrefixed", "link" : "scala\/xml\/Null$.html#isPrefixed:Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): Null", "member" : "scala.xml.Null.value", "link" : "scala\/xml\/Null$.html#value:Null", "kind" : "def"}, {"label" : "key", "tail" : "(): Null", "member" : "scala.xml.Null.key", "link" : "scala\/xml\/Null$.html#key:Null", "kind" : "def"}, {"label" : "next", "tail" : "(): Null", "member" : "scala.xml.Null.next", "link" : "scala\/xml\/Null$.html#next:Null", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scala.xml.Null.hasNext", "link" : "scala\/xml\/Null$.html#hasNext:Boolean", "kind" : "def"}, {"label" : "getNamespace", "tail" : "(owner: Node): Null", "member" : "scala.xml.Null.getNamespace", "link" : "scala\/xml\/Null$.html#getNamespace(owner:scala.xml.Node):Null", "kind" : "def"}, {"label" : "copy", "tail" : "(next: MetaData): MetaData", "member" : "scala.xml.Null.copy", "link" : "scala\/xml\/Null$.html#copy(next:scala.xml.MetaData):scala.xml.MetaData", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (MetaData) => Boolean): MetaData", "member" : "scala.xml.Null.filter", "link" : "scala\/xml\/Null$.html#filter(f:scala.xml.MetaData=>Boolean):scala.xml.MetaData", "kind" : "def"}, {"label" : "append", "tail" : "(m: MetaData, scope: NamespaceBinding): MetaData", "member" : "scala.xml.Null.append", "link" : "scala\/xml\/Null$.html#append(m:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):scala.xml.MetaData", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.xml.Null.size", "link" : "scala\/xml\/Null$.html#size:Int", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Nothing]", "member" : "scala.xml.Null.iterator", "link" : "scala\/xml\/Null$.html#iterator:Iterator[Nothing]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/Null$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "scala\/xml\/Null$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "remove", "tail" : "(namespace: String, owner: Node, key: String): MetaData", "member" : "scala.xml.MetaData.remove", "link" : "scala\/xml\/Null$.html#remove(namespace:String,owner:scala.xml.Node,key:String):scala.xml.MetaData", "kind" : "final def"}, {"label" : "get", "tail" : "(uri: String, scope: NamespaceBinding, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/Null$.html#get(uri:String,scope:scala.xml.NamespaceBinding,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "get", "tail" : "(uri: String, owner: Node, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/Null$.html#get(uri:String,owner:scala.xml.Node,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "get", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/Null$.html#get(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "asAttrMap", "tail" : "(): Map[String, String]", "member" : "scala.xml.MetaData.asAttrMap", "link" : "scala\/xml\/Null$.html#asAttrMap:Map[String,String]", "kind" : "def"}, {"label" : "prefixedKey", "tail" : "(): String", "member" : "scala.xml.MetaData.prefixedKey", "link" : "scala\/xml\/Null$.html#prefixedKey:String", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.MetaData.canEqual", "link" : "scala\/xml\/Null$.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(namespace_uri: String, owner: Node, key: String): collection.Seq[Node]", "member" : "scala.xml.MetaData.apply", "link" : "scala\/xml\/Null$.html#apply(namespace_uri:String,owner:scala.xml.Node,key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "final def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Null$.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Null$.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Null$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Null$.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Null$.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[MetaData, B, Null.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/Null$.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Iterable.stringPrefix", "link" : "scala\/xml\/Null$.html#stringPrefix:String", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/Null$.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Null.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/Null$.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[collection.Iterable]", "member" : "scala.collection.Iterable.iterableFactory", "link" : "scala\/xml\/Null$.html#iterableFactory:scala.collection.IterableFactory[Iterable]", "kind" : "def"}, {"label" : "coll", "tail" : "(): Null.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/Null$.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Null.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/Null$.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "scala\/xml\/Null$.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[MetaData, collection.Iterable[MetaData]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "scala\/xml\/Null$.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[MetaData]): collection.Iterable[MetaData]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "scala\/xml\/Null$.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "scala\/xml\/Null$.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (MetaData) => U): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.tapEach", "link" : "scala\/xml\/Null$.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/Null$.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/Null$.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (MetaData) => (A1, A2, A3)): (collection.Iterable[A1], collection.Iterable[A2], collection.Iterable[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "scala\/xml\/Null$.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (MetaData) => (A1, A2)): (collection.Iterable[A1], collection.Iterable[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "scala\/xml\/Null$.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/Null$.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.Iterable[(MetaData, Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "scala\/xml\/Null$.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.Iterable[(MetaData, B)]", "member" : "scala.collection.IterableOps.zip", "link" : "scala\/xml\/Null$.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/Null$.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "scala\/xml\/Null$.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (MetaData) => Either[A1, A2]): (collection.Iterable[A1], collection.Iterable[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "scala\/xml\/Null$.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[MetaData, B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.collect", "link" : "scala\/xml\/Null$.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (MetaData) => collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "scala\/xml\/Null$.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (MetaData) => collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "scala\/xml\/Null$.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (MetaData) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.map", "link" : "scala\/xml\/Null$.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (MetaData, B) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/Null$.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, MetaData) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "scala\/xml\/Null$.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/Null$.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (MetaData) => K)(f: (MetaData) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/Null$.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (MetaData) => K)(f: (MetaData) => B): Map[K, collection.Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/Null$.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (MetaData) => K): Map[K, collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/Null$.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/Null$.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/Null$.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/Null$.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Null$.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Null$.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/Null$.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/Null$.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.dropRight", "link" : "scala\/xml\/Null$.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/Null$.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (MetaData) => Boolean): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.span", "link" : "scala\/xml\/Null$.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/Null$.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.takeRight", "link" : "scala\/xml\/Null$.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/Null$.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/Null$.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (MetaData) => Boolean): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.partition", "link" : "scala\/xml\/Null$.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (MetaData) => Boolean): WithFilter[MetaData, collection.Iterable]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/Null$.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.filterNot", "link" : "scala\/xml\/Null$.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (MetaData) => collection.Iterable[B]): collection.Iterable[collection.Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/Null$.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[MetaData]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Null$.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "scala\/xml\/Null$.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/Null$.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "scala\/xml\/Null$.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "view", "tail" : "(): View[MetaData]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Null$.html#view:scala.collection.View[A]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[MetaData]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/Null$.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): MetaData", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/Null$.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[MetaData]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/Null$.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): MetaData", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/Null$.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[collection.Iterable]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/Null$.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/Null$.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/Null$.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[MetaData]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/Null$.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/Null$.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/Null$.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/Null$.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[MetaData]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/Null$.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[MetaData]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/Null$.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): collection.immutable.Seq[MetaData]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "scala\/xml\/Null$.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/Null$.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[MetaData, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/Null$.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[MetaData]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/Null$.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[MetaData]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/Null$.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[MetaData]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/Null$.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[MetaData, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/Null$.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Null$.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Null$.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Null$.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Null$.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Null$.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Null$.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (MetaData, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/Null$.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, MetaData) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/Null$.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[MetaData, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/Null$.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/Null$.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/Null$.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/Null$.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/Null$.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/Null$.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/Null$.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/Null$.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/Null$.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/Null$.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/Null$.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Null$.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Null$.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Null$.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/Null$.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/Null$.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isEmpty", "link" : "scala\/xml\/Null$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (MetaData, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/Null$.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, MetaData) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/Null$.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/Null$.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/Null$.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/Null$.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/Null$.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/Null$.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/Null$.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/Null$.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/Null$.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/Null$.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (MetaData) => Boolean): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/Null$.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (MetaData) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/Null$.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (MetaData) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/Null$.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (MetaData) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/Null$.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (MetaData) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/Null$.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/Null$.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/Null$.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[MetaData, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/Null$.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Null$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Null$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Null$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Null$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Null$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Null$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Null$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Null$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Null$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Null$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Null$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Null$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Null$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Null$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Null$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Null$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.PCData", "shortDescription" : "This class (which is not used by all XML parsers, but always used by the XHTML one) represents parseable character data, which appeared as CDATA sections in the input and is to be preserved as CDATA section in the output.", "object" : "scala\/xml\/PCData$.html", "members_class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.PCData.buildString", "link" : "scala\/xml\/PCData.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.PCData#<init>", "error" : "unsupported entity"}, {"label" : "text", "tail" : "(): String", "member" : "scala.xml.Atom.text", "link" : "scala\/xml\/PCData.html#text:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "scala.xml.Atom.label", "link" : "scala\/xml\/PCData.html#label:String", "kind" : "def"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.Atom.doTransform", "link" : "scala\/xml\/PCData.html#doTransform:Boolean", "kind" : "final def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.Atom.doCollectNamespaces", "link" : "scala\/xml\/PCData.html#doCollectNamespaces:Boolean", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Atom.canEqual", "link" : "scala\/xml\/PCData.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Atom.strict_==", "link" : "scala\/xml\/PCData.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Atom.basisForHashCode", "link" : "scala\/xml\/PCData.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "data", "tail" : ": String", "member" : "scala.xml.Atom.data", "link" : "scala\/xml\/PCData.html#data:A", "kind" : "val"}, {"label" : "child", "tail" : "(): collection.immutable.Nil", "member" : "scala.xml.SpecialNode.child", "link" : "scala\/xml\/PCData.html#child:scala.collection.immutable.Nil.type", "kind" : "final def"}, {"label" : "namespace", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.namespace", "link" : "scala\/xml\/PCData.html#namespace:Null", "kind" : "final def"}, {"label" : "attributes", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.attributes", "link" : "scala\/xml\/PCData.html#attributes:scala.xml.Null.type", "kind" : "final def"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/PCData.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/PCData.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/PCData.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/PCData.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.theSeq", "link" : "scala\/xml\/PCData.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/PCData.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/PCData.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/PCData.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/PCData.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/PCData.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/PCData.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "scope", "tail" : "(): NamespaceBinding", "member" : "scala.xml.Node.scope", "link" : "scala\/xml\/PCData.html#scope:scala.xml.NamespaceBinding", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/PCData.html#isAtom:Boolean", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "scala.xml.Node.prefix", "link" : "scala\/xml\/PCData.html#prefix:String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/PCData.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/PCData.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/PCData.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/PCData.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/PCData.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/PCData.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/PCData.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/PCData.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/PCData.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/PCData.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/PCData.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/PCData.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/PCData.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/PCData.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/PCData.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/PCData.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/PCData.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/PCData.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/PCData.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/PCData.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/PCData.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/PCData.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/PCData.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/PCData.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/PCData.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/PCData.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/PCData.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/PCData.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/PCData.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/PCData.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/PCData.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/PCData.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/PCData.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/PCData.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/PCData.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/PCData.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/PCData.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/PCData.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/PCData.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/PCData.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/PCData.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/PCData.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/PCData.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/PCData.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/PCData.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/PCData.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/PCData.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/PCData.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/PCData.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/PCData.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/PCData.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/PCData.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/PCData.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/PCData.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/PCData.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/PCData.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/PCData.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/PCData.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/PCData.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/PCData.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): PCData.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/PCData.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/PCData.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/PCData.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/PCData.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/PCData.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/PCData.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/PCData.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/PCData.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/PCData.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/PCData.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/PCData.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/PCData.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/PCData.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/PCData.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/PCData.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/PCData.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/PCData.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/PCData.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/PCData.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/PCData.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/PCData.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/PCData.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/PCData.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/PCData.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/PCData.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/PCData.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/PCData.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/PCData.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/PCData.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/PCData.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/PCData.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/PCData.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/PCData.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/PCData.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/PCData.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/PCData.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/PCData.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/PCData.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/PCData.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/PCData.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/PCData.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/PCData.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/PCData.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/PCData.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/PCData.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/PCData.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/PCData.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/PCData.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/PCData.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/PCData.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/PCData.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/PCData.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/PCData.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/PCData.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/PCData.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/PCData.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/PCData.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/PCData.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/PCData.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/PCData.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, PCData.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/PCData.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/PCData.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): PCData.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/PCData.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): PCData.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/PCData.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): PCData.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/PCData.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/PCData.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/PCData.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/PCData.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/PCData.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/PCData.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/PCData.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/PCData.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/PCData.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/PCData.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/PCData.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/PCData.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/PCData.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/PCData.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/PCData.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/PCData.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/PCData.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/PCData.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/PCData.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/PCData.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/PCData.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/PCData.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/PCData.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/PCData.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/PCData.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/PCData.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/PCData.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/PCData.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/PCData.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/PCData.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/PCData.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/PCData.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/PCData.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/PCData.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/PCData.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/PCData.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/PCData.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/PCData.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/PCData.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/PCData.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/PCData.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/PCData.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/PCData.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/PCData.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/PCData.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/PCData.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/PCData.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/PCData.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/PCData.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/PCData.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/PCData.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/PCData.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/PCData.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/PCData.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/PCData.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/PCData.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/PCData.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/PCData.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/PCData.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/PCData.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/PCData.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/PCData.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/PCData.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/PCData.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/PCData.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/PCData.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/PCData.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/PCData.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/PCData.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/PCData.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/PCData.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/PCData.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/PCData.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/PCData.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/PCData.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/PCData.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/PCData.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/PCData.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/PCData.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/PCData.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/PCData.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/PCData.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/PCData.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/PCData.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/PCData.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/PCData.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/PCData.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/PCData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/PCData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/PCData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/PCData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/PCData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/PCData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/PCData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PCData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PCData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PCData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/PCData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/PCData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/PCData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/PCData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/PCData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/PCData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(other: Any): Option[String]", "member" : "scala.xml.PCData.unapply", "link" : "scala\/xml\/PCData$.html#unapply(other:Any):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: String): PCData", "member" : "scala.xml.PCData.apply", "link" : "scala\/xml\/PCData$.html#apply(data:String):scala.xml.PCData", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/PCData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/PCData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/PCData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/PCData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/PCData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/PCData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/PCData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PCData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PCData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PCData$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/PCData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/PCData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/PCData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/PCData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/PCData$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/PCData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/PCData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/PCData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/PCData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/PCData.html", "kind" : "class"}, {"name" : "scala.xml.PrefixedAttribute", "shortDescription" : "prefixed attributes always have a non-null namespace.", "object" : "scala\/xml\/PrefixedAttribute$.html", "members_class" : [{"label" : "apply", "tail" : "(namespace: String, scope: NamespaceBinding, key: String): collection.Seq[Node]", "member" : "scala.xml.PrefixedAttribute.apply", "link" : "scala\/xml\/PrefixedAttribute.html#apply(namespace:String,scope:scala.xml.NamespaceBinding,key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "apply", "tail" : "(key: String): collection.Seq[Node]", "member" : "scala.xml.PrefixedAttribute.apply", "link" : "scala\/xml\/PrefixedAttribute.html#apply(key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "getNamespace", "tail" : "(owner: Node): String", "member" : "scala.xml.PrefixedAttribute.getNamespace", "link" : "scala\/xml\/PrefixedAttribute.html#getNamespace(owner:scala.xml.Node):String", "kind" : "def"}, {"label" : "copy", "tail" : "(next: MetaData): PrefixedAttribute", "member" : "scala.xml.PrefixedAttribute.copy", "link" : "scala\/xml\/PrefixedAttribute.html#copy(next:scala.xml.MetaData):scala.xml.PrefixedAttribute", "kind" : "def"}, {"member" : "scala.xml.PrefixedAttribute#<init>", "error" : "unsupported entity"}, {"member" : "scala.xml.PrefixedAttribute#<init>", "error" : "unsupported entity"}, {"label" : "next", "tail" : ": MetaData", "member" : "scala.xml.PrefixedAttribute.next", "link" : "scala\/xml\/PrefixedAttribute.html#next:scala.xml.MetaData", "kind" : "val"}, {"member" : "scala.xml.PrefixedAttribute#<init>", "error" : "unsupported entity"}, {"label" : "next1", "tail" : ": MetaData", "member" : "scala.xml.PrefixedAttribute.next1", "link" : "scala\/xml\/PrefixedAttribute.html#next1:scala.xml.MetaData", "kind" : "val"}, {"label" : "value", "tail" : ": collection.Seq[Node]", "member" : "scala.xml.PrefixedAttribute.value", "link" : "scala\/xml\/PrefixedAttribute.html#value:scala.collection.Seq[scala.xml.Node]", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "scala.xml.PrefixedAttribute.key", "link" : "scala\/xml\/PrefixedAttribute.html#key:String", "kind" : "val"}, {"label" : "pre", "tail" : ": String", "member" : "scala.xml.PrefixedAttribute.pre", "link" : "scala\/xml\/PrefixedAttribute.html#pre:String", "kind" : "val"}, {"label" : "toString1", "tail" : "(sb: StringBuilder): Unit", "member" : "scala.xml.Attribute.toString1", "link" : "scala\/xml\/PrefixedAttribute.html#toString1(sb:StringBuilder):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.xml.Attribute.size", "link" : "scala\/xml\/PrefixedAttribute.html#size:Int", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[MetaData]", "member" : "scala.xml.Attribute.iterator", "link" : "scala\/xml\/PrefixedAttribute.html#iterator:Iterator[scala.xml.MetaData]", "kind" : "def"}, {"label" : "wellformed", "tail" : "(scope: NamespaceBinding): Boolean", "member" : "scala.xml.Attribute.wellformed", "link" : "scala\/xml\/PrefixedAttribute.html#wellformed(scope:scala.xml.NamespaceBinding):Boolean", "kind" : "def"}, {"label" : "isPrefixed", "tail" : "(): Boolean", "member" : "scala.xml.Attribute.isPrefixed", "link" : "scala\/xml\/PrefixedAttribute.html#isPrefixed:Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(namespace: String, scope: NamespaceBinding, key: String): MetaData", "member" : "scala.xml.Attribute.remove", "link" : "scala\/xml\/PrefixedAttribute.html#remove(namespace:String,scope:scala.xml.NamespaceBinding,key:String):scala.xml.MetaData", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): MetaData", "member" : "scala.xml.Attribute.remove", "link" : "scala\/xml\/PrefixedAttribute.html#remove(key:String):scala.xml.MetaData", "kind" : "def"}, {"label" : "remove", "tail" : "(namespace: String, owner: Node, key: String): MetaData", "member" : "scala.xml.MetaData.remove", "link" : "scala\/xml\/PrefixedAttribute.html#remove(namespace:String,owner:scala.xml.Node,key:String):scala.xml.MetaData", "kind" : "final def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.MetaData.buildString", "link" : "scala\/xml\/PrefixedAttribute.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.MetaData.toString", "link" : "scala\/xml\/PrefixedAttribute.html#toString():String", "kind" : "def"}, {"label" : "toString1", "tail" : "(): String", "member" : "scala.xml.MetaData.toString1", "link" : "scala\/xml\/PrefixedAttribute.html#toString1():String", "kind" : "def"}, {"label" : "get", "tail" : "(uri: String, scope: NamespaceBinding, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/PrefixedAttribute.html#get(uri:String,scope:scala.xml.NamespaceBinding,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "get", "tail" : "(uri: String, owner: Node, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/PrefixedAttribute.html#get(uri:String,owner:scala.xml.Node,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "get", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/PrefixedAttribute.html#get(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "asAttrMap", "tail" : "(): Map[String, String]", "member" : "scala.xml.MetaData.asAttrMap", "link" : "scala\/xml\/PrefixedAttribute.html#asAttrMap:Map[String,String]", "kind" : "def"}, {"label" : "prefixedKey", "tail" : "(): String", "member" : "scala.xml.MetaData.prefixedKey", "link" : "scala\/xml\/PrefixedAttribute.html#prefixedKey:String", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (MetaData) => Boolean): MetaData", "member" : "scala.xml.MetaData.filter", "link" : "scala\/xml\/PrefixedAttribute.html#filter(f:scala.xml.MetaData=>Boolean):scala.xml.MetaData", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.MetaData.basisForHashCode", "link" : "scala\/xml\/PrefixedAttribute.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.MetaData.strict_==", "link" : "scala\/xml\/PrefixedAttribute.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.MetaData.canEqual", "link" : "scala\/xml\/PrefixedAttribute.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(i: Int): Int", "member" : "scala.xml.MetaData.length", "link" : "scala\/xml\/PrefixedAttribute.html#length(i:Int):Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.MetaData.length", "link" : "scala\/xml\/PrefixedAttribute.html#length:Int", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scala.xml.MetaData.hasNext", "link" : "scala\/xml\/PrefixedAttribute.html#hasNext:Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(namespace_uri: String, owner: Node, key: String): collection.Seq[Node]", "member" : "scala.xml.MetaData.apply", "link" : "scala\/xml\/PrefixedAttribute.html#apply(namespace_uri:String,owner:scala.xml.Node,key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "final def"}, {"label" : "append", "tail" : "(updates: MetaData, scope: NamespaceBinding): MetaData", "member" : "scala.xml.MetaData.append", "link" : "scala\/xml\/PrefixedAttribute.html#append(updates:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):scala.xml.MetaData", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/PrefixedAttribute.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/PrefixedAttribute.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/PrefixedAttribute.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/PrefixedAttribute.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/PrefixedAttribute.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[MetaData, B, PrefixedAttribute.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/PrefixedAttribute.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Iterable.stringPrefix", "link" : "scala\/xml\/PrefixedAttribute.html#stringPrefix:String", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/PrefixedAttribute.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): PrefixedAttribute.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/PrefixedAttribute.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[collection.Iterable]", "member" : "scala.collection.Iterable.iterableFactory", "link" : "scala\/xml\/PrefixedAttribute.html#iterableFactory:scala.collection.IterableFactory[Iterable]", "kind" : "def"}, {"label" : "coll", "tail" : "(): PrefixedAttribute.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/PrefixedAttribute.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): PrefixedAttribute.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/PrefixedAttribute.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "scala\/xml\/PrefixedAttribute.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[MetaData, collection.Iterable[MetaData]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "scala\/xml\/PrefixedAttribute.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[MetaData]): collection.Iterable[MetaData]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "scala\/xml\/PrefixedAttribute.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "scala\/xml\/PrefixedAttribute.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (MetaData) => U): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.tapEach", "link" : "scala\/xml\/PrefixedAttribute.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/PrefixedAttribute.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/PrefixedAttribute.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (MetaData) => (A1, A2, A3)): (collection.Iterable[A1], collection.Iterable[A2], collection.Iterable[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "scala\/xml\/PrefixedAttribute.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (MetaData) => (A1, A2)): (collection.Iterable[A1], collection.Iterable[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "scala\/xml\/PrefixedAttribute.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/PrefixedAttribute.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.Iterable[(MetaData, Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "scala\/xml\/PrefixedAttribute.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.Iterable[(MetaData, B)]", "member" : "scala.collection.IterableOps.zip", "link" : "scala\/xml\/PrefixedAttribute.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/PrefixedAttribute.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "scala\/xml\/PrefixedAttribute.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (MetaData) => Either[A1, A2]): (collection.Iterable[A1], collection.Iterable[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "scala\/xml\/PrefixedAttribute.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[MetaData, B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.collect", "link" : "scala\/xml\/PrefixedAttribute.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (MetaData) => collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "scala\/xml\/PrefixedAttribute.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (MetaData) => collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "scala\/xml\/PrefixedAttribute.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (MetaData) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.map", "link" : "scala\/xml\/PrefixedAttribute.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (MetaData, B) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/PrefixedAttribute.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, MetaData) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "scala\/xml\/PrefixedAttribute.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/PrefixedAttribute.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (MetaData) => K)(f: (MetaData) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/PrefixedAttribute.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (MetaData) => K)(f: (MetaData) => B): Map[K, collection.Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/PrefixedAttribute.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (MetaData) => K): Map[K, collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/PrefixedAttribute.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/PrefixedAttribute.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/PrefixedAttribute.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/PrefixedAttribute.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/PrefixedAttribute.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/PrefixedAttribute.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/PrefixedAttribute.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/PrefixedAttribute.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.dropRight", "link" : "scala\/xml\/PrefixedAttribute.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/PrefixedAttribute.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (MetaData) => Boolean): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.span", "link" : "scala\/xml\/PrefixedAttribute.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/PrefixedAttribute.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.takeRight", "link" : "scala\/xml\/PrefixedAttribute.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/PrefixedAttribute.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/PrefixedAttribute.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (MetaData) => Boolean): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.partition", "link" : "scala\/xml\/PrefixedAttribute.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (MetaData) => Boolean): WithFilter[MetaData, collection.Iterable]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/PrefixedAttribute.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.filterNot", "link" : "scala\/xml\/PrefixedAttribute.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (MetaData) => collection.Iterable[B]): collection.Iterable[collection.Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/PrefixedAttribute.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[MetaData]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/PrefixedAttribute.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "scala\/xml\/PrefixedAttribute.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/PrefixedAttribute.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "scala\/xml\/PrefixedAttribute.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "view", "tail" : "(): View[MetaData]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/PrefixedAttribute.html#view:scala.collection.View[A]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[MetaData]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/PrefixedAttribute.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): MetaData", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/PrefixedAttribute.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[MetaData]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/PrefixedAttribute.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): MetaData", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/PrefixedAttribute.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[collection.Iterable]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/PrefixedAttribute.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/PrefixedAttribute.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/PrefixedAttribute.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[MetaData]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/PrefixedAttribute.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/PrefixedAttribute.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/PrefixedAttribute.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/PrefixedAttribute.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[MetaData]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/PrefixedAttribute.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[MetaData]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/PrefixedAttribute.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): collection.immutable.Seq[MetaData]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "scala\/xml\/PrefixedAttribute.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/PrefixedAttribute.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[MetaData, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/PrefixedAttribute.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[MetaData]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/PrefixedAttribute.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[MetaData]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/PrefixedAttribute.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[MetaData]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/PrefixedAttribute.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[MetaData, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/PrefixedAttribute.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/PrefixedAttribute.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/PrefixedAttribute.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/PrefixedAttribute.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/PrefixedAttribute.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/PrefixedAttribute.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/PrefixedAttribute.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (MetaData, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/PrefixedAttribute.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, MetaData) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/PrefixedAttribute.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[MetaData, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/PrefixedAttribute.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/PrefixedAttribute.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/PrefixedAttribute.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/PrefixedAttribute.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/PrefixedAttribute.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/PrefixedAttribute.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/PrefixedAttribute.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/PrefixedAttribute.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/PrefixedAttribute.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/PrefixedAttribute.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/PrefixedAttribute.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/PrefixedAttribute.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/PrefixedAttribute.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/PrefixedAttribute.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/PrefixedAttribute.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/PrefixedAttribute.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isEmpty", "link" : "scala\/xml\/PrefixedAttribute.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (MetaData, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/PrefixedAttribute.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, MetaData) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/PrefixedAttribute.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/PrefixedAttribute.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/PrefixedAttribute.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/PrefixedAttribute.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/PrefixedAttribute.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/PrefixedAttribute.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/PrefixedAttribute.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/PrefixedAttribute.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/PrefixedAttribute.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/PrefixedAttribute.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (MetaData) => Boolean): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/PrefixedAttribute.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (MetaData) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/PrefixedAttribute.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (MetaData) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/PrefixedAttribute.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (MetaData) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/PrefixedAttribute.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (MetaData) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/PrefixedAttribute.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/PrefixedAttribute.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/PrefixedAttribute.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[MetaData, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/PrefixedAttribute.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/PrefixedAttribute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/PrefixedAttribute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/PrefixedAttribute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/PrefixedAttribute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/PrefixedAttribute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/PrefixedAttribute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/PrefixedAttribute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PrefixedAttribute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PrefixedAttribute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PrefixedAttribute.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/PrefixedAttribute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/PrefixedAttribute.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/PrefixedAttribute.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/PrefixedAttribute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/PrefixedAttribute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/PrefixedAttribute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(x: PrefixedAttribute): Some[(String, String, collection.Seq[Node], MetaData)]", "member" : "scala.xml.PrefixedAttribute.unapply", "link" : "scala\/xml\/PrefixedAttribute$.html#unapply(x:scala.xml.PrefixedAttribute):Some[(String,String,scala.collection.Seq[scala.xml.Node],scala.xml.MetaData)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/PrefixedAttribute$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/PrefixedAttribute$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/PrefixedAttribute$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/PrefixedAttribute$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/PrefixedAttribute$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/PrefixedAttribute$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/PrefixedAttribute$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PrefixedAttribute$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PrefixedAttribute$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PrefixedAttribute$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/PrefixedAttribute$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/PrefixedAttribute$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/PrefixedAttribute$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/PrefixedAttribute$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/PrefixedAttribute$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/PrefixedAttribute$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/PrefixedAttribute$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/PrefixedAttribute$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/PrefixedAttribute$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/PrefixedAttribute.html", "kind" : "class"}, {"name" : "scala.xml.PrettyPrinter", "shortDescription" : "Class for pretty printing.", "members_class" : [{"label" : "formatNodes", "tail" : "(nodes: collection.Seq[Node], pscope: NamespaceBinding, sb: StringBuilder): Unit", "member" : "scala.xml.PrettyPrinter.formatNodes", "link" : "scala\/xml\/PrettyPrinter.html#formatNodes(nodes:scala.collection.Seq[scala.xml.Node],pscope:scala.xml.NamespaceBinding,sb:StringBuilder):Unit", "kind" : "def"}, {"label" : "formatNodes", "tail" : "(nodes: collection.Seq[Node], pscope: NamespaceBinding): String", "member" : "scala.xml.PrettyPrinter.formatNodes", "link" : "scala\/xml\/PrettyPrinter.html#formatNodes(nodes:scala.collection.Seq[scala.xml.Node],pscope:scala.xml.NamespaceBinding):String", "kind" : "def"}, {"label" : "format", "tail" : "(n: Node, pscope: NamespaceBinding): String", "member" : "scala.xml.PrettyPrinter.format", "link" : "scala\/xml\/PrettyPrinter.html#format(n:scala.xml.Node,pscope:scala.xml.NamespaceBinding):String", "kind" : "def"}, {"label" : "format", "tail" : "(n: Node, pscope: NamespaceBinding, sb: StringBuilder): Unit", "member" : "scala.xml.PrettyPrinter.format", "link" : "scala\/xml\/PrettyPrinter.html#format(n:scala.xml.Node,pscope:scala.xml.NamespaceBinding,sb:StringBuilder):Unit", "kind" : "def"}, {"label" : "format", "tail" : "(n: Node, sb: StringBuilder): Unit", "member" : "scala.xml.PrettyPrinter.format", "link" : "scala\/xml\/PrettyPrinter.html#format(n:scala.xml.Node,sb:StringBuilder):Unit", "kind" : "def"}, {"label" : "traverse", "tail" : "(it: Iterator[Node], scope: NamespaceBinding, ind: Int): Unit", "member" : "scala.xml.PrettyPrinter.traverse", "link" : "scala\/xml\/PrettyPrinter.html#traverse(it:Iterator[scala.xml.Node],scope:scala.xml.NamespaceBinding,ind:Int):Unit", "kind" : "def"}, {"label" : "traverse", "tail" : "(node: Node, pscope: NamespaceBinding, ind: Int): Unit", "member" : "scala.xml.PrettyPrinter.traverse", "link" : "scala\/xml\/PrettyPrinter.html#traverse(node:scala.xml.Node,pscope:scala.xml.NamespaceBinding,ind:Int):Unit", "kind" : "def"}, {"label" : "fits", "tail" : "(test: String): Boolean", "member" : "scala.xml.PrettyPrinter.fits", "link" : "scala\/xml\/PrettyPrinter.html#fits(test:String):Boolean", "kind" : "def"}, {"label" : "childrenAreLeaves", "tail" : "(n: Node): Boolean", "member" : "scala.xml.PrettyPrinter.childrenAreLeaves", "link" : "scala\/xml\/PrettyPrinter.html#childrenAreLeaves(n:scala.xml.Node):Boolean", "kind" : "def"}, {"label" : "endTag", "tail" : "(n: Node): String", "member" : "scala.xml.PrettyPrinter.endTag", "link" : "scala\/xml\/PrettyPrinter.html#endTag(n:scala.xml.Node):String", "kind" : "def"}, {"label" : "startTag", "tail" : "(n: Node, pscope: NamespaceBinding): (String, Int)", "member" : "scala.xml.PrettyPrinter.startTag", "link" : "scala\/xml\/PrettyPrinter.html#startTag(n:scala.xml.Node,pscope:scala.xml.NamespaceBinding):(String,Int)", "kind" : "def"}, {"label" : "leafTag", "tail" : "(n: Node): String", "member" : "scala.xml.PrettyPrinter.leafTag", "link" : "scala\/xml\/PrettyPrinter.html#leafTag(n:scala.xml.Node):String", "kind" : "def"}, {"label" : "makeBreak", "tail" : "(): Unit", "member" : "scala.xml.PrettyPrinter.makeBreak", "link" : "scala\/xml\/PrettyPrinter.html#makeBreak():Unit", "kind" : "def"}, {"label" : "makePara", "tail" : "(ind: Int, s: String): Unit", "member" : "scala.xml.PrettyPrinter.makePara", "link" : "scala\/xml\/PrettyPrinter.html#makePara(ind:Int,s:String):Unit", "kind" : "def"}, {"label" : "makeBox", "tail" : "(ind: Int, s: String): Unit", "member" : "scala.xml.PrettyPrinter.makeBox", "link" : "scala\/xml\/PrettyPrinter.html#makeBox(ind:Int,s:String):Unit", "kind" : "def"}, {"label" : "cut", "tail" : "(s: String, ind: Int): List[Item]", "member" : "scala.xml.PrettyPrinter.cut", "link" : "scala\/xml\/PrettyPrinter.html#cut(s:String,ind:Int):List[PrettyPrinter.this.Item]", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "scala.xml.PrettyPrinter.reset", "link" : "scala\/xml\/PrettyPrinter.html#reset():Unit", "kind" : "def"}, {"label" : "cur", "tail" : ": Int", "member" : "scala.xml.PrettyPrinter.cur", "link" : "scala\/xml\/PrettyPrinter.html#cur:Int", "kind" : "var"}, {"label" : "items", "tail" : ": List[Item]", "member" : "scala.xml.PrettyPrinter.items", "link" : "scala\/xml\/PrettyPrinter.html#items:List[PrettyPrinter.this.Item]", "kind" : "var"}, {"label" : "Para", "tail" : "", "member" : "scala.xml.PrettyPrinter.Para", "link" : "scala\/xml\/PrettyPrinter.html#ParaextendsPrettyPrinter.this.ItemwithProductwithSerializable", "kind" : "case class"}, {"label" : "Box", "tail" : "", "member" : "scala.xml.PrettyPrinter.Box", "link" : "scala\/xml\/PrettyPrinter.html#BoxextendsPrettyPrinter.this.ItemwithProductwithSerializable", "kind" : "case class"}, {"label" : "Break", "tail" : "", "member" : "scala.xml.PrettyPrinter.Break", "link" : "scala\/xml\/PrettyPrinter.html#Break", "kind" : "object"}, {"label" : "Item", "tail" : "", "member" : "scala.xml.PrettyPrinter.Item", "link" : "scala\/xml\/PrettyPrinter.html#ItemextendsAnyRef", "kind" : "class"}, {"label" : "BrokenException", "tail" : "", "member" : "scala.xml.PrettyPrinter.BrokenException", "link" : "scala\/xml\/PrettyPrinter.html#BrokenExceptionextendsException", "kind" : "class"}, {"label" : "minimizeMode", "tail" : ": MinimizeMode.Value", "member" : "scala.xml.PrettyPrinter.minimizeMode", "link" : "scala\/xml\/PrettyPrinter.html#minimizeMode:scala.xml.MinimizeMode.Value", "kind" : "val"}, {"member" : "scala.xml.PrettyPrinter#<init>", "error" : "unsupported entity"}, {"member" : "scala.xml.PrettyPrinter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/PrettyPrinter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/PrettyPrinter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/PrettyPrinter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/PrettyPrinter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/PrettyPrinter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/PrettyPrinter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/PrettyPrinter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PrettyPrinter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PrettyPrinter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/PrettyPrinter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/PrettyPrinter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/PrettyPrinter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/PrettyPrinter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/PrettyPrinter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/PrettyPrinter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/PrettyPrinter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/PrettyPrinter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/PrettyPrinter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/PrettyPrinter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/PrettyPrinter.html", "kind" : "class"}, {"name" : "scala.xml.ProcInstr", "shortDescription" : "an XML node for processing instructions (PI)", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): collection.mutable.StringBuilder", "member" : "scala.xml.ProcInstr.buildString", "link" : "scala\/xml\/ProcInstr.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "text", "tail" : "(): String", "member" : "scala.xml.ProcInstr.text", "link" : "scala\/xml\/ProcInstr.html#text:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "scala.xml.ProcInstr.label", "link" : "scala\/xml\/ProcInstr.html#label:String", "kind" : "final def"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.ProcInstr.doTransform", "link" : "scala\/xml\/ProcInstr.html#doTransform:Boolean", "kind" : "final def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.ProcInstr.doCollectNamespaces", "link" : "scala\/xml\/ProcInstr.html#doCollectNamespaces:Boolean", "kind" : "final def"}, {"member" : "scala.xml.ProcInstr#<init>", "error" : "unsupported entity"}, {"label" : "proctext", "tail" : ": String", "member" : "scala.xml.ProcInstr.proctext", "link" : "scala\/xml\/ProcInstr.html#proctext:String", "kind" : "val"}, {"label" : "target", "tail" : ": String", "member" : "scala.xml.ProcInstr.target", "link" : "scala\/xml\/ProcInstr.html#target:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/ProcInstr.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "child", "tail" : "(): collection.immutable.Nil", "member" : "scala.xml.SpecialNode.child", "link" : "scala\/xml\/ProcInstr.html#child:scala.collection.immutable.Nil.type", "kind" : "final def"}, {"label" : "namespace", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.namespace", "link" : "scala\/xml\/ProcInstr.html#namespace:Null", "kind" : "final def"}, {"label" : "attributes", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.attributes", "link" : "scala\/xml\/ProcInstr.html#attributes:scala.xml.Null.type", "kind" : "final def"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/ProcInstr.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/ProcInstr.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/ProcInstr.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/ProcInstr.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.theSeq", "link" : "scala\/xml\/ProcInstr.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Node.strict_==", "link" : "scala\/xml\/ProcInstr.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Node.basisForHashCode", "link" : "scala\/xml\/ProcInstr.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Node.canEqual", "link" : "scala\/xml\/ProcInstr.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/ProcInstr.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/ProcInstr.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/ProcInstr.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/ProcInstr.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/ProcInstr.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/ProcInstr.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "scope", "tail" : "(): NamespaceBinding", "member" : "scala.xml.Node.scope", "link" : "scala\/xml\/ProcInstr.html#scope:scala.xml.NamespaceBinding", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/ProcInstr.html#isAtom:Boolean", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "scala.xml.Node.prefix", "link" : "scala\/xml\/ProcInstr.html#prefix:String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/ProcInstr.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/ProcInstr.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/ProcInstr.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/ProcInstr.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/ProcInstr.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/ProcInstr.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/ProcInstr.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/ProcInstr.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/ProcInstr.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/ProcInstr.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/ProcInstr.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/ProcInstr.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/ProcInstr.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/ProcInstr.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/ProcInstr.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/ProcInstr.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/ProcInstr.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/ProcInstr.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/ProcInstr.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/ProcInstr.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/ProcInstr.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/ProcInstr.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/ProcInstr.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/ProcInstr.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/ProcInstr.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/ProcInstr.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/ProcInstr.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/ProcInstr.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/ProcInstr.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/ProcInstr.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/ProcInstr.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/ProcInstr.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/ProcInstr.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/ProcInstr.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/ProcInstr.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/ProcInstr.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/ProcInstr.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/ProcInstr.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/ProcInstr.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/ProcInstr.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/ProcInstr.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/ProcInstr.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/ProcInstr.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/ProcInstr.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/ProcInstr.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/ProcInstr.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/ProcInstr.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/ProcInstr.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/ProcInstr.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/ProcInstr.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/ProcInstr.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/ProcInstr.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/ProcInstr.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/ProcInstr.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/ProcInstr.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/ProcInstr.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/ProcInstr.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/ProcInstr.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/ProcInstr.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/ProcInstr.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): ProcInstr.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/ProcInstr.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/ProcInstr.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/ProcInstr.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/ProcInstr.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/ProcInstr.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/ProcInstr.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/ProcInstr.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/ProcInstr.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/ProcInstr.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/ProcInstr.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/ProcInstr.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/ProcInstr.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/ProcInstr.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/ProcInstr.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/ProcInstr.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/ProcInstr.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/ProcInstr.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/ProcInstr.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/ProcInstr.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/ProcInstr.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/ProcInstr.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/ProcInstr.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/ProcInstr.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/ProcInstr.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/ProcInstr.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/ProcInstr.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/ProcInstr.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/ProcInstr.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/ProcInstr.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/ProcInstr.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/ProcInstr.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/ProcInstr.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/ProcInstr.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/ProcInstr.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/ProcInstr.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/ProcInstr.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/ProcInstr.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/ProcInstr.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/ProcInstr.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/ProcInstr.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/ProcInstr.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/ProcInstr.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/ProcInstr.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/ProcInstr.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/ProcInstr.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/ProcInstr.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/ProcInstr.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/ProcInstr.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/ProcInstr.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/ProcInstr.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/ProcInstr.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/ProcInstr.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/ProcInstr.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/ProcInstr.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/ProcInstr.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/ProcInstr.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/ProcInstr.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/ProcInstr.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/ProcInstr.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/ProcInstr.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, ProcInstr.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/ProcInstr.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/ProcInstr.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): ProcInstr.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/ProcInstr.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): ProcInstr.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/ProcInstr.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): ProcInstr.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/ProcInstr.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/ProcInstr.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/ProcInstr.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/ProcInstr.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/ProcInstr.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/ProcInstr.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/ProcInstr.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/ProcInstr.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/ProcInstr.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/ProcInstr.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/ProcInstr.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/ProcInstr.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/ProcInstr.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/ProcInstr.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/ProcInstr.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/ProcInstr.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/ProcInstr.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/ProcInstr.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/ProcInstr.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/ProcInstr.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/ProcInstr.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/ProcInstr.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/ProcInstr.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/ProcInstr.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/ProcInstr.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/ProcInstr.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/ProcInstr.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/ProcInstr.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/ProcInstr.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/ProcInstr.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/ProcInstr.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/ProcInstr.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/ProcInstr.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/ProcInstr.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/ProcInstr.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/ProcInstr.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/ProcInstr.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/ProcInstr.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/ProcInstr.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/ProcInstr.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/ProcInstr.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/ProcInstr.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/ProcInstr.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/ProcInstr.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/ProcInstr.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/ProcInstr.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/ProcInstr.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/ProcInstr.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/ProcInstr.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/ProcInstr.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/ProcInstr.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/ProcInstr.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/ProcInstr.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/ProcInstr.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/ProcInstr.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/ProcInstr.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/ProcInstr.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/ProcInstr.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/ProcInstr.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/ProcInstr.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/ProcInstr.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/ProcInstr.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/ProcInstr.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/ProcInstr.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/ProcInstr.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/ProcInstr.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/ProcInstr.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/ProcInstr.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/ProcInstr.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/ProcInstr.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/ProcInstr.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/ProcInstr.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/ProcInstr.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/ProcInstr.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/ProcInstr.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/ProcInstr.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/ProcInstr.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/ProcInstr.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/ProcInstr.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/ProcInstr.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/ProcInstr.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/ProcInstr.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/ProcInstr.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/ProcInstr.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/ProcInstr.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/ProcInstr.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/ProcInstr.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/ProcInstr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/ProcInstr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/ProcInstr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/ProcInstr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/ProcInstr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/ProcInstr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/ProcInstr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/ProcInstr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/ProcInstr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/ProcInstr.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/ProcInstr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/ProcInstr.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/ProcInstr.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/ProcInstr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/ProcInstr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/ProcInstr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/ProcInstr.html", "kind" : "case class"}, {"name" : "scala.xml.Properties", "shortDescription" : "", "object" : "scala\/xml\/Properties$.html", "members_object" : [{"label" : "pickJarBasedOn", "tail" : "(): Class[XMLEventReader]", "member" : "scala.xml.Properties.pickJarBasedOn", "link" : "scala\/xml\/Properties$.html#pickJarBasedOn:Class[scala.xml.pull.XMLEventReader]", "kind" : "def"}, {"label" : "propCategory", "tail" : "(): String", "member" : "scala.xml.Properties.propCategory", "link" : "scala\/xml\/Properties$.html#propCategory:String", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.util.PropertiesTrait.main", "link" : "scala\/xml\/Properties$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "isJavaAtLeast", "tail" : "(version: Int): Boolean", "member" : "scala.util.PropertiesTrait.isJavaAtLeast", "link" : "scala\/xml\/Properties$.html#isJavaAtLeast(version:Int):Boolean", "kind" : "def"}, {"label" : "isJavaAtLeast", "tail" : "(version: String): Boolean", "member" : "scala.util.PropertiesTrait.isJavaAtLeast", "link" : "scala\/xml\/Properties$.html#isJavaAtLeast(version:String):Boolean", "kind" : "def"}, {"label" : "scalacCmd", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.scalacCmd", "link" : "scala\/xml\/Properties$.html#scalacCmd:String", "kind" : "def"}, {"label" : "scalaCmd", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.scalaCmd", "link" : "scala\/xml\/Properties$.html#scalaCmd:String", "kind" : "def"}, {"label" : "versionMsg", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.versionMsg", "link" : "scala\/xml\/Properties$.html#versionMsg:String", "kind" : "def"}, {"label" : "jdkHome", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.jdkHome", "link" : "scala\/xml\/Properties$.html#jdkHome:String", "kind" : "def"}, {"label" : "isLinux", "tail" : "(): Boolean", "member" : "scala.util.PropertiesTrait.isLinux", "link" : "scala\/xml\/Properties$.html#isLinux:Boolean", "kind" : "def"}, {"label" : "isMac", "tail" : "(): Boolean", "member" : "scala.util.PropertiesTrait.isMac", "link" : "scala\/xml\/Properties$.html#isMac:Boolean", "kind" : "def"}, {"label" : "isWin", "tail" : "(): Boolean", "member" : "scala.util.PropertiesTrait.isWin", "link" : "scala\/xml\/Properties$.html#isWin:Boolean", "kind" : "def"}, {"label" : "userName", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.userName", "link" : "scala\/xml\/Properties$.html#userName:String", "kind" : "def"}, {"label" : "userHome", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.userHome", "link" : "scala\/xml\/Properties$.html#userHome:String", "kind" : "def"}, {"label" : "userDir", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.userDir", "link" : "scala\/xml\/Properties$.html#userDir:String", "kind" : "def"}, {"label" : "tmpDir", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.tmpDir", "link" : "scala\/xml\/Properties$.html#tmpDir:String", "kind" : "def"}, {"label" : "scalaHome", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.scalaHome", "link" : "scala\/xml\/Properties$.html#scalaHome:String", "kind" : "def"}, {"label" : "osName", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.osName", "link" : "scala\/xml\/Properties$.html#osName:String", "kind" : "def"}, {"label" : "javaSpecName", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaSpecName", "link" : "scala\/xml\/Properties$.html#javaSpecName:String", "kind" : "def"}, {"label" : "javaSpecVendor", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaSpecVendor", "link" : "scala\/xml\/Properties$.html#javaSpecVendor:String", "kind" : "def"}, {"label" : "javaSpecVersion", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaSpecVersion", "link" : "scala\/xml\/Properties$.html#javaSpecVersion:String", "kind" : "def"}, {"label" : "javaVmVersion", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVmVersion", "link" : "scala\/xml\/Properties$.html#javaVmVersion:String", "kind" : "def"}, {"label" : "javaVmVendor", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVmVendor", "link" : "scala\/xml\/Properties$.html#javaVmVendor:String", "kind" : "def"}, {"label" : "javaVmName", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVmName", "link" : "scala\/xml\/Properties$.html#javaVmName:String", "kind" : "def"}, {"label" : "javaVmInfo", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVmInfo", "link" : "scala\/xml\/Properties$.html#javaVmInfo:String", "kind" : "def"}, {"label" : "javaVersion", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVersion", "link" : "scala\/xml\/Properties$.html#javaVersion:String", "kind" : "def"}, {"label" : "javaVendor", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVendor", "link" : "scala\/xml\/Properties$.html#javaVendor:String", "kind" : "def"}, {"label" : "javaHome", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaHome", "link" : "scala\/xml\/Properties$.html#javaHome:String", "kind" : "def"}, {"label" : "javaClassPath", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaClassPath", "link" : "scala\/xml\/Properties$.html#javaClassPath:String", "kind" : "def"}, {"label" : "lineSeparator", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.lineSeparator", "link" : "scala\/xml\/Properties$.html#lineSeparator:String", "kind" : "def"}, {"label" : "encodingString", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.encodingString", "link" : "scala\/xml\/Properties$.html#encodingString:String", "kind" : "def"}, {"label" : "sourceReader", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.sourceReader", "link" : "scala\/xml\/Properties$.html#sourceReader:String", "kind" : "def"}, {"label" : "sourceEncoding", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.sourceEncoding", "link" : "scala\/xml\/Properties$.html#sourceEncoding:String", "kind" : "def"}, {"label" : "copyrightString", "tail" : ": String", "member" : "scala.util.PropertiesTrait.copyrightString", "link" : "scala\/xml\/Properties$.html#copyrightString:String", "kind" : "val"}, {"label" : "versionString", "tail" : ": String", "member" : "scala.util.PropertiesTrait.versionString", "link" : "scala\/xml\/Properties$.html#versionString:String", "kind" : "val"}, {"label" : "versionNumberString", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.versionNumberString", "link" : "scala\/xml\/Properties$.html#versionNumberString:String", "kind" : "def"}, {"label" : "developmentVersion", "tail" : ": Option[String]", "member" : "scala.util.PropertiesTrait.developmentVersion", "link" : "scala\/xml\/Properties$.html#developmentVersion:Option[String]", "kind" : "val"}, {"label" : "releaseVersion", "tail" : ": Option[String]", "member" : "scala.util.PropertiesTrait.releaseVersion", "link" : "scala\/xml\/Properties$.html#releaseVersion:Option[String]", "kind" : "val"}, {"label" : "scalaPropOrNone", "tail" : "(name: String): Option[String]", "member" : "scala.util.PropertiesTrait.scalaPropOrNone", "link" : "scala\/xml\/Properties$.html#scalaPropOrNone(name:String):Option[String]", "kind" : "def"}, {"label" : "scalaPropOrEmpty", "tail" : "(name: String): String", "member" : "scala.util.PropertiesTrait.scalaPropOrEmpty", "link" : "scala\/xml\/Properties$.html#scalaPropOrEmpty(name:String):String", "kind" : "def"}, {"label" : "scalaPropOrElse", "tail" : "(name: String, alt: => String): String", "member" : "scala.util.PropertiesTrait.scalaPropOrElse", "link" : "scala\/xml\/Properties$.html#scalaPropOrElse(name:String,alt:=>String):String", "kind" : "def"}, {"label" : "envOrSome", "tail" : "(name: String, alt: => Option[String]): Option[String]", "member" : "scala.util.PropertiesTrait.envOrSome", "link" : "scala\/xml\/Properties$.html#envOrSome(name:String,alt:=>Option[String]):Option[String]", "kind" : "def"}, {"label" : "envOrNone", "tail" : "(name: String): Option[String]", "member" : "scala.util.PropertiesTrait.envOrNone", "link" : "scala\/xml\/Properties$.html#envOrNone(name:String):Option[String]", "kind" : "def"}, {"label" : "envOrElse", "tail" : "(name: String, alt: => String): String", "member" : "scala.util.PropertiesTrait.envOrElse", "link" : "scala\/xml\/Properties$.html#envOrElse(name:String,alt:=>String):String", "kind" : "def"}, {"label" : "clearProp", "tail" : "(name: String): String", "member" : "scala.util.PropertiesTrait.clearProp", "link" : "scala\/xml\/Properties$.html#clearProp(name:String):String", "kind" : "def"}, {"label" : "setProp", "tail" : "(name: String, value: String): String", "member" : "scala.util.PropertiesTrait.setProp", "link" : "scala\/xml\/Properties$.html#setProp(name:String,value:String):String", "kind" : "def"}, {"label" : "propOrFalse", "tail" : "(name: String): Boolean", "member" : "scala.util.PropertiesTrait.propOrFalse", "link" : "scala\/xml\/Properties$.html#propOrFalse(name:String):Boolean", "kind" : "def"}, {"label" : "propOrNone", "tail" : "(name: String): Option[String]", "member" : "scala.util.PropertiesTrait.propOrNone", "link" : "scala\/xml\/Properties$.html#propOrNone(name:String):Option[String]", "kind" : "def"}, {"label" : "propOrNull", "tail" : "(name: String): String", "member" : "scala.util.PropertiesTrait.propOrNull", "link" : "scala\/xml\/Properties$.html#propOrNull(name:String):String", "kind" : "def"}, {"label" : "propOrEmpty", "tail" : "(name: String): String", "member" : "scala.util.PropertiesTrait.propOrEmpty", "link" : "scala\/xml\/Properties$.html#propOrEmpty(name:String):String", "kind" : "def"}, {"label" : "propOrElse", "tail" : "(name: String, alt: => String): String", "member" : "scala.util.PropertiesTrait.propOrElse", "link" : "scala\/xml\/Properties$.html#propOrElse(name:String,alt:=>String):String", "kind" : "def"}, {"label" : "propIsSetTo", "tail" : "(name: String, value: String): Boolean", "member" : "scala.util.PropertiesTrait.propIsSetTo", "link" : "scala\/xml\/Properties$.html#propIsSetTo(name:String,value:String):Boolean", "kind" : "def"}, {"label" : "propIsSet", "tail" : "(name: String): Boolean", "member" : "scala.util.PropertiesTrait.propIsSet", "link" : "scala\/xml\/Properties$.html#propIsSet(name:String):Boolean", "kind" : "def"}, {"label" : "scalaProps", "tail" : ": Properties", "member" : "scala.util.PropertiesTrait.scalaProps", "link" : "scala\/xml\/Properties$.html#scalaProps:java.util.Properties", "kind" : "lazy val"}, {"label" : "propFilename", "tail" : ": String", "member" : "scala.util.PropertiesTrait.propFilename", "link" : "scala\/xml\/Properties$.html#propFilename:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Properties$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Properties$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Properties$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Properties$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Properties$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Properties$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Properties$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Properties$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Properties$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Properties$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Properties$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Properties$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Properties$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Properties$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/Properties$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/Properties$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Properties$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Properties$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Properties$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.QNode", "shortDescription" : "This object provides an extractor method to match a qualified node with its namespace URI", "object" : "scala\/xml\/QNode$.html", "members_object" : [{"label" : "unapplySeq", "tail" : "(n: Node): Some[(String, String, MetaData, collection.immutable.Seq[Node])]", "member" : "scala.xml.QNode.unapplySeq", "link" : "scala\/xml\/QNode$.html#unapplySeq(n:scala.xml.Node):Some[(String,String,scala.xml.MetaData,Seq[scala.xml.Node])]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/QNode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/QNode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/QNode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/QNode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/QNode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/QNode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/QNode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/QNode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/QNode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/QNode$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/QNode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/QNode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/QNode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/QNode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/QNode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/QNode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/QNode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/QNode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/QNode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.Source", "shortDescription" : "", "object" : "scala\/xml\/Source$.html", "members_object" : [{"label" : "fromString", "tail" : "(string: String): org.xml.sax.InputSource", "member" : "scala.xml.Source.fromString", "link" : "scala\/xml\/Source$.html#fromString(string:String):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "fromSysId", "tail" : "(sysID: String): org.xml.sax.InputSource", "member" : "scala.xml.Source.fromSysId", "link" : "scala\/xml\/Source$.html#fromSysId(sysID:String):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "fromReader", "tail" : "(reader: Reader): org.xml.sax.InputSource", "member" : "scala.xml.Source.fromReader", "link" : "scala\/xml\/Source$.html#fromReader(reader:java.io.Reader):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "fromInputStream", "tail" : "(is: InputStream): org.xml.sax.InputSource", "member" : "scala.xml.Source.fromInputStream", "link" : "scala\/xml\/Source$.html#fromInputStream(is:java.io.InputStream):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "fromFile", "tail" : "(name: String): org.xml.sax.InputSource", "member" : "scala.xml.Source.fromFile", "link" : "scala\/xml\/Source$.html#fromFile(name:String):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "fromFile", "tail" : "(fd: FileDescriptor): org.xml.sax.InputSource", "member" : "scala.xml.Source.fromFile", "link" : "scala\/xml\/Source$.html#fromFile(fd:java.io.FileDescriptor):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "fromFile", "tail" : "(file: File): org.xml.sax.InputSource", "member" : "scala.xml.Source.fromFile", "link" : "scala\/xml\/Source$.html#fromFile(file:java.io.File):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Source$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Source$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Source$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Source$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Source$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Source$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Source$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Source$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Source$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Source$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Source$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Source$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Source$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Source$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/Source$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/Source$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Source$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Source$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Source$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.SpecialNode", "shortDescription" : "SpecialNode is a special XML node which represents either text (PCDATA), a comment, a PI, or an entity ref.", "members_class" : [{"label" : "child", "tail" : "(): collection.immutable.Nil", "member" : "scala.xml.SpecialNode.child", "link" : "scala\/xml\/SpecialNode.html#child:scala.collection.immutable.Nil.type", "kind" : "final def"}, {"label" : "namespace", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.namespace", "link" : "scala\/xml\/SpecialNode.html#namespace:Null", "kind" : "final def"}, {"label" : "attributes", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.attributes", "link" : "scala\/xml\/SpecialNode.html#attributes:scala.xml.Null.type", "kind" : "final def"}, {"member" : "scala.xml.SpecialNode#<init>", "error" : "unsupported entity"}, {"label" : "text", "tail" : "(): String", "member" : "scala.xml.Node.text", "link" : "scala\/xml\/SpecialNode.html#text:String", "kind" : "def"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/SpecialNode.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/SpecialNode.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/SpecialNode.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/SpecialNode.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.theSeq", "link" : "scala\/xml\/SpecialNode.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Node.strict_==", "link" : "scala\/xml\/SpecialNode.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Node.basisForHashCode", "link" : "scala\/xml\/SpecialNode.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Node.canEqual", "link" : "scala\/xml\/SpecialNode.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/SpecialNode.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/SpecialNode.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/SpecialNode.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/SpecialNode.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/SpecialNode.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/SpecialNode.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "scope", "tail" : "(): NamespaceBinding", "member" : "scala.xml.Node.scope", "link" : "scala\/xml\/SpecialNode.html#scope:scala.xml.NamespaceBinding", "kind" : "def"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.Node.doTransform", "link" : "scala\/xml\/SpecialNode.html#doTransform:Boolean", "kind" : "def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.Node.doCollectNamespaces", "link" : "scala\/xml\/SpecialNode.html#doCollectNamespaces:Boolean", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/SpecialNode.html#isAtom:Boolean", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "scala.xml.Node.prefix", "link" : "scala\/xml\/SpecialNode.html#prefix:String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/SpecialNode.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/SpecialNode.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/SpecialNode.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/SpecialNode.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/SpecialNode.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/SpecialNode.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/SpecialNode.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/SpecialNode.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/SpecialNode.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/SpecialNode.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/SpecialNode.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/SpecialNode.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/SpecialNode.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/SpecialNode.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/SpecialNode.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/SpecialNode.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/SpecialNode.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/SpecialNode.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/SpecialNode.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/SpecialNode.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/SpecialNode.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/SpecialNode.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/SpecialNode.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/SpecialNode.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/SpecialNode.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/SpecialNode.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/SpecialNode.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/SpecialNode.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/SpecialNode.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/SpecialNode.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/SpecialNode.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/SpecialNode.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/SpecialNode.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/SpecialNode.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/SpecialNode.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/SpecialNode.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/SpecialNode.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/SpecialNode.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/SpecialNode.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/SpecialNode.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/SpecialNode.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/SpecialNode.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/SpecialNode.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/SpecialNode.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/SpecialNode.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/SpecialNode.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/SpecialNode.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/SpecialNode.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/SpecialNode.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/SpecialNode.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/SpecialNode.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/SpecialNode.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/SpecialNode.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/SpecialNode.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/SpecialNode.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/SpecialNode.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/SpecialNode.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/SpecialNode.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/SpecialNode.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/SpecialNode.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): SpecialNode.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/SpecialNode.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/SpecialNode.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/SpecialNode.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/SpecialNode.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/SpecialNode.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/SpecialNode.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/SpecialNode.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/SpecialNode.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/SpecialNode.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/SpecialNode.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/SpecialNode.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/SpecialNode.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/SpecialNode.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/SpecialNode.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/SpecialNode.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/SpecialNode.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/SpecialNode.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/SpecialNode.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/SpecialNode.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/SpecialNode.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/SpecialNode.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/SpecialNode.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/SpecialNode.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/SpecialNode.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/SpecialNode.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/SpecialNode.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/SpecialNode.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/SpecialNode.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/SpecialNode.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/SpecialNode.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/SpecialNode.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/SpecialNode.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/SpecialNode.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/SpecialNode.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/SpecialNode.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/SpecialNode.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/SpecialNode.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/SpecialNode.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/SpecialNode.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/SpecialNode.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/SpecialNode.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/SpecialNode.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/SpecialNode.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/SpecialNode.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/SpecialNode.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/SpecialNode.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/SpecialNode.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/SpecialNode.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/SpecialNode.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/SpecialNode.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/SpecialNode.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/SpecialNode.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/SpecialNode.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/SpecialNode.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/SpecialNode.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/SpecialNode.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/SpecialNode.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/SpecialNode.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/SpecialNode.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/SpecialNode.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, SpecialNode.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/SpecialNode.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/SpecialNode.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): SpecialNode.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/SpecialNode.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): SpecialNode.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/SpecialNode.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): SpecialNode.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/SpecialNode.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/SpecialNode.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/SpecialNode.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/SpecialNode.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/SpecialNode.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/SpecialNode.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/SpecialNode.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/SpecialNode.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/SpecialNode.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/SpecialNode.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/SpecialNode.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/SpecialNode.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/SpecialNode.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/SpecialNode.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/SpecialNode.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/SpecialNode.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/SpecialNode.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/SpecialNode.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/SpecialNode.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/SpecialNode.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/SpecialNode.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/SpecialNode.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/SpecialNode.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/SpecialNode.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/SpecialNode.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/SpecialNode.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/SpecialNode.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/SpecialNode.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/SpecialNode.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/SpecialNode.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/SpecialNode.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/SpecialNode.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/SpecialNode.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/SpecialNode.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/SpecialNode.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/SpecialNode.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/SpecialNode.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/SpecialNode.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/SpecialNode.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/SpecialNode.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/SpecialNode.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/SpecialNode.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/SpecialNode.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/SpecialNode.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/SpecialNode.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/SpecialNode.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/SpecialNode.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/SpecialNode.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/SpecialNode.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/SpecialNode.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/SpecialNode.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/SpecialNode.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/SpecialNode.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/SpecialNode.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/SpecialNode.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/SpecialNode.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/SpecialNode.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/SpecialNode.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/SpecialNode.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/SpecialNode.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/SpecialNode.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/SpecialNode.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/SpecialNode.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/SpecialNode.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/SpecialNode.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/SpecialNode.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/SpecialNode.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/SpecialNode.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/SpecialNode.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/SpecialNode.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/SpecialNode.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/SpecialNode.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/SpecialNode.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/SpecialNode.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/SpecialNode.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/SpecialNode.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/SpecialNode.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/SpecialNode.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/SpecialNode.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/SpecialNode.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/SpecialNode.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/SpecialNode.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/SpecialNode.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/SpecialNode.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/SpecialNode.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/SpecialNode.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/SpecialNode.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/SpecialNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/SpecialNode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/SpecialNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/SpecialNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/SpecialNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/SpecialNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/SpecialNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/SpecialNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/SpecialNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/SpecialNode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/SpecialNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/SpecialNode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/SpecialNode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/SpecialNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/SpecialNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/SpecialNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.SpecialNode.buildString", "link" : "scala\/xml\/SpecialNode.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "abstract def"}, {"label" : "label", "tail" : "(): String", "member" : "scala.xml.Node.label", "link" : "scala\/xml\/SpecialNode.html#label:String", "kind" : "abstract def"}], "class" : "scala\/xml\/SpecialNode.html", "kind" : "class"}, {"name" : "scala.xml.Text", "shortDescription" : "The class Text implements an XML node for text (PCDATA).", "object" : "scala\/xml\/Text$.html", "members_class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Text.buildString", "link" : "scala\/xml\/Text.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.Text#<init>", "error" : "unsupported entity"}, {"label" : "text", "tail" : "(): String", "member" : "scala.xml.Atom.text", "link" : "scala\/xml\/Text.html#text:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "scala.xml.Atom.label", "link" : "scala\/xml\/Text.html#label:String", "kind" : "def"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.Atom.doTransform", "link" : "scala\/xml\/Text.html#doTransform:Boolean", "kind" : "final def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.Atom.doCollectNamespaces", "link" : "scala\/xml\/Text.html#doCollectNamespaces:Boolean", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Atom.canEqual", "link" : "scala\/xml\/Text.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Atom.strict_==", "link" : "scala\/xml\/Text.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Atom.basisForHashCode", "link" : "scala\/xml\/Text.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "data", "tail" : ": String", "member" : "scala.xml.Atom.data", "link" : "scala\/xml\/Text.html#data:A", "kind" : "val"}, {"label" : "child", "tail" : "(): collection.immutable.Nil", "member" : "scala.xml.SpecialNode.child", "link" : "scala\/xml\/Text.html#child:scala.collection.immutable.Nil.type", "kind" : "final def"}, {"label" : "namespace", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.namespace", "link" : "scala\/xml\/Text.html#namespace:Null", "kind" : "final def"}, {"label" : "attributes", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.attributes", "link" : "scala\/xml\/Text.html#attributes:scala.xml.Null.type", "kind" : "final def"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/Text.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/Text.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/Text.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/Text.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.theSeq", "link" : "scala\/xml\/Text.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/Text.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/Text.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/Text.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Text.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Text.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/Text.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "scope", "tail" : "(): NamespaceBinding", "member" : "scala.xml.Node.scope", "link" : "scala\/xml\/Text.html#scope:scala.xml.NamespaceBinding", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/Text.html#isAtom:Boolean", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "scala.xml.Node.prefix", "link" : "scala\/xml\/Text.html#prefix:String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/Text.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/Text.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/Text.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/Text.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Text.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Text.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/Text.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/Text.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Text.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Text.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Text.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Text.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Text.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/Text.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/Text.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/Text.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/Text.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/Text.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/Text.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/Text.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/Text.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/Text.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/Text.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/Text.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/Text.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/Text.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/Text.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/Text.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/Text.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/Text.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/Text.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/Text.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/Text.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/Text.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/Text.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/Text.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/Text.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/Text.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/Text.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/Text.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/Text.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/Text.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/Text.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/Text.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/Text.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/Text.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/Text.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/Text.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/Text.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/Text.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/Text.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/Text.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/Text.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/Text.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/Text.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/Text.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/Text.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/Text.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/Text.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/Text.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Text.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/Text.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/Text.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Text.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Text.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/Text.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/Text.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/Text.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/Text.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/Text.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Text.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Text.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Text.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Text.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/Text.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/Text.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/Text.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/Text.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/Text.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/Text.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/Text.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/Text.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/Text.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Text.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Text.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Text.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Text.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Text.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Text.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/Text.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Text.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Text.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Text.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Text.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/Text.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Text.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Text.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/Text.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/Text.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/Text.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/Text.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/Text.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/Text.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/Text.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/Text.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/Text.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/Text.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/Text.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/Text.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/Text.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/Text.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/Text.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/Text.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/Text.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/Text.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Text.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Text.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/Text.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/Text.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/Text.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/Text.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, Text.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/Text.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/Text.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Text.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/Text.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Text.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/Text.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Text.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/Text.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/Text.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/Text.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/Text.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/Text.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/Text.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/Text.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/Text.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/Text.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/Text.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/Text.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/Text.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/Text.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Text.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Text.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/Text.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/Text.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/Text.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/Text.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/Text.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/Text.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/Text.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/Text.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Text.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/Text.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/Text.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/Text.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/Text.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/Text.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/Text.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/Text.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/Text.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/Text.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/Text.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/Text.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/Text.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/Text.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/Text.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/Text.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/Text.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/Text.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/Text.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/Text.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/Text.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Text.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Text.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Text.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Text.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Text.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Text.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/Text.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/Text.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/Text.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/Text.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/Text.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/Text.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/Text.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/Text.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/Text.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/Text.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/Text.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/Text.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/Text.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Text.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Text.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Text.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/Text.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/Text.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/Text.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/Text.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/Text.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/Text.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/Text.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/Text.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/Text.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/Text.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/Text.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/Text.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/Text.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/Text.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/Text.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/Text.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/Text.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/Text.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/Text.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/Text.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/Text.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Text.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Text.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Text.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Text.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Text.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Text.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Text.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Text.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Text.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Text.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Text.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Text.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Text.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Text.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Text.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Text.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(other: Any): Option[String]", "member" : "scala.xml.Text.unapply", "link" : "scala\/xml\/Text$.html#unapply(other:Any):Option[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: String): Text", "member" : "scala.xml.Text.apply", "link" : "scala\/xml\/Text$.html#apply(data:String):scala.xml.Text", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Text$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Text$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Text$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Text$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Text$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Text$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Text$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Text$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Text$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Text$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Text$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Text$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Text$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Text$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/Text$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/Text$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Text$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Text$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Text$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/Text.html", "kind" : "class"}, {"name" : "scala.xml.TextBuffer", "shortDescription" : "", "object" : "scala\/xml\/TextBuffer$.html", "members_class" : [{"label" : "toText", "tail" : "(): collection.Seq[Text]", "member" : "scala.xml.TextBuffer.toText", "link" : "scala\/xml\/TextBuffer.html#toText:scala.collection.Seq[scala.xml.Text]", "kind" : "def"}, {"label" : "append", "tail" : "(cs: collection.Seq[Char]): TextBuffer.this.type", "member" : "scala.xml.TextBuffer.append", "link" : "scala\/xml\/TextBuffer.html#append(cs:scala.collection.Seq[Char]):TextBuffer.this.type", "kind" : "def"}, {"label" : "sb", "tail" : ": collection.mutable.StringBuilder", "member" : "scala.xml.TextBuffer.sb", "link" : "scala\/xml\/TextBuffer.html#sb:StringBuilder", "kind" : "val"}, {"member" : "scala.xml.TextBuffer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/TextBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/TextBuffer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/TextBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/TextBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/TextBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/TextBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/TextBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TextBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TextBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TextBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/TextBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/TextBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/TextBuffer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/TextBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/TextBuffer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/TextBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/TextBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/TextBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/TextBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromString", "tail" : "(str: String): TextBuffer", "member" : "scala.xml.TextBuffer.fromString", "link" : "scala\/xml\/TextBuffer$.html#fromString(str:String):scala.xml.TextBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/TextBuffer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/TextBuffer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/TextBuffer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/TextBuffer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/TextBuffer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/TextBuffer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/TextBuffer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TextBuffer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TextBuffer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TextBuffer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/TextBuffer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/TextBuffer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/TextBuffer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/TextBuffer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/TextBuffer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/TextBuffer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/TextBuffer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/TextBuffer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/TextBuffer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/TextBuffer.html", "kind" : "object"}, {"name" : "scala.xml.TopScope", "shortDescription" : "top level namespace scope.", "object" : "scala\/xml\/TopScope$.html", "members_object" : [{"label" : "buildString", "tail" : "(sb: StringBuilder, ignore: NamespaceBinding): Unit", "member" : "scala.xml.TopScope.buildString", "link" : "scala\/xml\/TopScope$.html#buildString(sb:StringBuilder,ignore:scala.xml.NamespaceBinding):Unit", "kind" : "def"}, {"label" : "buildString", "tail" : "(stop: NamespaceBinding): String", "member" : "scala.xml.TopScope.buildString", "link" : "scala\/xml\/TopScope$.html#buildString(stop:scala.xml.NamespaceBinding):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.TopScope.toString", "link" : "scala\/xml\/TopScope$.html#toString():String", "kind" : "def"}, {"label" : "getPrefix", "tail" : "(uri1: String): String", "member" : "scala.xml.TopScope.getPrefix", "link" : "scala\/xml\/TopScope$.html#getPrefix(uri1:String):String", "kind" : "def"}, {"label" : "getURI", "tail" : "(prefix1: String): String", "member" : "scala.xml.TopScope.getURI", "link" : "scala\/xml\/TopScope$.html#getURI(prefix1:String):String", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.NamespaceBinding.basisForHashCode", "link" : "scala\/xml\/TopScope$.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.NamespaceBinding.strict_==", "link" : "scala\/xml\/TopScope$.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.NamespaceBinding.canEqual", "link" : "scala\/xml\/TopScope$.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "parent", "tail" : ": NamespaceBinding", "member" : "scala.xml.NamespaceBinding.parent", "link" : "scala\/xml\/TopScope$.html#parent:scala.xml.NamespaceBinding", "kind" : "val"}, {"label" : "uri", "tail" : ": String", "member" : "scala.xml.NamespaceBinding.uri", "link" : "scala\/xml\/TopScope$.html#uri:String", "kind" : "val"}, {"label" : "prefix", "tail" : ": String", "member" : "scala.xml.NamespaceBinding.prefix", "link" : "scala\/xml\/TopScope$.html#prefix:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/TopScope$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/TopScope$.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/TopScope$.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/TopScope$.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/TopScope$.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/TopScope$.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/TopScope$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/TopScope$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/TopScope$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/TopScope$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/TopScope$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/TopScope$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/TopScope$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TopScope$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TopScope$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TopScope$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/TopScope$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/TopScope$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/TopScope$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/TopScope$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/TopScope$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/TopScope$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.TypeSymbol", "shortDescription" : "", "members_class" : [{"member" : "scala.xml.TypeSymbol#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/TypeSymbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/TypeSymbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/TypeSymbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/TypeSymbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/TypeSymbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/TypeSymbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/TypeSymbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TypeSymbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TypeSymbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/TypeSymbol.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/TypeSymbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/TypeSymbol.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/TypeSymbol.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/TypeSymbol.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/TypeSymbol.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/TypeSymbol.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/TypeSymbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/TypeSymbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/TypeSymbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/TypeSymbol.html", "kind" : "class"}, {"name" : "scala.xml.Unparsed", "shortDescription" : "An XML node for unparsed content.", "object" : "scala\/xml\/Unparsed$.html", "members_class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Unparsed.buildString", "link" : "scala\/xml\/Unparsed.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.Unparsed#<init>", "error" : "unsupported entity"}, {"label" : "text", "tail" : "(): String", "member" : "scala.xml.Atom.text", "link" : "scala\/xml\/Unparsed.html#text:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "scala.xml.Atom.label", "link" : "scala\/xml\/Unparsed.html#label:String", "kind" : "def"}, {"label" : "doTransform", "tail" : "(): Boolean", "member" : "scala.xml.Atom.doTransform", "link" : "scala\/xml\/Unparsed.html#doTransform:Boolean", "kind" : "final def"}, {"label" : "doCollectNamespaces", "tail" : "(): Boolean", "member" : "scala.xml.Atom.doCollectNamespaces", "link" : "scala\/xml\/Unparsed.html#doCollectNamespaces:Boolean", "kind" : "final def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Atom.canEqual", "link" : "scala\/xml\/Unparsed.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Atom.strict_==", "link" : "scala\/xml\/Unparsed.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.Atom.basisForHashCode", "link" : "scala\/xml\/Unparsed.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "data", "tail" : ": String", "member" : "scala.xml.Atom.data", "link" : "scala\/xml\/Unparsed.html#data:A", "kind" : "val"}, {"label" : "child", "tail" : "(): collection.immutable.Nil", "member" : "scala.xml.SpecialNode.child", "link" : "scala\/xml\/Unparsed.html#child:scala.collection.immutable.Nil.type", "kind" : "final def"}, {"label" : "namespace", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.namespace", "link" : "scala\/xml\/Unparsed.html#namespace:Null", "kind" : "final def"}, {"label" : "attributes", "tail" : "(): Null", "member" : "scala.xml.SpecialNode.attributes", "link" : "scala\/xml\/Unparsed.html#attributes:scala.xml.Null.type", "kind" : "final def"}, {"label" : "xmlType", "tail" : "(): TypeSymbol", "member" : "scala.xml.Node.xmlType", "link" : "scala\/xml\/Unparsed.html#xmlType():scala.xml.TypeSymbol", "kind" : "def"}, {"label" : "nameToString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.Node.nameToString", "link" : "scala\/xml\/Unparsed.html#nameToString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.Node.toString", "link" : "scala\/xml\/Unparsed.html#toString():String", "kind" : "def"}, {"label" : "buildString", "tail" : "(stripComments: Boolean): String", "member" : "scala.xml.Node.buildString", "link" : "scala\/xml\/Unparsed.html#buildString(stripComments:Boolean):String", "kind" : "def"}, {"label" : "theSeq", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.theSeq", "link" : "scala\/xml\/Unparsed.html#theSeq:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant_or_self", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant_or_self", "link" : "scala\/xml\/Unparsed.html#descendant_or_self:List[scala.xml.Node]", "kind" : "def"}, {"label" : "descendant", "tail" : "(): List[Node]", "member" : "scala.xml.Node.descendant", "link" : "scala\/xml\/Unparsed.html#descendant:List[scala.xml.Node]", "kind" : "def"}, {"label" : "nonEmptyChildren", "tail" : "(): collection.Seq[Node]", "member" : "scala.xml.Node.nonEmptyChildren", "link" : "scala\/xml\/Unparsed.html#nonEmptyChildren:scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "attribute", "tail" : "(uri: String, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Unparsed.html#attribute(uri:String,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "attribute", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.Node.attribute", "link" : "scala\/xml\/Unparsed.html#attribute(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "getNamespace", "tail" : "(pre: String): String", "member" : "scala.xml.Node.getNamespace", "link" : "scala\/xml\/Unparsed.html#getNamespace(pre:String):String", "kind" : "def"}, {"label" : "scope", "tail" : "(): NamespaceBinding", "member" : "scala.xml.Node.scope", "link" : "scala\/xml\/Unparsed.html#scope:scala.xml.NamespaceBinding", "kind" : "def"}, {"label" : "isAtom", "tail" : "(): Boolean", "member" : "scala.xml.Node.isAtom", "link" : "scala\/xml\/Unparsed.html#isAtom:Boolean", "kind" : "def"}, {"label" : "prefix", "tail" : "(): String", "member" : "scala.xml.Node.prefix", "link" : "scala\/xml\/Unparsed.html#prefix:String", "kind" : "def"}, {"label" : "\\@", "tail" : "(attributeName: String): String", "member" : "scala.xml.NodeSeq.\\@", "link" : "scala\/xml\/Unparsed.html#\\@(attributeName:String):String", "kind" : "def"}, {"label" : "\\\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\\\", "link" : "scala\/xml\/Unparsed.html#\\\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "\\", "tail" : "(that: String): NodeSeq", "member" : "scala.xml.NodeSeq.\\", "link" : "scala\/xml\/Unparsed.html#\\(that:String):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "xml_sameElements", "tail" : "(that: Iterable[A]): Boolean", "member" : "scala.xml.NodeSeq.xml_sameElements", "link" : "scala\/xml\/Unparsed.html#xml_sameElements[A](that:Iterable[A]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Node) => Boolean): NodeSeq", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Unparsed.html#apply(f:scala.xml.Node=>Boolean):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Node", "member" : "scala.xml.NodeSeq.apply", "link" : "scala\/xml\/Unparsed.html#apply(i:Int):scala.xml.Node", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.xml.NodeSeq.iterator", "link" : "scala\/xml\/Unparsed.html#iterator:Iterator[scala.xml.Node]", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.NodeSeq.length", "link" : "scala\/xml\/Unparsed.html#length:Int", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/Unparsed.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/Unparsed.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/Unparsed.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/Unparsed.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/Unparsed.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.flatMap", "link" : "scala\/xml\/Unparsed.html#flatMap(f:scala.xml.Node=>scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Node) => Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.map", "link" : "scala\/xml\/Unparsed.html#map(f:scala.xml.Node=>scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prependedAll", "link" : "scala\/xml\/Unparsed.html#prependedAll(prefix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "prepended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.prepended", "link" : "scala\/xml\/Unparsed.html#prepended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appendedAll", "link" : "scala\/xml\/Unparsed.html#appendedAll(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "appended", "tail" : "(base: Node): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.appended", "link" : "scala\/xml\/Unparsed.html#appended(base:scala.xml.Node):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: Seq[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.++", "link" : "scala\/xml\/Unparsed.html#++(suffix:Seq[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.concat", "link" : "scala\/xml\/Unparsed.html#concat(suffix:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "empty", "tail" : "(): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.empty", "link" : "scala\/xml\/Unparsed.html#empty:scala.xml.NodeSeq", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[Node, NodeSeq]", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.newSpecificBuilder", "link" : "scala\/xml\/Unparsed.html#newSpecificBuilder:scala.collection.mutable.Builder[scala.xml.Node,scala.xml.NodeSeq]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[Node]): NodeSeq", "member" : "scala.xml.ScalaVersionSpecificNodeSeq.fromSpecific", "link" : "scala\/xml\/Unparsed.html#fromSpecific(coll:scala.collection.IterableOnce[scala.xml.Node]):scala.xml.NodeSeq", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.sorted", "link" : "scala\/xml\/Unparsed.html#sorted[B>:A](implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, other: collection.IterableOnce[B], replaced: Int): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.patch", "link" : "scala\/xml\/Unparsed.html#patch[B>:A](from:Int,other:scala.collection.IterableOnce[B],replaced:Int):CC[B]", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.updated", "link" : "scala\/xml\/Unparsed.html#updated[B>:A](index:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (Node) => B): NodeSeq", "member" : "scala.collection.immutable.StrictOptimizedSeqOps.distinctBy", "link" : "scala\/xml\/Unparsed.html#distinctBy[B](f:A=>B):C", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.intersect", "link" : "scala\/xml\/Unparsed.html#intersect[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "diff", "tail" : "(that: collection.Seq[B]): NodeSeq", "member" : "scala.collection.StrictOptimizedSeqOps.diff", "link" : "scala\/xml\/Unparsed.html#diff[B>:A](that:scala.collection.Seq[B]):C", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.padTo", "link" : "scala\/xml\/Unparsed.html#padTo[B>:A](len:Int,elem:B):CC[B]", "kind" : "def"}, {"label" : "prependedAll", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prependedAll", "link" : "scala\/xml\/Unparsed.html#prependedAll[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appendedAll", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appendedAll", "link" : "scala\/xml\/Unparsed.html#appendedAll[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "appended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.appended", "link" : "scala\/xml\/Unparsed.html#appended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "prepended", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedSeqOps.prepended", "link" : "scala\/xml\/Unparsed.html#prepended[B>:A](elem:B):CC[B]", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.dropRight", "link" : "scala\/xml\/Unparsed.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.takeRight", "link" : "scala\/xml\/Unparsed.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (Node) => U): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.tapEach", "link" : "scala\/xml\/Unparsed.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (Node) => Either[A1, A2]): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.partitionMap", "link" : "scala\/xml\/Unparsed.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "filterImpl", "tail" : "(pred: (Node) => Boolean, isFlipped: Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterImpl", "link" : "scala\/xml\/Unparsed.html#filterImpl(pred:A=>Boolean,isFlipped:Boolean):C", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filterNot", "link" : "scala\/xml\/Unparsed.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (Node) => Boolean): NodeSeq", "member" : "scala.collection.StrictOptimizedIterableOps.filter", "link" : "scala\/xml\/Unparsed.html#filter(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.scanLeft", "link" : "scala\/xml\/Unparsed.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.immutable.Seq[(Node, Int)]", "member" : "scala.collection.StrictOptimizedIterableOps.zipWithIndex", "link" : "scala\/xml\/Unparsed.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "strictOptimizedZip", "tail" : "(that: collection.IterableOnce[B], b: Builder[(Node, B), C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedZip", "link" : "scala\/xml\/Unparsed.html#strictOptimizedZip[B,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[(A,B),C2]):C2", "kind" : "final def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.immutable.Seq[(Node, B)]", "member" : "scala.collection.StrictOptimizedIterableOps.zip", "link" : "scala\/xml\/Unparsed.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "strictOptimizedFlatten", "tail" : "(b: Builder[B, C2])(toIterableOnce: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatten", "link" : "scala\/xml\/Unparsed.html#strictOptimizedFlatten[B,C2](b:scala.collection.mutable.Builder[B,C2])(implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatten", "tail" : "(toIterableOnce: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatten", "link" : "scala\/xml\/Unparsed.html#flatten[B](implicittoIterableOnce:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedCollect", "tail" : "(b: Builder[B, C2], pf: PartialFunction[Node, B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedCollect", "link" : "scala\/xml\/Unparsed.html#strictOptimizedCollect[B,C2](b:scala.collection.mutable.Builder[B,C2],pf:PartialFunction[A,B]):C2", "kind" : "final def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Node, B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.collect", "link" : "scala\/xml\/Unparsed.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedConcat", "tail" : "(that: collection.IterableOnce[B], b: Builder[B, C2]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedConcat", "link" : "scala\/xml\/Unparsed.html#strictOptimizedConcat[B>:A,C2](that:scala.collection.IterableOnce[B],b:scala.collection.mutable.Builder[B,C2]):C2", "kind" : "final def"}, {"label" : "strictOptimizedFlatMap", "tail" : "(b: Builder[B, C2], f: (Node) => collection.IterableOnce[B]): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedFlatMap", "link" : "scala\/xml\/Unparsed.html#strictOptimizedFlatMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>scala.collection.IterableOnce[B]):C2", "kind" : "final def"}, {"label" : "flatMap", "tail" : "(f: (Node) => collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.flatMap", "link" : "scala\/xml\/Unparsed.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "strictOptimizedMap", "tail" : "(b: Builder[B, C2], f: (Node) => B): C2", "member" : "scala.collection.StrictOptimizedIterableOps.strictOptimizedMap", "link" : "scala\/xml\/Unparsed.html#strictOptimizedMap[B,C2](b:scala.collection.mutable.Builder[B,C2],f:A=>B):C2", "kind" : "final def"}, {"label" : "map", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.StrictOptimizedIterableOps.map", "link" : "scala\/xml\/Unparsed.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Node) => (A1, A2, A3)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2], collection.immutable.Seq[A3])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip3", "link" : "scala\/xml\/Unparsed.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Node) => (A1, A2)): (collection.immutable.Seq[A1], collection.immutable.Seq[A2])", "member" : "scala.collection.StrictOptimizedIterableOps.unzip", "link" : "scala\/xml\/Unparsed.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.span", "link" : "scala\/xml\/Unparsed.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Node) => Boolean): (NodeSeq, NodeSeq)", "member" : "scala.collection.StrictOptimizedIterableOps.partition", "link" : "scala\/xml\/Unparsed.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): SeqFactory[collection.immutable.Seq]", "member" : "scala.collection.immutable.Seq.iterableFactory", "link" : "scala\/xml\/Unparsed.html#iterableFactory:scala.collection.SeqFactory[Seq]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Unparsed.this.type", "member" : "scala.collection.immutable.Seq.toSeq", "link" : "scala\/xml\/Unparsed.html#toSeq:Seq.this.type", "kind" : "final def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Seq.stringPrefix", "link" : "scala\/xml\/Unparsed.html#stringPrefix:String", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B, from: Int, to: Int)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Unparsed.html#search[B>:A](elem:B,from:Int,to:Int)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "search", "tail" : "(elem: B)(ord: Ordering[B]): SearchResult", "member" : "scala.collection.SeqOps.search", "link" : "scala\/xml\/Unparsed.html#search[B>:A](elem:B)(implicitord:Ordering[B]):scala.collection.Searching.SearchResult", "kind" : "def"}, {"label" : "occCounts", "tail" : "(sq: collection.Seq[B]): Map[B, Int]", "member" : "scala.collection.SeqOps.occCounts", "link" : "scala\/xml\/Unparsed.html#occCounts[B](sq:scala.collection.Seq[B]):scala.collection.mutable.Map[B,Int]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: collection.Seq[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.SeqOps.corresponds", "link" : "scala\/xml\/Unparsed.html#corresponds[B](that:scala.collection.Seq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.SeqOps.sameElements", "link" : "scala\/xml\/Unparsed.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.SeqOps.isEmpty", "link" : "scala\/xml\/Unparsed.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "lengthIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.SeqOps.lengthIs", "link" : "scala\/xml\/Unparsed.html#lengthIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Unparsed.html#lengthCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Unparsed.html#sizeCompare(that:Iterable[_]):Int", "kind" : "final def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.SeqOps.lengthCompare", "link" : "scala\/xml\/Unparsed.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.SeqOps.sizeCompare", "link" : "scala\/xml\/Unparsed.html#sizeCompare(otherSize:Int):Int", "kind" : "final def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqOps.indices", "link" : "scala\/xml\/Unparsed.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Node) => B)(ord: Ordering[B]): NodeSeq", "member" : "scala.collection.SeqOps.sortBy", "link" : "scala\/xml\/Unparsed.html#sortBy[B](f:A=>B)(implicitord:Ordering[B]):C", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Node, Node) => Boolean): NodeSeq", "member" : "scala.collection.SeqOps.sortWith", "link" : "scala\/xml\/Unparsed.html#sortWith(lt:(A,A)=>Boolean):C", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.combinations", "link" : "scala\/xml\/Unparsed.html#combinations(n:Int):Iterator[C]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.SeqOps.permutations", "link" : "scala\/xml\/Unparsed.html#permutations:Iterator[C]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Node) => B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.reverseMap", "link" : "scala\/xml\/Unparsed.html#reverseMap[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqOps.contains", "link" : "scala\/xml\/Unparsed.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: collection.Seq[B]): Boolean", "member" : "scala.collection.SeqOps.containsSlice", "link" : "scala\/xml\/Unparsed.html#containsSlice[B](that:scala.collection.Seq[B]):Boolean", "kind" : "def"}, {"label" : "findLast", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.SeqOps.findLast", "link" : "scala\/xml\/Unparsed.html#findLast(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Unparsed.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: collection.Seq[B], end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOfSlice", "link" : "scala\/xml\/Unparsed.html#lastIndexOfSlice[B>:A](that:scala.collection.Seq[B],end:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B]): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Unparsed.html#indexOfSlice[B>:A](that:scala.collection.Seq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: collection.Seq[B], from: Int): Int", "member" : "scala.collection.SeqOps.indexOfSlice", "link" : "scala\/xml\/Unparsed.html#indexOfSlice[B>:A](that:scala.collection.Seq[B],from:Int):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Unparsed.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Node) => Boolean, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexWhere", "link" : "scala\/xml\/Unparsed.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.SeqOps.lastIndexOf", "link" : "scala\/xml\/Unparsed.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Unparsed.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.SeqOps.indexOf", "link" : "scala\/xml\/Unparsed.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Unparsed.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.indexWhere", "link" : "scala\/xml\/Unparsed.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.prefixLength", "link" : "scala\/xml\/Unparsed.html#prefixLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean, from: Int): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Unparsed.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.SeqOps.segmentLength", "link" : "scala\/xml\/Unparsed.html#segmentLength(p:A=>Boolean):Int", "kind" : "final def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.SeqOps.isDefinedAt", "link" : "scala\/xml\/Unparsed.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: collection.Iterable[B]): Boolean", "member" : "scala.collection.SeqOps.endsWith", "link" : "scala\/xml\/Unparsed.html#endsWith[B>:A](that:Iterable[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: collection.IterableOnce[B], offset: Int): Boolean", "member" : "scala.collection.SeqOps.startsWith", "link" : "scala\/xml\/Unparsed.html#startsWith[B>:A](that:scala.collection.IterableOnce[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.SeqOps.reverseIterator", "link" : "scala\/xml\/Unparsed.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.reverse", "link" : "scala\/xml\/Unparsed.html#reverse:C", "kind" : "def"}, {"label" : "distinct", "tail" : "(): NodeSeq", "member" : "scala.collection.SeqOps.distinct", "link" : "scala\/xml\/Unparsed.html#distinct:C", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqOps.size", "link" : "scala\/xml\/Unparsed.html#size:Int", "kind" : "final def"}, {"label" : "union", "tail" : "(that: collection.Seq[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.union", "link" : "scala\/xml\/Unparsed.html#union[B>:A](that:scala.collection.Seq[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.concat", "link" : "scala\/xml\/Unparsed.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:++", "link" : "scala\/xml\/Unparsed.html#:++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "++:", "tail" : "(prefix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.++:", "link" : "scala\/xml\/Unparsed.html#++:[B>:A](prefix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : ":+", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.:+", "link" : "scala\/xml\/Unparsed.html#:+[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "+:", "tail" : "(elem: B): collection.immutable.Seq[B]", "member" : "scala.collection.SeqOps.+:", "link" : "scala\/xml\/Unparsed.html#+:[B>:A](elem:B):CC[B]", "kind" : "final def"}, {"label" : "view", "tail" : "(): SeqView[Node]", "member" : "scala.collection.SeqOps.view", "link" : "scala\/xml\/Unparsed.html#view:scala.collection.SeqView[A]", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Node) => U): (Int) => Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/xml\/Unparsed.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) => B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/xml\/Unparsed.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) => Option[Node]", "member" : "scala.PartialFunction.lift", "link" : "scala\/xml\/Unparsed.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(k: PartialFunction[R, Int]): PartialFunction[R, Node]", "member" : "scala.PartialFunction.compose", "link" : "scala\/xml\/Unparsed.html#compose[R](k:PartialFunction[R,A]):PartialFunction[R,B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: PartialFunction[Node, C]): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Unparsed.html#andThen[C](k:PartialFunction[B,C]):PartialFunction[A,C]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Node) => C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/xml\/Unparsed.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/xml\/Unparsed.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "elementWise", "tail" : "(): ElementWiseExtractor[Int, Node]", "member" : "scala.PartialFunction.elementWise", "link" : "scala\/xml\/Unparsed.html#elementWise:PartialFunction.ElementWiseExtractor[A,B]", "kind" : "def"}, {"label" : "unapply", "tail" : "(a: Int): Option[Node]", "member" : "scala.PartialFunction.unapply", "link" : "scala\/xml\/Unparsed.html#unapply(a:A):Option[B]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Int): (A) => Node", "member" : "scala.Function1.compose", "link" : "scala\/xml\/Unparsed.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[Node, B, Unparsed.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/Unparsed.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/Unparsed.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): Unparsed.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/Unparsed.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "coll", "tail" : "(): Unparsed.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/Unparsed.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): Unparsed.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/Unparsed.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "inits", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/Unparsed.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/Unparsed.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.immutable.Seq[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/Unparsed.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/Unparsed.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Node, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/Unparsed.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.immutable.Seq[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/Unparsed.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (Node) => K)(f: (Node) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/Unparsed.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (Node) => K)(f: (Node) => B): Map[K, collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/Unparsed.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Node) => K): Map[K, NodeSeq]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/Unparsed.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): NodeSeq", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/Unparsed.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/Unparsed.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/Unparsed.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Unparsed.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/Unparsed.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[NodeSeq]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/Unparsed.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/Unparsed.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/Unparsed.html#drop(n:Int):C", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Node) => Boolean): NodeSeq", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/Unparsed.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): NodeSeq", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/Unparsed.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (NodeSeq, NodeSeq)", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/Unparsed.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Node) => Boolean): WithFilter[Node, [_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/Unparsed.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (Node) => collection.Iterable[B]): collection.immutable.Seq[collection.immutable.Seq[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/Unparsed.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[Node]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/Unparsed.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/Unparsed.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "lastOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/Unparsed.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Node", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/Unparsed.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Node]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/Unparsed.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): Node", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/Unparsed.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[[_]collection.immutable.Seq[_]]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/Unparsed.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): NodeSeq", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/Unparsed.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/Unparsed.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[Node]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/Unparsed.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[Node]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/Unparsed.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/Unparsed.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/Unparsed.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[Node]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/Unparsed.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[Node]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/Unparsed.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/Unparsed.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Node, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/Unparsed.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[Node]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/Unparsed.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[Node]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/Unparsed.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[Node]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/Unparsed.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[Node, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/Unparsed.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Unparsed.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Unparsed.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/Unparsed.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Unparsed.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Unparsed.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/Unparsed.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (Node, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/Unparsed.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, Node) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/Unparsed.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Node, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/Unparsed.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/Unparsed.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/Unparsed.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/Unparsed.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Node) => B)(cmp: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/Unparsed.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/Unparsed.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/Unparsed.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[Node]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/Unparsed.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): Node", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/Unparsed.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/Unparsed.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/Unparsed.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Unparsed.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Unparsed.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/Unparsed.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/Unparsed.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/Unparsed.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Node, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/Unparsed.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Node) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/Unparsed.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/Unparsed.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/Unparsed.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/Unparsed.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/Unparsed.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/Unparsed.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/Unparsed.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/Unparsed.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Node, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/Unparsed.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Node) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/Unparsed.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Node) => Boolean): Option[Node]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/Unparsed.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Node) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/Unparsed.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/Unparsed.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Node) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/Unparsed.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Node) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/Unparsed.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/Unparsed.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/Unparsed.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[Node, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/Unparsed.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Unparsed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Unparsed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Unparsed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Unparsed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Unparsed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Unparsed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Unparsed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Unparsed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Unparsed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Unparsed.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Unparsed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Unparsed.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Unparsed.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Unparsed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Unparsed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Unparsed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(x: Unparsed): Some[String]", "member" : "scala.xml.Unparsed.unapply", "link" : "scala\/xml\/Unparsed$.html#unapply(x:scala.xml.Unparsed):Some[String]", "kind" : "def"}, {"label" : "apply", "tail" : "(data: String): Unparsed", "member" : "scala.xml.Unparsed.apply", "link" : "scala\/xml\/Unparsed$.html#apply(data:String):scala.xml.Unparsed", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Unparsed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Unparsed$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Unparsed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Unparsed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Unparsed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Unparsed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Unparsed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Unparsed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Unparsed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Unparsed$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Unparsed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Unparsed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Unparsed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Unparsed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/Unparsed$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/Unparsed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Unparsed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Unparsed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Unparsed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/Unparsed.html", "kind" : "class"}, {"name" : "scala.xml.UnprefixedAttribute", "shortDescription" : "Unprefixed attributes have the null namespace, and no prefix field", "object" : "scala\/xml\/UnprefixedAttribute$.html", "members_class" : [{"label" : "apply", "tail" : "(namespace: String, scope: NamespaceBinding, key: String): collection.Seq[Node]", "member" : "scala.xml.UnprefixedAttribute.apply", "link" : "scala\/xml\/UnprefixedAttribute.html#apply(namespace:String,scope:scala.xml.NamespaceBinding,key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "apply", "tail" : "(key: String): collection.Seq[Node]", "member" : "scala.xml.UnprefixedAttribute.apply", "link" : "scala\/xml\/UnprefixedAttribute.html#apply(key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "getNamespace", "tail" : "(owner: Node): String", "member" : "scala.xml.UnprefixedAttribute.getNamespace", "link" : "scala\/xml\/UnprefixedAttribute.html#getNamespace(owner:scala.xml.Node):String", "kind" : "final def"}, {"label" : "copy", "tail" : "(next: MetaData): UnprefixedAttribute", "member" : "scala.xml.UnprefixedAttribute.copy", "link" : "scala\/xml\/UnprefixedAttribute.html#copy(next:scala.xml.MetaData):scala.xml.UnprefixedAttribute", "kind" : "def"}, {"member" : "scala.xml.UnprefixedAttribute#<init>", "error" : "unsupported entity"}, {"member" : "scala.xml.UnprefixedAttribute#<init>", "error" : "unsupported entity"}, {"label" : "next", "tail" : ": MetaData", "member" : "scala.xml.UnprefixedAttribute.next", "link" : "scala\/xml\/UnprefixedAttribute.html#next:scala.xml.MetaData", "kind" : "val"}, {"label" : "pre", "tail" : ": Null(null)", "member" : "scala.xml.UnprefixedAttribute.pre", "link" : "scala\/xml\/UnprefixedAttribute.html#pre:Null(null)", "kind" : "final val"}, {"member" : "scala.xml.UnprefixedAttribute#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": collection.Seq[Node]", "member" : "scala.xml.UnprefixedAttribute.value", "link" : "scala\/xml\/UnprefixedAttribute.html#value:scala.collection.Seq[scala.xml.Node]", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "scala.xml.UnprefixedAttribute.key", "link" : "scala\/xml\/UnprefixedAttribute.html#key:String", "kind" : "val"}, {"label" : "toString1", "tail" : "(sb: StringBuilder): Unit", "member" : "scala.xml.Attribute.toString1", "link" : "scala\/xml\/UnprefixedAttribute.html#toString1(sb:StringBuilder):Unit", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.xml.Attribute.size", "link" : "scala\/xml\/UnprefixedAttribute.html#size:Int", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[MetaData]", "member" : "scala.xml.Attribute.iterator", "link" : "scala\/xml\/UnprefixedAttribute.html#iterator:Iterator[scala.xml.MetaData]", "kind" : "def"}, {"label" : "wellformed", "tail" : "(scope: NamespaceBinding): Boolean", "member" : "scala.xml.Attribute.wellformed", "link" : "scala\/xml\/UnprefixedAttribute.html#wellformed(scope:scala.xml.NamespaceBinding):Boolean", "kind" : "def"}, {"label" : "isPrefixed", "tail" : "(): Boolean", "member" : "scala.xml.Attribute.isPrefixed", "link" : "scala\/xml\/UnprefixedAttribute.html#isPrefixed:Boolean", "kind" : "def"}, {"label" : "remove", "tail" : "(namespace: String, scope: NamespaceBinding, key: String): MetaData", "member" : "scala.xml.Attribute.remove", "link" : "scala\/xml\/UnprefixedAttribute.html#remove(namespace:String,scope:scala.xml.NamespaceBinding,key:String):scala.xml.MetaData", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): MetaData", "member" : "scala.xml.Attribute.remove", "link" : "scala\/xml\/UnprefixedAttribute.html#remove(key:String):scala.xml.MetaData", "kind" : "def"}, {"label" : "remove", "tail" : "(namespace: String, owner: Node, key: String): MetaData", "member" : "scala.xml.MetaData.remove", "link" : "scala\/xml\/UnprefixedAttribute.html#remove(namespace:String,owner:scala.xml.Node,key:String):scala.xml.MetaData", "kind" : "final def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.MetaData.buildString", "link" : "scala\/xml\/UnprefixedAttribute.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.MetaData.toString", "link" : "scala\/xml\/UnprefixedAttribute.html#toString():String", "kind" : "def"}, {"label" : "toString1", "tail" : "(): String", "member" : "scala.xml.MetaData.toString1", "link" : "scala\/xml\/UnprefixedAttribute.html#toString1():String", "kind" : "def"}, {"label" : "get", "tail" : "(uri: String, scope: NamespaceBinding, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/UnprefixedAttribute.html#get(uri:String,scope:scala.xml.NamespaceBinding,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "get", "tail" : "(uri: String, owner: Node, key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/UnprefixedAttribute.html#get(uri:String,owner:scala.xml.Node,key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "get", "tail" : "(key: String): Option[collection.Seq[Node]]", "member" : "scala.xml.MetaData.get", "link" : "scala\/xml\/UnprefixedAttribute.html#get(key:String):Option[scala.collection.Seq[scala.xml.Node]]", "kind" : "final def"}, {"label" : "asAttrMap", "tail" : "(): Map[String, String]", "member" : "scala.xml.MetaData.asAttrMap", "link" : "scala\/xml\/UnprefixedAttribute.html#asAttrMap:Map[String,String]", "kind" : "def"}, {"label" : "prefixedKey", "tail" : "(): String", "member" : "scala.xml.MetaData.prefixedKey", "link" : "scala\/xml\/UnprefixedAttribute.html#prefixedKey:String", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (MetaData) => Boolean): MetaData", "member" : "scala.xml.MetaData.filter", "link" : "scala\/xml\/UnprefixedAttribute.html#filter(f:scala.xml.MetaData=>Boolean):scala.xml.MetaData", "kind" : "def"}, {"label" : "basisForHashCode", "tail" : "(): collection.Seq[Any]", "member" : "scala.xml.MetaData.basisForHashCode", "link" : "scala\/xml\/UnprefixedAttribute.html#basisForHashCode:scala.collection.Seq[Any]", "kind" : "def"}, {"label" : "strict_==", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.MetaData.strict_==", "link" : "scala\/xml\/UnprefixedAttribute.html#strict_==(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "canEqual", "tail" : "(other: Any): Boolean", "member" : "scala.xml.MetaData.canEqual", "link" : "scala\/xml\/UnprefixedAttribute.html#canEqual(other:Any):Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(i: Int): Int", "member" : "scala.xml.MetaData.length", "link" : "scala\/xml\/UnprefixedAttribute.html#length(i:Int):Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.xml.MetaData.length", "link" : "scala\/xml\/UnprefixedAttribute.html#length:Int", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scala.xml.MetaData.hasNext", "link" : "scala\/xml\/UnprefixedAttribute.html#hasNext:Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(namespace_uri: String, owner: Node, key: String): collection.Seq[Node]", "member" : "scala.xml.MetaData.apply", "link" : "scala\/xml\/UnprefixedAttribute.html#apply(namespace_uri:String,owner:scala.xml.Node,key:String):scala.collection.Seq[scala.xml.Node]", "kind" : "final def"}, {"label" : "append", "tail" : "(updates: MetaData, scope: NamespaceBinding): MetaData", "member" : "scala.xml.MetaData.append", "link" : "scala\/xml\/UnprefixedAttribute.html#append(updates:scala.xml.MetaData,scope:scala.xml.NamespaceBinding):scala.xml.MetaData", "kind" : "def"}, {"label" : "xml_!=", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_!=", "link" : "scala\/xml\/UnprefixedAttribute.html#xml_!=(other:Any):Boolean", "kind" : "final def"}, {"label" : "xml_==", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.xml_==", "link" : "scala\/xml\/UnprefixedAttribute.html#xml_==(other:Any):Boolean", "kind" : "final def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "scala.xml.Equality.equals", "link" : "scala\/xml\/UnprefixedAttribute.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.xml.Equality.hashCode", "link" : "scala\/xml\/UnprefixedAttribute.html#hashCode():Int", "kind" : "def"}, {"label" : "strict_!=", "tail" : "(other: Equality): Boolean", "member" : "scala.xml.Equality.strict_!=", "link" : "scala\/xml\/UnprefixedAttribute.html#strict_!=(other:scala.xml.Equality):Boolean", "kind" : "def"}, {"label" : "lazyZip", "tail" : "(that: collection.Iterable[B]): LazyZip2[MetaData, B, UnprefixedAttribute.this.type]", "member" : "scala.collection.Iterable.lazyZip", "link" : "scala\/xml\/UnprefixedAttribute.html#lazyZip[B](that:Iterable[B]):scala.collection.LazyZip2[A,B,Iterable.this.type]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.Iterable.stringPrefix", "link" : "scala\/xml\/UnprefixedAttribute.html#stringPrefix:String", "kind" : "def"}, {"label" : "className", "tail" : "(): String", "member" : "scala.collection.Iterable.className", "link" : "scala\/xml\/UnprefixedAttribute.html#className:String", "kind" : "def"}, {"label" : "seq", "tail" : "(): UnprefixedAttribute.this.type", "member" : "scala.collection.Iterable.seq", "link" : "scala\/xml\/UnprefixedAttribute.html#seq:Iterable.this.type", "kind" : "def"}, {"label" : "iterableFactory", "tail" : "(): IterableFactory[collection.Iterable]", "member" : "scala.collection.Iterable.iterableFactory", "link" : "scala\/xml\/UnprefixedAttribute.html#iterableFactory:scala.collection.IterableFactory[Iterable]", "kind" : "def"}, {"label" : "coll", "tail" : "(): UnprefixedAttribute.this.type", "member" : "scala.collection.Iterable.coll", "link" : "scala\/xml\/UnprefixedAttribute.html#coll:Iterable.this.type", "kind" : "final def"}, {"label" : "toIterable", "tail" : "(): UnprefixedAttribute.this.type", "member" : "scala.collection.Iterable.toIterable", "link" : "scala\/xml\/UnprefixedAttribute.html#toIterable:Iterable.this.type", "kind" : "final def"}, {"label" : "empty", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableFactoryDefaults.empty", "link" : "scala\/xml\/UnprefixedAttribute.html#empty:CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "newSpecificBuilder", "tail" : "(): Builder[MetaData, collection.Iterable[MetaData]]", "member" : "scala.collection.IterableFactoryDefaults.newSpecificBuilder", "link" : "scala\/xml\/UnprefixedAttribute.html#newSpecificBuilder:scala.collection.mutable.Builder[A@scala.annotation.unchecked.uncheckedVariance,CC[A@scala.annotation.unchecked.uncheckedVariance]]", "kind" : "def"}, {"label" : "fromSpecific", "tail" : "(coll: collection.IterableOnce[MetaData]): collection.Iterable[MetaData]", "member" : "scala.collection.IterableFactoryDefaults.fromSpecific", "link" : "scala\/xml\/UnprefixedAttribute.html#fromSpecific(coll:scala.collection.IterableOnce[A@scala.annotation.unchecked.uncheckedVariance]):CC[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "++:", "tail" : "(that: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.++:", "link" : "scala\/xml\/UnprefixedAttribute.html#++:[B>:A](that:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (MetaData) => U): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.tapEach", "link" : "scala\/xml\/UnprefixedAttribute.html#tapEach[U](f:A=>U):C", "kind" : "def"}, {"label" : "inits", "tail" : "(): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.inits", "link" : "scala\/xml\/UnprefixedAttribute.html#inits:Iterator[C]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.tails", "link" : "scala\/xml\/UnprefixedAttribute.html#tails:Iterator[C]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (MetaData) => (A1, A2, A3)): (collection.Iterable[A1], collection.Iterable[A2], collection.Iterable[A3])", "member" : "scala.collection.IterableOps.unzip3", "link" : "scala\/xml\/UnprefixedAttribute.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (MetaData) => (A1, A2)): (collection.Iterable[A1], collection.Iterable[A2])", "member" : "scala.collection.IterableOps.unzip", "link" : "scala\/xml\/UnprefixedAttribute.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.Iterable[B], thisElem: A1, thatElem: B): collection.Iterable[(A1, B)]", "member" : "scala.collection.IterableOps.zipAll", "link" : "scala\/xml\/UnprefixedAttribute.html#zipAll[A1>:A,B](that:Iterable[B],thisElem:A1,thatElem:B):CC[(A1,B)]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.Iterable[(MetaData, Int)]", "member" : "scala.collection.IterableOps.zipWithIndex", "link" : "scala\/xml\/UnprefixedAttribute.html#zipWithIndex:CC[(A@scala.annotation.unchecked.uncheckedVariance,Int)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.Iterable[(MetaData, B)]", "member" : "scala.collection.IterableOps.zip", "link" : "scala\/xml\/UnprefixedAttribute.html#zip[B](that:scala.collection.IterableOnce[B]):CC[(A@scala.annotation.unchecked.uncheckedVariance,B)]", "kind" : "def"}, {"label" : "++", "tail" : "(suffix: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.++", "link" : "scala\/xml\/UnprefixedAttribute.html#++[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(suffix: collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.concat", "link" : "scala\/xml\/UnprefixedAttribute.html#concat[B>:A](suffix:scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "partitionMap", "tail" : "(f: (MetaData) => Either[A1, A2]): (collection.Iterable[A1], collection.Iterable[A2])", "member" : "scala.collection.IterableOps.partitionMap", "link" : "scala\/xml\/UnprefixedAttribute.html#partitionMap[A1,A2](f:A=>Either[A1,A2]):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[MetaData, B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.collect", "link" : "scala\/xml\/UnprefixedAttribute.html#collect[B](pf:PartialFunction[A,B]):CC[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asIterable: (MetaData) => collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.flatten", "link" : "scala\/xml\/UnprefixedAttribute.html#flatten[B](implicitasIterable:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (MetaData) => collection.IterableOnce[B]): collection.Iterable[B]", "member" : "scala.collection.IterableOps.flatMap", "link" : "scala\/xml\/UnprefixedAttribute.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (MetaData) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.map", "link" : "scala\/xml\/UnprefixedAttribute.html#map[B](f:A=>B):CC[B]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (MetaData, B) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scanRight", "link" : "scala\/xml\/UnprefixedAttribute.html#scanRight[B](z:B)(op:(A,B)=>B):CC[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, MetaData) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scanLeft", "link" : "scala\/xml\/UnprefixedAttribute.html#scanLeft[B](z:B)(op:(B,A)=>B):CC[B]", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) => B): collection.Iterable[B]", "member" : "scala.collection.IterableOps.scan", "link" : "scala\/xml\/UnprefixedAttribute.html#scan[B>:A](z:B)(op:(B,B)=>B):CC[B]", "kind" : "def"}, {"label" : "groupMapReduce", "tail" : "(key: (MetaData) => K)(f: (MetaData) => B)(reduce: (B, B) => B): Map[K, B]", "member" : "scala.collection.IterableOps.groupMapReduce", "link" : "scala\/xml\/UnprefixedAttribute.html#groupMapReduce[K,B](key:A=>K)(f:A=>B)(reduce:(B,B)=>B):scala.collection.immutable.Map[K,B]", "kind" : "def"}, {"label" : "groupMap", "tail" : "(key: (MetaData) => K)(f: (MetaData) => B): Map[K, collection.Iterable[B]]", "member" : "scala.collection.IterableOps.groupMap", "link" : "scala\/xml\/UnprefixedAttribute.html#groupMap[K,B](key:A=>K)(f:A=>B):scala.collection.immutable.Map[K,CC[B]]", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (MetaData) => K): Map[K, collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.groupBy", "link" : "scala\/xml\/UnprefixedAttribute.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,C]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.slice", "link" : "scala\/xml\/UnprefixedAttribute.html#slice(from:Int,until:Int):C", "kind" : "def"}, {"label" : "init", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.init", "link" : "scala\/xml\/UnprefixedAttribute.html#init:C", "kind" : "def"}, {"label" : "tail", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.tail", "link" : "scala\/xml\/UnprefixedAttribute.html#tail:C", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/UnprefixedAttribute.html#sliding(size:Int,step:Int):Iterator[C]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.sliding", "link" : "scala\/xml\/UnprefixedAttribute.html#sliding(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[collection.Iterable[MetaData]]", "member" : "scala.collection.IterableOps.grouped", "link" : "scala\/xml\/UnprefixedAttribute.html#grouped(size:Int):Iterator[C]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.dropWhile", "link" : "scala\/xml\/UnprefixedAttribute.html#dropWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.dropRight", "link" : "scala\/xml\/UnprefixedAttribute.html#dropRight(n:Int):C", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.drop", "link" : "scala\/xml\/UnprefixedAttribute.html#drop(n:Int):C", "kind" : "def"}, {"label" : "span", "tail" : "(p: (MetaData) => Boolean): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.span", "link" : "scala\/xml\/UnprefixedAttribute.html#span(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.takeWhile", "link" : "scala\/xml\/UnprefixedAttribute.html#takeWhile(p:A=>Boolean):C", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.takeRight", "link" : "scala\/xml\/UnprefixedAttribute.html#takeRight(n:Int):C", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.take", "link" : "scala\/xml\/UnprefixedAttribute.html#take(n:Int):C", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.splitAt", "link" : "scala\/xml\/UnprefixedAttribute.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (MetaData) => Boolean): (collection.Iterable[MetaData], collection.Iterable[MetaData])", "member" : "scala.collection.IterableOps.partition", "link" : "scala\/xml\/UnprefixedAttribute.html#partition(p:A=>Boolean):(C,C)", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (MetaData) => Boolean): WithFilter[MetaData, collection.Iterable]", "member" : "scala.collection.IterableOps.withFilter", "link" : "scala\/xml\/UnprefixedAttribute.html#withFilter(p:A=>Boolean):scala.collection.WithFilter[A,CC]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(pred: (MetaData) => Boolean): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.filterNot", "link" : "scala\/xml\/UnprefixedAttribute.html#filterNot(pred:A=>Boolean):C", "kind" : "def"}, {"label" : "transpose", "tail" : "(asIterable: (MetaData) => collection.Iterable[B]): collection.Iterable[collection.Iterable[B]]", "member" : "scala.collection.IterableOps.transpose", "link" : "scala\/xml\/UnprefixedAttribute.html#transpose[B](implicitasIterable:A=>Iterable[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): View[MetaData]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/UnprefixedAttribute.html#view(from:Int,until:Int):scala.collection.View[A]", "kind" : "def"}, {"label" : "sizeCompare", "tail" : "(that: collection.Iterable[_]): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "scala\/xml\/UnprefixedAttribute.html#sizeCompare(that:Iterable[_]):Int", "kind" : "def"}, {"label" : "sizeIs", "tail" : "(): SizeCompareOps", "member" : "scala.collection.IterableOps.sizeIs", "link" : "scala\/xml\/UnprefixedAttribute.html#sizeIs:scala.collection.IterableOps.SizeCompareOps", "kind" : "final def"}, {"label" : "sizeCompare", "tail" : "(otherSize: Int): Int", "member" : "scala.collection.IterableOps.sizeCompare", "link" : "scala\/xml\/UnprefixedAttribute.html#sizeCompare(otherSize:Int):Int", "kind" : "def"}, {"label" : "view", "tail" : "(): View[MetaData]", "member" : "scala.collection.IterableOps.view", "link" : "scala\/xml\/UnprefixedAttribute.html#view:scala.collection.View[A]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[MetaData]", "member" : "scala.collection.IterableOps.lastOption", "link" : "scala\/xml\/UnprefixedAttribute.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): MetaData", "member" : "scala.collection.IterableOps.last", "link" : "scala\/xml\/UnprefixedAttribute.html#last:A", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[MetaData]", "member" : "scala.collection.IterableOps.headOption", "link" : "scala\/xml\/UnprefixedAttribute.html#headOption:Option[A]", "kind" : "def"}, {"label" : "head", "tail" : "(): MetaData", "member" : "scala.collection.IterableOps.head", "link" : "scala\/xml\/UnprefixedAttribute.html#head:A", "kind" : "def"}, {"label" : "companion", "tail" : "(): IterableFactory[collection.Iterable]", "member" : "scala.collection.IterableOps.companion", "link" : "scala\/xml\/UnprefixedAttribute.html#companion:scala.collection.IterableFactory[CC]", "kind" : "def"}, {"label" : "repr", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOps.repr", "link" : "scala\/xml\/UnprefixedAttribute.html#repr:C", "kind" : "final def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOps.isTraversableAgain", "link" : "scala\/xml\/UnprefixedAttribute.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[MetaData]", "member" : "scala.collection.IterableOps.toTraversable", "link" : "scala\/xml\/UnprefixedAttribute.html#toTraversable:scala.collection.Traversable[A]", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[MetaData]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/UnprefixedAttribute.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/UnprefixedAttribute.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/UnprefixedAttribute.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[MetaData]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/UnprefixedAttribute.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[MetaData]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/UnprefixedAttribute.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): collection.immutable.Seq[MetaData]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "scala\/xml\/UnprefixedAttribute.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/UnprefixedAttribute.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[MetaData, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/UnprefixedAttribute.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[MetaData]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/UnprefixedAttribute.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[MetaData]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/UnprefixedAttribute.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[MetaData]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/UnprefixedAttribute.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[MetaData, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/UnprefixedAttribute.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/UnprefixedAttribute.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/UnprefixedAttribute.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/UnprefixedAttribute.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/UnprefixedAttribute.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/UnprefixedAttribute.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/UnprefixedAttribute.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (MetaData, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/UnprefixedAttribute.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, MetaData) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/UnprefixedAttribute.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[MetaData, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/UnprefixedAttribute.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/UnprefixedAttribute.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/UnprefixedAttribute.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/UnprefixedAttribute.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (MetaData) => B)(cmp: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/UnprefixedAttribute.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/UnprefixedAttribute.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/UnprefixedAttribute.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/UnprefixedAttribute.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): MetaData", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/UnprefixedAttribute.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/UnprefixedAttribute.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/UnprefixedAttribute.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/UnprefixedAttribute.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/UnprefixedAttribute.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/UnprefixedAttribute.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/UnprefixedAttribute.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/UnprefixedAttribute.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isEmpty", "link" : "scala\/xml\/UnprefixedAttribute.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (MetaData, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/UnprefixedAttribute.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, MetaData) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/UnprefixedAttribute.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/UnprefixedAttribute.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/UnprefixedAttribute.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/UnprefixedAttribute.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/UnprefixedAttribute.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/UnprefixedAttribute.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/UnprefixedAttribute.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/UnprefixedAttribute.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (MetaData, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/UnprefixedAttribute.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, MetaData) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/UnprefixedAttribute.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (MetaData) => Boolean): Option[MetaData]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/UnprefixedAttribute.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (MetaData) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/UnprefixedAttribute.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (MetaData) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/UnprefixedAttribute.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (MetaData) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/UnprefixedAttribute.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (MetaData) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/UnprefixedAttribute.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.hasDefiniteSize", "link" : "scala\/xml\/UnprefixedAttribute.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/UnprefixedAttribute.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[MetaData, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/UnprefixedAttribute.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/UnprefixedAttribute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/UnprefixedAttribute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/UnprefixedAttribute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/UnprefixedAttribute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/UnprefixedAttribute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/UnprefixedAttribute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/UnprefixedAttribute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/UnprefixedAttribute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/UnprefixedAttribute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/UnprefixedAttribute.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/UnprefixedAttribute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/UnprefixedAttribute.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/UnprefixedAttribute.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/UnprefixedAttribute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/UnprefixedAttribute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/UnprefixedAttribute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(x: UnprefixedAttribute): Some[(String, collection.Seq[Node], MetaData)]", "member" : "scala.xml.UnprefixedAttribute.unapply", "link" : "scala\/xml\/UnprefixedAttribute$.html#unapply(x:scala.xml.UnprefixedAttribute):Some[(String,scala.collection.Seq[scala.xml.Node],scala.xml.MetaData)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/UnprefixedAttribute$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/UnprefixedAttribute$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/UnprefixedAttribute$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/UnprefixedAttribute$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/UnprefixedAttribute$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/UnprefixedAttribute$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/UnprefixedAttribute$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/UnprefixedAttribute$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/UnprefixedAttribute$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/UnprefixedAttribute$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/UnprefixedAttribute$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/UnprefixedAttribute$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/UnprefixedAttribute$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/UnprefixedAttribute$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/UnprefixedAttribute$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/UnprefixedAttribute$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/UnprefixedAttribute$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/UnprefixedAttribute$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/UnprefixedAttribute$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/UnprefixedAttribute.html", "kind" : "class"}, {"name" : "scala.xml.Utility", "shortDescription" : "The Utility object provides utility functions for processing instancesof bound and not bound XML classes, as well as escaping text nodes.", "object" : "scala\/xml\/Utility$.html", "members_object" : [{"label" : "parseCharRef", "tail" : "(ch: () => Char, nextch: () => Unit, reportSyntaxError: (String) => Unit, reportTruncatedError: (String) => Unit): String", "member" : "scala.xml.Utility.parseCharRef", "link" : "scala\/xml\/Utility$.html#parseCharRef(ch:()=>Char,nextch:()=>Unit,reportSyntaxError:String=>Unit,reportTruncatedError:String=>Unit):String", "kind" : "def"}, {"label" : "parseAttributeValue", "tail" : "(value: String): collection.Seq[Node]", "member" : "scala.xml.Utility.parseAttributeValue", "link" : "scala\/xml\/Utility$.html#parseAttributeValue(value:String):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "checkAttributeValue", "tail" : "(value: String): String", "member" : "scala.xml.Utility.checkAttributeValue", "link" : "scala\/xml\/Utility$.html#checkAttributeValue(value:String):String", "kind" : "def"}, {"label" : "getName", "tail" : "(s: String, index: Int): String", "member" : "scala.xml.Utility.getName", "link" : "scala\/xml\/Utility$.html#getName(s:String,index:Int):String", "kind" : "def"}, {"label" : "appendEscapedQuoted", "tail" : "(s: String, sb: StringBuilder): StringBuilder", "member" : "scala.xml.Utility.appendEscapedQuoted", "link" : "scala\/xml\/Utility$.html#appendEscapedQuoted(s:String,sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "appendQuoted", "tail" : "(s: String, sb: StringBuilder): collection.mutable.StringBuilder", "member" : "scala.xml.Utility.appendQuoted", "link" : "scala\/xml\/Utility$.html#appendQuoted(s:String,sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "appendQuoted", "tail" : "(s: String): String", "member" : "scala.xml.Utility.appendQuoted", "link" : "scala\/xml\/Utility$.html#appendQuoted(s:String):String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(pre: String, label: String, attribHashCode: Int, scpeHash: Int, children: collection.Seq[Node]): Int", "member" : "scala.xml.Utility.hashCode", "link" : "scala\/xml\/Utility$.html#hashCode(pre:String,label:String,attribHashCode:Int,scpeHash:Int,children:scala.collection.Seq[scala.xml.Node]):Int", "kind" : "def"}, {"label" : "prefix", "tail" : "(name: String): Option[String]", "member" : "scala.xml.Utility.prefix", "link" : "scala\/xml\/Utility$.html#prefix(name:String):Option[String]", "kind" : "final def"}, {"label" : "sequenceToXML", "tail" : "(children: collection.Seq[Node], pscope: NamespaceBinding, sb: StringBuilder, stripComments: Boolean, decodeEntities: Boolean, preserveWhitespace: Boolean, minimizeTags: MinimizeMode.Value): Unit", "member" : "scala.xml.Utility.sequenceToXML", "link" : "scala\/xml\/Utility$.html#sequenceToXML(children:scala.collection.Seq[scala.xml.Node],pscope:scala.xml.NamespaceBinding,sb:StringBuilder,stripComments:Boolean,decodeEntities:Boolean,preserveWhitespace:Boolean,minimizeTags:scala.xml.MinimizeMode.Value):Unit", "kind" : "def"}, {"label" : "serialize", "tail" : "(x: Node, pscope: NamespaceBinding, sb: StringBuilder, stripComments: Boolean, decodeEntities: Boolean, preserveWhitespace: Boolean, minimizeTags: MinimizeMode.Value): StringBuilder", "member" : "scala.xml.Utility.serialize", "link" : "scala\/xml\/Utility$.html#serialize(x:scala.xml.Node,pscope:scala.xml.NamespaceBinding,sb:StringBuilder,stripComments:Boolean,decodeEntities:Boolean,preserveWhitespace:Boolean,minimizeTags:scala.xml.MinimizeMode.Value):StringBuilder", "kind" : "def"}, {"label" : "toXML", "tail" : "(x: Node, pscope: NamespaceBinding, sb: StringBuilder, stripComments: Boolean, decodeEntities: Boolean, preserveWhitespace: Boolean, minimizeTags: Boolean): StringBuilder", "member" : "scala.xml.Utility.toXML", "link" : "scala\/xml\/Utility$.html#toXML(x:scala.xml.Node,pscope:scala.xml.NamespaceBinding,sb:StringBuilder,stripComments:Boolean,decodeEntities:Boolean,preserveWhitespace:Boolean,minimizeTags:Boolean):StringBuilder", "kind" : "def"}, {"label" : "collectNamespaces", "tail" : "(n: Node, set: Set[String]): Unit", "member" : "scala.xml.Utility.collectNamespaces", "link" : "scala\/xml\/Utility$.html#collectNamespaces(n:scala.xml.Node,set:scala.collection.mutable.Set[String]):Unit", "kind" : "def"}, {"label" : "collectNamespaces", "tail" : "(nodes: collection.Seq[Node]): Set[String]", "member" : "scala.xml.Utility.collectNamespaces", "link" : "scala\/xml\/Utility$.html#collectNamespaces(nodes:scala.collection.Seq[scala.xml.Node]):scala.collection.mutable.Set[String]", "kind" : "def"}, {"label" : "unescape", "tail" : "(ref: String, s: StringBuilder): StringBuilder", "member" : "scala.xml.Utility.unescape", "link" : "scala\/xml\/Utility$.html#unescape(ref:String,s:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "escape", "tail" : "(text: String, s: StringBuilder): StringBuilder", "member" : "scala.xml.Utility.escape", "link" : "scala\/xml\/Utility$.html#escape(text:String,s:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "Escapes", "tail" : "", "member" : "scala.xml.Utility.Escapes", "link" : "scala\/xml\/Utility$.html#Escapes", "kind" : "object"}, {"label" : "escape", "tail" : "(text: String): String", "member" : "scala.xml.Utility.escape", "link" : "scala\/xml\/Utility$.html#escape(text:String):String", "kind" : "final def"}, {"label" : "sort", "tail" : "(n: Node): Node", "member" : "scala.xml.Utility.sort", "link" : "scala\/xml\/Utility$.html#sort(n:scala.xml.Node):scala.xml.Node", "kind" : "def"}, {"label" : "sort", "tail" : "(md: MetaData): MetaData", "member" : "scala.xml.Utility.sort", "link" : "scala\/xml\/Utility$.html#sort(md:scala.xml.MetaData):scala.xml.MetaData", "kind" : "def"}, {"label" : "trimProper", "tail" : "(x: Node): collection.Seq[Node]", "member" : "scala.xml.Utility.trimProper", "link" : "scala\/xml\/Utility$.html#trimProper(x:scala.xml.Node):scala.collection.Seq[scala.xml.Node]", "kind" : "def"}, {"label" : "trim", "tail" : "(x: Node): Node", "member" : "scala.xml.Utility.trim", "link" : "scala\/xml\/Utility$.html#trim(x:scala.xml.Node):scala.xml.Node", "kind" : "def"}, {"label" : "implicitSbToString", "tail" : "(sb: StringBuilder): String", "member" : "scala.xml.Utility.implicitSbToString", "link" : "scala\/xml\/Utility$.html#implicitSbToString(sb:StringBuilder):String", "kind" : "implicit def"}, {"label" : "SU", "tail" : ": Char('\\u001A')", "member" : "scala.xml.Utility.SU", "link" : "scala\/xml\/Utility$.html#SU:Char('\\u001A')", "kind" : "final val"}, {"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/Utility$.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/Utility$.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/Utility$.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/Utility$.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/Utility$.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/Utility$.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/Utility$.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/Utility$.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/Utility$.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/Utility$.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/Utility$.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Utility$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Utility$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Utility$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Utility$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Utility$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Utility$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Utility$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Utility$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Utility$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Utility$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Utility$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Utility$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Utility$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Utility$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/Utility$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/Utility$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Utility$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Utility$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Utility$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.Xhtml", "shortDescription" : "", "object" : "scala\/xml\/Xhtml$.html", "members_object" : [{"label" : "sequenceToXML", "tail" : "(children: collection.Seq[Node], pscope: NamespaceBinding, sb: StringBuilder, stripComments: Boolean, decodeEntities: Boolean, preserveWhitespace: Boolean, minimizeTags: Boolean): Unit", "member" : "scala.xml.Xhtml.sequenceToXML", "link" : "scala\/xml\/Xhtml$.html#sequenceToXML(children:scala.collection.Seq[scala.xml.Node],pscope:scala.xml.NamespaceBinding,sb:StringBuilder,stripComments:Boolean,decodeEntities:Boolean,preserveWhitespace:Boolean,minimizeTags:Boolean):Unit", "kind" : "def"}, {"label" : "toXhtml", "tail" : "(x: Node, pscope: NamespaceBinding, sb: StringBuilder, stripComments: Boolean, decodeEntities: Boolean, preserveWhitespace: Boolean, minimizeTags: Boolean): Unit", "member" : "scala.xml.Xhtml.toXhtml", "link" : "scala\/xml\/Xhtml$.html#toXhtml(x:scala.xml.Node,pscope:scala.xml.NamespaceBinding,sb:StringBuilder,stripComments:Boolean,decodeEntities:Boolean,preserveWhitespace:Boolean,minimizeTags:Boolean):Unit", "kind" : "def"}, {"label" : "toXhtml", "tail" : "(nodeSeq: NodeSeq): String", "member" : "scala.xml.Xhtml.toXhtml", "link" : "scala\/xml\/Xhtml$.html#toXhtml(nodeSeq:scala.xml.NodeSeq):String", "kind" : "def"}, {"label" : "toXhtml", "tail" : "(node: Node): String", "member" : "scala.xml.Xhtml.toXhtml", "link" : "scala\/xml\/Xhtml$.html#toXhtml(node:scala.xml.Node):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/Xhtml$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/Xhtml$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/Xhtml$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/Xhtml$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/Xhtml$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/Xhtml$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/Xhtml$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Xhtml$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Xhtml$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/Xhtml$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/Xhtml$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/Xhtml$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/Xhtml$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/Xhtml$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/Xhtml$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/Xhtml$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/Xhtml$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/Xhtml$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/Xhtml$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.XML", "shortDescription" : "The object XML provides constants, and functions to load and save XML elements.", "object" : "scala\/xml\/XML$.html", "members_object" : [{"label" : "write", "tail" : "(w: Writer, node: Node, enc: String, xmlDecl: Boolean, doctype: DocType, minimizeTags: MinimizeMode.Value): Unit", "member" : "scala.xml.XML.write", "link" : "scala\/xml\/XML$.html#write(w:java.io.Writer,node:scala.xml.Node,enc:String,xmlDecl:Boolean,doctype:scala.xml.dtd.DocType,minimizeTags:scala.xml.MinimizeMode.Value):Unit", "kind" : "final def"}, {"label" : "save", "tail" : "(filename: String, node: Node, enc: String, xmlDecl: Boolean, doctype: DocType): Unit", "member" : "scala.xml.XML.save", "link" : "scala\/xml\/XML$.html#save(filename:String,node:scala.xml.Node,enc:String,xmlDecl:Boolean,doctype:scala.xml.dtd.DocType):Unit", "kind" : "final def"}, {"label" : "withSAXParser", "tail" : "(p: SAXParser): XMLLoader[Elem]", "member" : "scala.xml.XML.withSAXParser", "link" : "scala\/xml\/XML$.html#withSAXParser(p:scala.xml.SAXParser):scala.xml.factory.XMLLoader[scala.xml.Elem]", "kind" : "def"}, {"label" : "encoding", "tail" : ": String", "member" : "scala.xml.XML.encoding", "link" : "scala\/xml\/XML$.html#encoding:String", "kind" : "val"}, {"label" : "lang", "tail" : ": String", "member" : "scala.xml.XML.lang", "link" : "scala\/xml\/XML$.html#lang:String", "kind" : "val"}, {"label" : "space", "tail" : ": String", "member" : "scala.xml.XML.space", "link" : "scala\/xml\/XML$.html#space:String", "kind" : "val"}, {"label" : "preserve", "tail" : ": String", "member" : "scala.xml.XML.preserve", "link" : "scala\/xml\/XML$.html#preserve:String", "kind" : "val"}, {"label" : "namespace", "tail" : ": String", "member" : "scala.xml.XML.namespace", "link" : "scala\/xml\/XML$.html#namespace:String", "kind" : "val"}, {"label" : "xmlns", "tail" : ": String", "member" : "scala.xml.XML.xmlns", "link" : "scala\/xml\/XML$.html#xmlns:String", "kind" : "val"}, {"label" : "xml", "tail" : ": String", "member" : "scala.xml.XML.xml", "link" : "scala\/xml\/XML$.html#xml:String", "kind" : "val"}, {"label" : "loadString", "tail" : "(string: String): Elem", "member" : "scala.xml.factory.XMLLoader.loadString", "link" : "scala\/xml\/XML$.html#loadString(string:String):T", "kind" : "def"}, {"label" : "load", "tail" : "(url: URL): Elem", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/XML$.html#load(url:java.net.URL):T", "kind" : "def"}, {"label" : "load", "tail" : "(source: InputSource): Elem", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/XML$.html#load(source:scala.xml.InputSource):T", "kind" : "def"}, {"label" : "load", "tail" : "(sysID: String): Elem", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/XML$.html#load(sysID:String):T", "kind" : "def"}, {"label" : "load", "tail" : "(reader: Reader): Elem", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/XML$.html#load(reader:java.io.Reader):T", "kind" : "def"}, {"label" : "load", "tail" : "(is: InputStream): Elem", "member" : "scala.xml.factory.XMLLoader.load", "link" : "scala\/xml\/XML$.html#load(is:java.io.InputStream):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(name: String): Elem", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/XML$.html#loadFile(name:String):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(fd: FileDescriptor): Elem", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/XML$.html#loadFile(fd:java.io.FileDescriptor):T", "kind" : "def"}, {"label" : "loadFile", "tail" : "(file: File): Elem", "member" : "scala.xml.factory.XMLLoader.loadFile", "link" : "scala\/xml\/XML$.html#loadFile(file:java.io.File):T", "kind" : "def"}, {"label" : "loadXML", "tail" : "(source: InputSource, parser: SAXParser): Elem", "member" : "scala.xml.factory.XMLLoader.loadXML", "link" : "scala\/xml\/XML$.html#loadXML(source:scala.xml.InputSource,parser:scala.xml.SAXParser):T", "kind" : "def"}, {"label" : "parser", "tail" : "(): SAXParser", "member" : "scala.xml.factory.XMLLoader.parser", "link" : "scala\/xml\/XML$.html#parser:scala.xml.SAXParser", "kind" : "def"}, {"label" : "adapter", "tail" : "(): FactoryAdapter", "member" : "scala.xml.factory.XMLLoader.adapter", "link" : "scala\/xml\/XML$.html#adapter:scala.xml.parsing.FactoryAdapter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/XML$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/XML$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/XML$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/XML$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/XML$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/XML$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/XML$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/XML$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/XML$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/XML$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/XML$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/XML$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/XML$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/XML$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/XML$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/XML$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/XML$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/XML$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/XML$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scala.xml.dtd" : [{"name" : "scala.xml.dtd.ANY", "shortDescription" : "", "object" : "scala\/xml\/dtd\/ANY$.html", "members_object" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ANY.buildString", "link" : "scala\/xml\/dtd\/ANY$.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/ANY$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "scala\/xml\/dtd\/ANY$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.ContentModel.toString", "link" : "scala\/xml\/dtd\/ANY$.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ANY$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ANY$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ANY$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ANY$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ANY$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ANY$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ANY$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ANY$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ANY$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ANY$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ANY$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ANY$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ANY$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/ANY$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ANY$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ANY$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ANY$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.dtd.AttListDecl", "shortDescription" : "", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.AttListDecl.buildString", "link" : "scala\/xml\/dtd\/AttListDecl.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.AttListDecl#<init>", "error" : "unsupported entity"}, {"label" : "attrs", "tail" : ": List[AttrDecl]", "member" : "scala.xml.dtd.AttListDecl.attrs", "link" : "scala\/xml\/dtd\/AttListDecl.html#attrs:List[scala.xml.dtd.AttrDecl]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scala.xml.dtd.AttListDecl.name", "link" : "scala\/xml\/dtd\/AttListDecl.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/AttListDecl.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.MarkupDecl.toString", "link" : "scala\/xml\/dtd\/AttListDecl.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/AttListDecl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/AttListDecl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/AttListDecl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/AttListDecl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/AttListDecl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/AttListDecl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/AttListDecl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/AttListDecl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/AttListDecl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/AttListDecl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/AttListDecl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/AttListDecl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/AttListDecl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/AttListDecl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/AttListDecl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/AttListDecl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/AttListDecl.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.AttrDecl", "shortDescription" : "an attribute declaration.", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.AttrDecl.buildString", "link" : "scala\/xml\/dtd\/AttrDecl.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.AttrDecl.toString", "link" : "scala\/xml\/dtd\/AttrDecl.html#toString():String", "kind" : "def"}, {"member" : "scala.xml.dtd.AttrDecl#<init>", "error" : "unsupported entity"}, {"label" : "default", "tail" : ": DefaultDecl", "member" : "scala.xml.dtd.AttrDecl.default", "link" : "scala\/xml\/dtd\/AttrDecl.html#default:scala.xml.dtd.DefaultDecl", "kind" : "val"}, {"label" : "tpe", "tail" : ": String", "member" : "scala.xml.dtd.AttrDecl.tpe", "link" : "scala\/xml\/dtd\/AttrDecl.html#tpe:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scala.xml.dtd.AttrDecl.name", "link" : "scala\/xml\/dtd\/AttrDecl.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/AttrDecl.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/AttrDecl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/AttrDecl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/AttrDecl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/AttrDecl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/AttrDecl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/AttrDecl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/AttrDecl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/AttrDecl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/AttrDecl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/AttrDecl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/AttrDecl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/AttrDecl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/AttrDecl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/AttrDecl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/AttrDecl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/AttrDecl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/AttrDecl.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.ContentModel", "shortDescription" : "", "object" : "scala\/xml\/dtd\/ContentModel$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.ContentModel.toString", "link" : "scala\/xml\/dtd\/ContentModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ContentModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ContentModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ContentModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ContentModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ContentModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ContentModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ContentModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ContentModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ContentModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ContentModel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ContentModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ContentModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ContentModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/ContentModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/ContentModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ContentModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ContentModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ContentModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ContentModel.buildString", "link" : "scala\/xml\/dtd\/ContentModel.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "abstract def"}], "members_object" : [{"label" : "Wildcard", "tail" : "", "member" : "scala.xml.dtd.impl.WordExp.Wildcard", "link" : "scala\/xml\/dtd\/ContentModel$.html#WildcardextendsWordExp.this.RegExpwithProductwithSerializable", "kind" : "case class"}, {"label" : "Letter", "tail" : "", "member" : "scala.xml.dtd.impl.WordExp.Letter", "link" : "scala\/xml\/dtd\/ContentModel$.html#LetterextendsWordExp.this.RegExpwithProductwithSerializable", "kind" : "case class"}, {"label" : "Label", "tail" : "", "member" : "scala.xml.dtd.impl.WordExp.Label", "link" : "scala\/xml\/dtd\/ContentModel$.html#LabelextendsAnyRef", "kind" : "abstract class"}, {"label" : "Meta", "tail" : "", "member" : "scala.xml.dtd.impl.Base.Meta", "link" : "scala\/xml\/dtd\/ContentModel$.html#MetaextendsBase.this.RegExp", "kind" : "class"}, {"label" : "Eps", "tail" : "", "member" : "scala.xml.dtd.impl.Base.Eps", "link" : "scala\/xml\/dtd\/ContentModel$.html#Eps", "kind" : "object"}, {"label" : "Star", "tail" : "", "member" : "scala.xml.dtd.impl.Base.Star", "link" : "scala\/xml\/dtd\/ContentModel$.html#StarextendsBase.this.RegExpwithProductwithSerializable", "kind" : "case class"}, {"label" : "Sequ", "tail" : "", "member" : "scala.xml.dtd.impl.Base.Sequ", "link" : "scala\/xml\/dtd\/ContentModel$.html#SequextendsBase.this.RegExp", "kind" : "class"}, {"label" : "Sequ", "tail" : "", "member" : "scala.xml.dtd.impl.Base.Sequ", "link" : "scala\/xml\/dtd\/ContentModel$.html#Sequ", "kind" : "object"}, {"label" : "Alt", "tail" : "", "member" : "scala.xml.dtd.impl.Base.Alt", "link" : "scala\/xml\/dtd\/ContentModel$.html#AltextendsBase.this.RegExp", "kind" : "class"}, {"label" : "Alt", "tail" : "", "member" : "scala.xml.dtd.impl.Base.Alt", "link" : "scala\/xml\/dtd\/ContentModel$.html#Alt", "kind" : "object"}, {"label" : "RegExp", "tail" : "", "member" : "scala.xml.dtd.impl.Base.RegExp", "link" : "scala\/xml\/dtd\/ContentModel$.html#RegExpextendsAnyRef", "kind" : "abstract class"}, {"label" : "buildString", "tail" : "(r: RegExp, sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ContentModel.buildString", "link" : "scala\/xml\/dtd\/ContentModel$.html#buildString(r:scala.xml.dtd.ContentModel.RegExp,sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "buildString", "tail" : "(c: ContentModel, sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ContentModel.buildString", "link" : "scala\/xml\/dtd\/ContentModel$.html#buildString(c:scala.xml.dtd.ContentModel,sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "buildString", "tail" : "(r: RegExp): String", "member" : "scala.xml.dtd.ContentModel.buildString", "link" : "scala\/xml\/dtd\/ContentModel$.html#buildString(r:scala.xml.dtd.ContentModel.RegExp):String", "kind" : "def"}, {"label" : "getLabels", "tail" : "(r: RegExp): Set[String]", "member" : "scala.xml.dtd.ContentModel.getLabels", "link" : "scala\/xml\/dtd\/ContentModel$.html#getLabels(r:scala.xml.dtd.ContentModel.RegExp):Set[String]", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): ContentModel", "member" : "scala.xml.dtd.ContentModel.parse", "link" : "scala\/xml\/dtd\/ContentModel$.html#parse(s:String):scala.xml.dtd.ContentModel", "kind" : "def"}, {"label" : "containsText", "tail" : "(cm: ContentModel): Boolean", "member" : "scala.xml.dtd.ContentModel.containsText", "link" : "scala\/xml\/dtd\/ContentModel$.html#containsText(cm:scala.xml.dtd.ContentModel):Boolean", "kind" : "def"}, {"label" : "isMixed", "tail" : "(cm: ContentModel): Boolean", "member" : "scala.xml.dtd.ContentModel.isMixed", "link" : "scala\/xml\/dtd\/ContentModel$.html#isMixed(cm:scala.xml.dtd.ContentModel):Boolean", "kind" : "def"}, {"label" : "ElemName", "tail" : "", "member" : "scala.xml.dtd.ContentModel.ElemName", "link" : "scala\/xml\/dtd\/ContentModel$.html#ElemNameextendsscala.xml.dtd.ContentModel.LabelwithProductwithSerializable", "kind" : "case class"}, {"label" : "Translator", "tail" : "", "member" : "scala.xml.dtd.ContentModel.Translator", "link" : "scala\/xml\/dtd\/ContentModel$.html#Translator", "kind" : "object"}, {"label" : "Translator", "tail" : "", "member" : "scala.xml.dtd.ContentModel.Translator", "link" : "scala\/xml\/dtd\/ContentModel$.html#TranslatorextendsWordBerrySethi", "kind" : "trait"}, {"label" : "_regexpT", "tail" : "", "member" : "scala.xml.dtd.ContentModel._regexpT", "link" : "scala\/xml\/dtd\/ContentModel$.html#_regexpT=scala.xml.dtd.ContentModel.RegExp", "kind" : "type"}, {"label" : "_labelT", "tail" : "", "member" : "scala.xml.dtd.ContentModel._labelT", "link" : "scala\/xml\/dtd\/ContentModel$.html#_labelT=scala.xml.dtd.ContentModel.ElemName", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ContentModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ContentModel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ContentModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ContentModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ContentModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ContentModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ContentModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ContentModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ContentModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ContentModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ContentModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ContentModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/dtd\/ContentModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ContentModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/ContentModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/ContentModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ContentModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ContentModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ContentModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/dtd\/ContentModel.html", "kind" : "object"}, {"name" : "scala.xml.dtd.ContentModelParser", "shortDescription" : "Parser for regexps (content models in DTD element declarations)", "object" : "scala\/xml\/dtd\/ContentModelParser$.html", "members_object" : [{"label" : "atom", "tail" : "(): ContentModel.Letter", "member" : "scala.xml.dtd.ContentModelParser.atom", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#atom:scala.xml.dtd.ContentModel.Letter", "kind" : "def"}, {"label" : "particle", "tail" : "(): ContentModel.RegExp", "member" : "scala.xml.dtd.ContentModelParser.particle", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#particle:scala.xml.dtd.ContentModel.RegExp", "kind" : "def"}, {"label" : "choiceRest", "tail" : "(p: ContentModel.RegExp): ContentModel.Alt", "member" : "scala.xml.dtd.ContentModelParser.choiceRest", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#choiceRest(p:scala.xml.dtd.ContentModel.RegExp):scala.xml.dtd.ContentModel.Alt", "kind" : "def"}, {"label" : "seqRest", "tail" : "(p: ContentModel.RegExp): ContentModel.RegExp", "member" : "scala.xml.dtd.ContentModelParser.seqRest", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#seqRest(p:scala.xml.dtd.ContentModel.RegExp):scala.xml.dtd.ContentModel.RegExp", "kind" : "def"}, {"label" : "regexp", "tail" : "(): ContentModel.RegExp", "member" : "scala.xml.dtd.ContentModelParser.regexp", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#regexp:scala.xml.dtd.ContentModel.RegExp", "kind" : "def"}, {"label" : "sOpt", "tail" : "(): Unit", "member" : "scala.xml.dtd.ContentModelParser.sOpt", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#sOpt():Unit", "kind" : "def"}, {"label" : "contentspec", "tail" : "(): ContentModel", "member" : "scala.xml.dtd.ContentModelParser.contentspec", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#contentspec:scala.xml.dtd.ContentModel", "kind" : "def"}, {"label" : "maybeSuffix", "tail" : "(s: ContentModel.RegExp): ContentModel.RegExp", "member" : "scala.xml.dtd.ContentModelParser.maybeSuffix", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#maybeSuffix(s:scala.xml.dtd.ContentModel.RegExp):scala.xml.dtd.ContentModel.RegExp", "kind" : "def"}, {"label" : "accept", "tail" : "(tok: Int): Unit", "member" : "scala.xml.dtd.ContentModelParser.accept", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#accept(tok:Int):Unit", "kind" : "def"}, {"label" : "parse", "tail" : "(s: String): ContentModel", "member" : "scala.xml.dtd.ContentModelParser.parse", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#parse(s:String):scala.xml.dtd.ContentModel", "kind" : "def"}, {"label" : "name", "tail" : "(): Int", "member" : "scala.xml.dtd.Scanner.name", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#name:Int", "kind" : "final def"}, {"label" : "readToken", "tail" : "(): Int", "member" : "scala.xml.dtd.Scanner.readToken", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#readToken:Int", "kind" : "final def"}, {"label" : "accS", "tail" : "(ds: collection.Seq[Char]): Unit", "member" : "scala.xml.dtd.Scanner.accS", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#accS(ds:scala.collection.Seq[Char]):Unit", "kind" : "final def"}, {"label" : "acc", "tail" : "(d: Char): Unit", "member" : "scala.xml.dtd.Scanner.acc", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#acc(d:Char):Unit", "kind" : "final def"}, {"label" : "next", "tail" : "(): Unit", "member" : "scala.xml.dtd.Scanner.next", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#next():Unit", "kind" : "final def"}, {"label" : "isIdentChar", "tail" : "(): Boolean", "member" : "scala.xml.dtd.Scanner.isIdentChar", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isIdentChar:Boolean", "kind" : "final def"}, {"label" : "nextToken", "tail" : "(): Unit", "member" : "scala.xml.dtd.Scanner.nextToken", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#nextToken():Unit", "kind" : "final def"}, {"label" : "initScanner", "tail" : "(s: String): Unit", "member" : "scala.xml.dtd.Scanner.initScanner", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#initScanner(s:String):Unit", "kind" : "final def"}, {"label" : "value", "tail" : ": String", "member" : "scala.xml.dtd.Scanner.value", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#value:String", "kind" : "var"}, {"label" : "token", "tail" : ": Int", "member" : "scala.xml.dtd.Scanner.token", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#token:Int", "kind" : "var"}, {"label" : "ENDCH", "tail" : ": Char('\\u0000')", "member" : "scala.xml.dtd.Scanner.ENDCH", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#ENDCH:Char('\\u0000')", "kind" : "final val"}, {"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "token2string", "tail" : "(i: Int): String", "member" : "scala.xml.dtd.Tokens.token2string", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#token2string(i:Int):String", "kind" : "final def"}, {"label" : "S", "tail" : ": Int(13)", "member" : "scala.xml.dtd.Tokens.S", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#S:Int(13)", "kind" : "final val"}, {"label" : "END", "tail" : ": Int(10)", "member" : "scala.xml.dtd.Tokens.END", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#END:Int(10)", "kind" : "final val"}, {"label" : "CHOICE", "tail" : ": Int(9)", "member" : "scala.xml.dtd.Tokens.CHOICE", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#CHOICE:Int(9)", "kind" : "final val"}, {"label" : "OPT", "tail" : ": Int(8)", "member" : "scala.xml.dtd.Tokens.OPT", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#OPT:Int(8)", "kind" : "final val"}, {"label" : "PLUS", "tail" : ": Int(7)", "member" : "scala.xml.dtd.Tokens.PLUS", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#PLUS:Int(7)", "kind" : "final val"}, {"label" : "STAR", "tail" : ": Int(6)", "member" : "scala.xml.dtd.Tokens.STAR", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#STAR:Int(6)", "kind" : "final val"}, {"label" : "COMMA", "tail" : ": Int(5)", "member" : "scala.xml.dtd.Tokens.COMMA", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#COMMA:Int(5)", "kind" : "final val"}, {"label" : "RPAREN", "tail" : ": Int(4)", "member" : "scala.xml.dtd.Tokens.RPAREN", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#RPAREN:Int(4)", "kind" : "final val"}, {"label" : "LPAREN", "tail" : ": Int(3)", "member" : "scala.xml.dtd.Tokens.LPAREN", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#LPAREN:Int(3)", "kind" : "final val"}, {"label" : "NAME", "tail" : ": Int(1)", "member" : "scala.xml.dtd.Tokens.NAME", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#NAME:Int(1)", "kind" : "final val"}, {"label" : "TOKEN_PCDATA", "tail" : ": Int(0)", "member" : "scala.xml.dtd.Tokens.TOKEN_PCDATA", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#TOKEN_PCDATA:Int(0)", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ContentModelParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ContentModelParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.dtd.Decl", "shortDescription" : "XML declarations", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/Decl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/Decl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/Decl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/Decl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/Decl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/Decl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/Decl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/Decl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/Decl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/Decl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/Decl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/Decl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/dtd\/Decl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/Decl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/Decl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/Decl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/Decl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/Decl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/Decl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/dtd\/Decl.html", "kind" : "class"}, {"name" : "scala.xml.dtd.DEFAULT", "shortDescription" : "", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.DEFAULT.buildString", "link" : "scala\/xml\/dtd\/DEFAULT.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.DEFAULT.toString", "link" : "scala\/xml\/dtd\/DEFAULT.html#toString():String", "kind" : "def"}, {"member" : "scala.xml.dtd.DEFAULT#<init>", "error" : "unsupported entity"}, {"label" : "attValue", "tail" : ": String", "member" : "scala.xml.dtd.DEFAULT.attValue", "link" : "scala\/xml\/dtd\/DEFAULT.html#attValue:String", "kind" : "val"}, {"label" : "fixed", "tail" : ": Boolean", "member" : "scala.xml.dtd.DEFAULT.fixed", "link" : "scala\/xml\/dtd\/DEFAULT.html#fixed:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/DEFAULT.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/DEFAULT.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/DEFAULT.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/DEFAULT.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/DEFAULT.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/DEFAULT.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/DEFAULT.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/DEFAULT.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DEFAULT.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DEFAULT.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DEFAULT.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/DEFAULT.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/DEFAULT.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/DEFAULT.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/DEFAULT.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/DEFAULT.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/DEFAULT.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/DEFAULT.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.DefaultDecl", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/DefaultDecl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/DefaultDecl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/DefaultDecl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/DefaultDecl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/DefaultDecl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/DefaultDecl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/DefaultDecl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DefaultDecl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DefaultDecl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DefaultDecl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/DefaultDecl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/DefaultDecl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/dtd\/DefaultDecl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/DefaultDecl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/DefaultDecl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/DefaultDecl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/DefaultDecl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/DefaultDecl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/DefaultDecl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.DefaultDecl.buildString", "link" : "scala\/xml\/dtd\/DefaultDecl.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "abstract def"}], "class" : "scala\/xml\/dtd\/DefaultDecl.html", "kind" : "class"}, {"name" : "scala.xml.dtd.DFAContentModel", "shortDescription" : "", "members_class" : [{"label" : "dfa", "tail" : ": DetWordAutom[ElemName]", "member" : "scala.xml.dtd.DFAContentModel.dfa", "link" : "scala\/xml\/dtd\/DFAContentModel.html#dfa:scala.xml.dtd.impl.DetWordAutom[scala.xml.dtd.ContentModel.ElemName]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.ContentModel.toString", "link" : "scala\/xml\/dtd\/DFAContentModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/DFAContentModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/DFAContentModel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/DFAContentModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/DFAContentModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/DFAContentModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/DFAContentModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/DFAContentModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DFAContentModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DFAContentModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DFAContentModel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/DFAContentModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/DFAContentModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/DFAContentModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/DFAContentModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/DFAContentModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/DFAContentModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/DFAContentModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/DFAContentModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "r", "tail" : "(): ContentModel.RegExp", "member" : "scala.xml.dtd.DFAContentModel.r", "link" : "scala\/xml\/dtd\/DFAContentModel.html#r:scala.xml.dtd.ContentModel.RegExp", "kind" : "abstract def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ContentModel.buildString", "link" : "scala\/xml\/dtd\/DFAContentModel.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "abstract def"}], "class" : "scala\/xml\/dtd\/DFAContentModel.html", "kind" : "class"}, {"name" : "scala.xml.dtd.DocType", "shortDescription" : "An XML node for document type declaration.", "object" : "scala\/xml\/dtd\/DocType$.html", "members_object" : [{"label" : "apply", "tail" : "(name: String): DocType", "member" : "scala.xml.dtd.DocType.apply", "link" : "scala\/xml\/dtd\/DocType$.html#apply(name:String):scala.xml.dtd.DocType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/DocType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/DocType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/DocType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/DocType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/DocType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/DocType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/DocType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DocType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DocType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DocType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/DocType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/DocType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/dtd\/DocType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/DocType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/DocType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/DocType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/DocType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/DocType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/DocType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.DocType.toString", "link" : "scala\/xml\/dtd\/DocType.html#toString():String", "kind" : "final def"}, {"member" : "scala.xml.dtd.DocType#<init>", "error" : "unsupported entity"}, {"label" : "intSubset", "tail" : ": collection.Seq[Decl]", "member" : "scala.xml.dtd.DocType.intSubset", "link" : "scala\/xml\/dtd\/DocType.html#intSubset:scala.collection.Seq[scala.xml.dtd.Decl]", "kind" : "val"}, {"label" : "extID", "tail" : ": ExternalID", "member" : "scala.xml.dtd.DocType.extID", "link" : "scala\/xml\/dtd\/DocType.html#extID:scala.xml.dtd.ExternalID", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scala.xml.dtd.DocType.name", "link" : "scala\/xml\/dtd\/DocType.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/DocType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/DocType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/DocType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/DocType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/DocType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/DocType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/DocType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/DocType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DocType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DocType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DocType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/DocType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/DocType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/DocType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/DocType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/DocType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/DocType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/DocType.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.DTD", "shortDescription" : "A document type declaration.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.DTD.toString", "link" : "scala\/xml\/dtd\/DTD.html#toString():String", "kind" : "def"}, {"label" : "ent", "tail" : ": Map[String, EntityDecl]", "member" : "scala.xml.dtd.DTD.ent", "link" : "scala\/xml\/dtd\/DTD.html#ent:scala.collection.mutable.Map[String,scala.xml.dtd.EntityDecl]", "kind" : "var"}, {"label" : "attr", "tail" : ": Map[String, AttListDecl]", "member" : "scala.xml.dtd.DTD.attr", "link" : "scala\/xml\/dtd\/DTD.html#attr:scala.collection.mutable.Map[String,scala.xml.dtd.AttListDecl]", "kind" : "var"}, {"label" : "elem", "tail" : ": Map[String, ElemDecl]", "member" : "scala.xml.dtd.DTD.elem", "link" : "scala\/xml\/dtd\/DTD.html#elem:scala.collection.mutable.Map[String,scala.xml.dtd.ElemDecl]", "kind" : "var"}, {"label" : "unparsedEntities", "tail" : "(): collection.Seq[EntityDecl]", "member" : "scala.xml.dtd.DTD.unparsedEntities", "link" : "scala\/xml\/dtd\/DTD.html#unparsedEntities:scala.collection.Seq[scala.xml.dtd.EntityDecl]", "kind" : "def"}, {"label" : "notations", "tail" : "(): collection.Seq[NotationDecl]", "member" : "scala.xml.dtd.DTD.notations", "link" : "scala\/xml\/dtd\/DTD.html#notations:scala.collection.Seq[scala.xml.dtd.NotationDecl]", "kind" : "def"}, {"label" : "decls", "tail" : ": List[Decl]", "member" : "scala.xml.dtd.DTD.decls", "link" : "scala\/xml\/dtd\/DTD.html#decls:List[scala.xml.dtd.Decl]", "kind" : "var"}, {"label" : "externalID", "tail" : ": ExternalID", "member" : "scala.xml.dtd.DTD.externalID", "link" : "scala\/xml\/dtd\/DTD.html#externalID:scala.xml.dtd.ExternalID", "kind" : "var"}, {"member" : "scala.xml.dtd.DTD#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/DTD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/DTD.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/DTD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/DTD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/DTD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/DTD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/DTD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DTD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DTD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/DTD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/DTD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/DTD.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/DTD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/DTD.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/DTD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/DTD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/DTD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/DTD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/dtd\/DTD.html", "kind" : "class"}, {"name" : "scala.xml.dtd.ElemDecl", "shortDescription" : "an element declaration", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ElemDecl.buildString", "link" : "scala\/xml\/dtd\/ElemDecl.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.ElemDecl#<init>", "error" : "unsupported entity"}, {"label" : "contentModel", "tail" : ": ContentModel", "member" : "scala.xml.dtd.ElemDecl.contentModel", "link" : "scala\/xml\/dtd\/ElemDecl.html#contentModel:scala.xml.dtd.ContentModel", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scala.xml.dtd.ElemDecl.name", "link" : "scala\/xml\/dtd\/ElemDecl.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/ElemDecl.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.MarkupDecl.toString", "link" : "scala\/xml\/dtd\/ElemDecl.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ElemDecl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ElemDecl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ElemDecl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ElemDecl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ElemDecl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ElemDecl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ElemDecl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ElemDecl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ElemDecl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ElemDecl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ElemDecl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ElemDecl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ElemDecl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ElemDecl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ElemDecl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ElemDecl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/ElemDecl.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.ELEMENTS", "shortDescription" : "", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ELEMENTS.buildString", "link" : "scala\/xml\/dtd\/ELEMENTS.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.ELEMENTS#<init>", "error" : "unsupported entity"}, {"label" : "r", "tail" : ": ContentModel.RegExp", "member" : "scala.xml.dtd.ELEMENTS.r", "link" : "scala\/xml\/dtd\/ELEMENTS.html#r:scala.xml.dtd.ContentModel.RegExp", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/ELEMENTS.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "dfa", "tail" : ": DetWordAutom[ElemName]", "member" : "scala.xml.dtd.DFAContentModel.dfa", "link" : "scala\/xml\/dtd\/ELEMENTS.html#dfa:scala.xml.dtd.impl.DetWordAutom[scala.xml.dtd.ContentModel.ElemName]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.ContentModel.toString", "link" : "scala\/xml\/dtd\/ELEMENTS.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ELEMENTS.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ELEMENTS.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ELEMENTS.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ELEMENTS.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ELEMENTS.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ELEMENTS.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ELEMENTS.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ELEMENTS.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ELEMENTS.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ELEMENTS.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ELEMENTS.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ELEMENTS.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ELEMENTS.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ELEMENTS.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ELEMENTS.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ELEMENTS.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/ELEMENTS.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.ElementValidator", "shortDescription" : "validate children and\/or attributes of an element exceptions are created but not thrown.", "members_class" : [{"label" : "apply", "tail" : "(n: Node): Boolean", "member" : "scala.xml.dtd.ElementValidator.apply", "link" : "scala\/xml\/dtd\/ElementValidator.html#apply(n:scala.xml.Node):Boolean", "kind" : "def"}, {"label" : "check", "tail" : "(nodes: collection.Seq[Node]): Boolean", "member" : "scala.xml.dtd.ElementValidator.check", "link" : "scala\/xml\/dtd\/ElementValidator.html#check(nodes:scala.collection.Seq[scala.xml.Node]):Boolean", "kind" : "def"}, {"label" : "check", "tail" : "(md: MetaData): Boolean", "member" : "scala.xml.dtd.ElementValidator.check", "link" : "scala\/xml\/dtd\/ElementValidator.html#check(md:scala.xml.MetaData):Boolean", "kind" : "def"}, {"label" : "getIterable", "tail" : "(nodes: collection.Seq[Node], skipPCDATA: Boolean): Iterable[ElemName]", "member" : "scala.xml.dtd.ElementValidator.getIterable", "link" : "scala\/xml\/dtd\/ElementValidator.html#getIterable(nodes:scala.collection.Seq[scala.xml.Node],skipPCDATA:Boolean):Iterable[scala.xml.dtd.ContentModel.ElemName]", "kind" : "def"}, {"label" : "setMetaData", "tail" : "(adecls: List[AttrDecl]): Unit", "member" : "scala.xml.dtd.ElementValidator.setMetaData", "link" : "scala\/xml\/dtd\/ElementValidator.html#setMetaData(adecls:List[scala.xml.dtd.AttrDecl]):Unit", "kind" : "def"}, {"label" : "getContentModel", "tail" : "(): ContentModel", "member" : "scala.xml.dtd.ElementValidator.getContentModel", "link" : "scala\/xml\/dtd\/ElementValidator.html#getContentModel:scala.xml.dtd.ContentModel", "kind" : "def"}, {"label" : "setContentModel", "tail" : "(cm: ContentModel): Unit", "member" : "scala.xml.dtd.ElementValidator.setContentModel", "link" : "scala\/xml\/dtd\/ElementValidator.html#setContentModel(cm:scala.xml.dtd.ContentModel):Unit", "kind" : "def"}, {"label" : "adecls", "tail" : ": List[AttrDecl]", "member" : "scala.xml.dtd.ElementValidator.adecls", "link" : "scala\/xml\/dtd\/ElementValidator.html#adecls:List[scala.xml.dtd.AttrDecl]", "kind" : "var"}, {"label" : "dfa", "tail" : ": DetWordAutom[ElemName]", "member" : "scala.xml.dtd.ElementValidator.dfa", "link" : "scala\/xml\/dtd\/ElementValidator.html#dfa:scala.xml.dtd.impl.DetWordAutom[scala.xml.dtd.ContentModel.ElemName]", "kind" : "var"}, {"label" : "contentModel", "tail" : ": ContentModel", "member" : "scala.xml.dtd.ElementValidator.contentModel", "link" : "scala\/xml\/dtd\/ElementValidator.html#contentModel:scala.xml.dtd.ContentModel", "kind" : "var"}, {"member" : "scala.xml.dtd.ElementValidator#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "scala\/xml\/dtd\/ElementValidator.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Boolean) => A): (Node) => A", "member" : "scala.Function1.andThen", "link" : "scala\/xml\/dtd\/ElementValidator.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => Node): (A) => Boolean", "member" : "scala.Function1.compose", "link" : "scala\/xml\/dtd\/ElementValidator.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ElementValidator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ElementValidator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ElementValidator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ElementValidator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ElementValidator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ElementValidator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ElementValidator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ElementValidator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ElementValidator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ElementValidator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ElementValidator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ElementValidator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ElementValidator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/ElementValidator.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/ElementValidator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ElementValidator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ElementValidator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ElementValidator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/dtd\/ElementValidator.html", "kind" : "class"}, {"name" : "scala.xml.dtd.EMPTY", "shortDescription" : "", "object" : "scala\/xml\/dtd\/EMPTY$.html", "members_object" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.EMPTY.buildString", "link" : "scala\/xml\/dtd\/EMPTY$.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/EMPTY$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "scala\/xml\/dtd\/EMPTY$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.ContentModel.toString", "link" : "scala\/xml\/dtd\/EMPTY$.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/EMPTY$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/EMPTY$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/EMPTY$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/EMPTY$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/EMPTY$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/EMPTY$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/EMPTY$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/EMPTY$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/EMPTY$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/EMPTY$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/EMPTY$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/EMPTY$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/EMPTY$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/EMPTY$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/EMPTY$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/EMPTY$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/EMPTY$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.dtd.EntityDecl", "shortDescription" : "an entity declaration", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.MarkupDecl.toString", "link" : "scala\/xml\/dtd\/EntityDecl.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/EntityDecl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/EntityDecl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/EntityDecl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/EntityDecl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/EntityDecl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/EntityDecl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/EntityDecl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/EntityDecl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/EntityDecl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/EntityDecl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/EntityDecl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/EntityDecl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/EntityDecl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/EntityDecl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/EntityDecl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/EntityDecl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/EntityDecl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/EntityDecl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.MarkupDecl.buildString", "link" : "scala\/xml\/dtd\/EntityDecl.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "abstract def"}], "class" : "scala\/xml\/dtd\/EntityDecl.html", "kind" : "class"}, {"name" : "scala.xml.dtd.EntityDef", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/EntityDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/EntityDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/EntityDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/EntityDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/EntityDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/EntityDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/EntityDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/EntityDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/EntityDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/EntityDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/EntityDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/EntityDef.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/dtd\/EntityDef.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/EntityDef.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/EntityDef.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/EntityDef.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/EntityDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/EntityDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/EntityDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.EntityDef.buildString", "link" : "scala\/xml\/dtd\/EntityDef.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "abstract def"}], "class" : "scala\/xml\/dtd\/EntityDef.html", "kind" : "class"}, {"name" : "scala.xml.dtd.ExtDef", "shortDescription" : "", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ExtDef.buildString", "link" : "scala\/xml\/dtd\/ExtDef.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.ExtDef#<init>", "error" : "unsupported entity"}, {"label" : "extID", "tail" : ": ExternalID", "member" : "scala.xml.dtd.ExtDef.extID", "link" : "scala\/xml\/dtd\/ExtDef.html#extID:scala.xml.dtd.ExternalID", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/ExtDef.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ExtDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ExtDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ExtDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ExtDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ExtDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ExtDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ExtDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ExtDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ExtDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ExtDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ExtDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ExtDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ExtDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ExtDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ExtDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ExtDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/ExtDef.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.ExternalID", "shortDescription" : "an ExternalIDs - either PublicID or SystemID", "members_class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ExternalID.buildString", "link" : "scala\/xml\/dtd\/ExternalID.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.ExternalID.toString", "link" : "scala\/xml\/dtd\/ExternalID.html#toString():String", "kind" : "def"}, {"label" : "quoted", "tail" : "(s: String): String", "member" : "scala.xml.dtd.ExternalID.quoted", "link" : "scala\/xml\/dtd\/ExternalID.html#quoted(s:String):String", "kind" : "def"}, {"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/dtd\/ExternalID.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/dtd\/ExternalID.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/dtd\/ExternalID.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/dtd\/ExternalID.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/dtd\/ExternalID.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/dtd\/ExternalID.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/dtd\/ExternalID.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/dtd\/ExternalID.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/dtd\/ExternalID.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/ExternalID.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/ExternalID.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ExternalID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ExternalID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ExternalID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ExternalID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ExternalID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ExternalID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ExternalID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ExternalID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ExternalID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ExternalID.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ExternalID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ExternalID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ExternalID.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/ExternalID.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/ExternalID.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ExternalID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ExternalID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ExternalID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "publicId", "tail" : "(): String", "member" : "scala.xml.dtd.ExternalID.publicId", "link" : "scala\/xml\/dtd\/ExternalID.html#publicId:String", "kind" : "abstract def"}, {"label" : "systemId", "tail" : "(): String", "member" : "scala.xml.dtd.ExternalID.systemId", "link" : "scala\/xml\/dtd\/ExternalID.html#systemId:String", "kind" : "abstract def"}], "class" : "scala\/xml\/dtd\/ExternalID.html", "kind" : "class"}, {"name" : "scala.xml.dtd.IMPLIED", "shortDescription" : "", "object" : "scala\/xml\/dtd\/IMPLIED$.html", "members_object" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): collection.mutable.StringBuilder", "member" : "scala.xml.dtd.IMPLIED.buildString", "link" : "scala\/xml\/dtd\/IMPLIED$.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.IMPLIED.toString", "link" : "scala\/xml\/dtd\/IMPLIED$.html#toString():String", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/IMPLIED$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "scala\/xml\/dtd\/IMPLIED$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/IMPLIED$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/IMPLIED$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/IMPLIED$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/IMPLIED$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/IMPLIED$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/IMPLIED$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/IMPLIED$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/IMPLIED$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/IMPLIED$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/IMPLIED$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/IMPLIED$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/IMPLIED$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/IMPLIED$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/IMPLIED$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/IMPLIED$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/IMPLIED$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/IMPLIED$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.dtd.IntDef", "shortDescription" : "", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.IntDef.buildString", "link" : "scala\/xml\/dtd\/IntDef.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.IntDef#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "scala.xml.dtd.IntDef.value", "link" : "scala\/xml\/dtd\/IntDef.html#value:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/IntDef.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/IntDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/IntDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/IntDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/IntDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/IntDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/IntDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/IntDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/IntDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/IntDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/IntDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/IntDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/IntDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/IntDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/IntDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/IntDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/IntDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/IntDef.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.MakeValidationException", "shortDescription" : "", "object" : "scala\/xml\/dtd\/MakeValidationException$.html", "members_object" : [{"label" : "fromMissingAttribute", "tail" : "(key: String, tpe: String): ValidationException", "member" : "scala.xml.dtd.MakeValidationException.fromMissingAttribute", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#fromMissingAttribute(key:String,tpe:String):scala.xml.dtd.ValidationException", "kind" : "def"}, {"label" : "fromMissingAttribute", "tail" : "(allKeys: Set[String]): ValidationException", "member" : "scala.xml.dtd.MakeValidationException.fromMissingAttribute", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#fromMissingAttribute(allKeys:Set[String]):scala.xml.dtd.ValidationException", "kind" : "def"}, {"label" : "fromUndefinedAttribute", "tail" : "(key: String): ValidationException", "member" : "scala.xml.dtd.MakeValidationException.fromUndefinedAttribute", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#fromUndefinedAttribute(key:String):scala.xml.dtd.ValidationException", "kind" : "def"}, {"label" : "fromUndefinedElement", "tail" : "(label: String): ValidationException", "member" : "scala.xml.dtd.MakeValidationException.fromUndefinedElement", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#fromUndefinedElement(label:String):scala.xml.dtd.ValidationException", "kind" : "def"}, {"label" : "fromNonEmptyElement", "tail" : "(): ValidationException", "member" : "scala.xml.dtd.MakeValidationException.fromNonEmptyElement", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#fromNonEmptyElement():scala.xml.dtd.ValidationException", "kind" : "def"}, {"label" : "fromFixedAttribute", "tail" : "(k: String, value: String, actual: String): ValidationException", "member" : "scala.xml.dtd.MakeValidationException.fromFixedAttribute", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#fromFixedAttribute(k:String,value:String,actual:String):scala.xml.dtd.ValidationException", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/MakeValidationException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/MakeValidationException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.dtd.MarkupDecl", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.MarkupDecl.toString", "link" : "scala\/xml\/dtd\/MarkupDecl.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/MarkupDecl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/MarkupDecl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/MarkupDecl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/MarkupDecl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/MarkupDecl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/MarkupDecl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/MarkupDecl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/MarkupDecl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/MarkupDecl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/MarkupDecl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/MarkupDecl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/MarkupDecl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/MarkupDecl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/MarkupDecl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/MarkupDecl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/MarkupDecl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/MarkupDecl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/MarkupDecl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.MarkupDecl.buildString", "link" : "scala\/xml\/dtd\/MarkupDecl.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "abstract def"}], "class" : "scala\/xml\/dtd\/MarkupDecl.html", "kind" : "class"}, {"name" : "scala.xml.dtd.MIXED", "shortDescription" : "", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.MIXED.buildString", "link" : "scala\/xml\/dtd\/MIXED.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.MIXED#<init>", "error" : "unsupported entity"}, {"label" : "r", "tail" : ": ContentModel.RegExp", "member" : "scala.xml.dtd.MIXED.r", "link" : "scala\/xml\/dtd\/MIXED.html#r:scala.xml.dtd.ContentModel.RegExp", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/MIXED.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "dfa", "tail" : ": DetWordAutom[ElemName]", "member" : "scala.xml.dtd.DFAContentModel.dfa", "link" : "scala\/xml\/dtd\/MIXED.html#dfa:scala.xml.dtd.impl.DetWordAutom[scala.xml.dtd.ContentModel.ElemName]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.ContentModel.toString", "link" : "scala\/xml\/dtd\/MIXED.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/MIXED.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/MIXED.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/MIXED.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/MIXED.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/MIXED.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/MIXED.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/MIXED.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/MIXED.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/MIXED.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/MIXED.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/MIXED.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/MIXED.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/MIXED.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/MIXED.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/MIXED.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/MIXED.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/MIXED.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.NoExternalID", "shortDescription" : "A marker used when a DocType contains no external id.", "object" : "scala\/xml\/dtd\/NoExternalID$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.NoExternalID.toString", "link" : "scala\/xml\/dtd\/NoExternalID$.html#toString():String", "kind" : "def"}, {"label" : "systemId", "tail" : ": Null", "member" : "scala.xml.dtd.NoExternalID.systemId", "link" : "scala\/xml\/dtd\/NoExternalID$.html#systemId:Null", "kind" : "val"}, {"label" : "publicId", "tail" : ": Null", "member" : "scala.xml.dtd.NoExternalID.publicId", "link" : "scala\/xml\/dtd\/NoExternalID$.html#publicId:Null", "kind" : "val"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ExternalID.buildString", "link" : "scala\/xml\/dtd\/NoExternalID$.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "quoted", "tail" : "(s: String): String", "member" : "scala.xml.dtd.ExternalID.quoted", "link" : "scala\/xml\/dtd\/NoExternalID$.html#quoted(s:String):String", "kind" : "def"}, {"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/dtd\/NoExternalID$.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/dtd\/NoExternalID$.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/dtd\/NoExternalID$.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/dtd\/NoExternalID$.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/dtd\/NoExternalID$.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/dtd\/NoExternalID$.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/dtd\/NoExternalID$.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/dtd\/NoExternalID$.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/dtd\/NoExternalID$.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/NoExternalID$.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/NoExternalID$.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/NoExternalID$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/NoExternalID$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/NoExternalID$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/NoExternalID$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/NoExternalID$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/NoExternalID$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/NoExternalID$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/NoExternalID$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/NoExternalID$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/NoExternalID$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/NoExternalID$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/NoExternalID$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/NoExternalID$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/NoExternalID$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/NoExternalID$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/NoExternalID$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/NoExternalID$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/NoExternalID$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.dtd.NotationDecl", "shortDescription" : "a notation declaration", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.NotationDecl.buildString", "link" : "scala\/xml\/dtd\/NotationDecl.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.NotationDecl#<init>", "error" : "unsupported entity"}, {"label" : "extID", "tail" : ": ExternalID", "member" : "scala.xml.dtd.NotationDecl.extID", "link" : "scala\/xml\/dtd\/NotationDecl.html#extID:scala.xml.dtd.ExternalID", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scala.xml.dtd.NotationDecl.name", "link" : "scala\/xml\/dtd\/NotationDecl.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/NotationDecl.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.MarkupDecl.toString", "link" : "scala\/xml\/dtd\/NotationDecl.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/NotationDecl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/NotationDecl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/NotationDecl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/NotationDecl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/NotationDecl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/NotationDecl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/NotationDecl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/NotationDecl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/NotationDecl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/NotationDecl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/NotationDecl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/NotationDecl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/NotationDecl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/NotationDecl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/NotationDecl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/NotationDecl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/NotationDecl.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.ParameterEntityDecl", "shortDescription" : "a parameter entity declaration", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ParameterEntityDecl.buildString", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.ParameterEntityDecl#<init>", "error" : "unsupported entity"}, {"label" : "entdef", "tail" : ": EntityDef", "member" : "scala.xml.dtd.ParameterEntityDecl.entdef", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#entdef:scala.xml.dtd.EntityDef", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scala.xml.dtd.ParameterEntityDecl.name", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.MarkupDecl.toString", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ParameterEntityDecl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/ParameterEntityDecl.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.ParsedEntityDecl", "shortDescription" : "a parsed general entity declaration", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ParsedEntityDecl.buildString", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.ParsedEntityDecl#<init>", "error" : "unsupported entity"}, {"label" : "entdef", "tail" : ": EntityDef", "member" : "scala.xml.dtd.ParsedEntityDecl.entdef", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#entdef:scala.xml.dtd.EntityDef", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scala.xml.dtd.ParsedEntityDecl.name", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.MarkupDecl.toString", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ParsedEntityDecl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/ParsedEntityDecl.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.PCDATA", "shortDescription" : "", "object" : "scala\/xml\/dtd\/PCDATA$.html", "members_object" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.PCDATA.buildString", "link" : "scala\/xml\/dtd\/PCDATA$.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/PCDATA$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "scala\/xml\/dtd\/PCDATA$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.ContentModel.toString", "link" : "scala\/xml\/dtd\/PCDATA$.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/PCDATA$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/PCDATA$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/PCDATA$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/PCDATA$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/PCDATA$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/PCDATA$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/PCDATA$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/PCDATA$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/PCDATA$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/PCDATA$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/PCDATA$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/PCDATA$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/PCDATA$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/PCDATA$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/PCDATA$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/PCDATA$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/PCDATA$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.dtd.PEReference", "shortDescription" : "a parsed entity reference", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.PEReference.buildString", "link" : "scala\/xml\/dtd\/PEReference.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.PEReference#<init>", "error" : "unsupported entity"}, {"label" : "ent", "tail" : ": String", "member" : "scala.xml.dtd.PEReference.ent", "link" : "scala\/xml\/dtd\/PEReference.html#ent:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/PEReference.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.MarkupDecl.toString", "link" : "scala\/xml\/dtd\/PEReference.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/PEReference.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/PEReference.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/PEReference.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/PEReference.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/PEReference.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/PEReference.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/PEReference.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/PEReference.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/PEReference.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/PEReference.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/PEReference.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/PEReference.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/PEReference.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/PEReference.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/PEReference.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/PEReference.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/PEReference.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.PublicID", "shortDescription" : "a public identifier (see http:\/\/www.w3.org\/QA\/2002\/04\/valid-dtd-list.html).", "members_case class" : [{"label" : "child", "tail" : "(): collection.immutable.Nil", "member" : "scala.xml.dtd.PublicID.child", "link" : "scala\/xml\/dtd\/PublicID.html#child:scala.collection.immutable.Nil.type", "kind" : "def"}, {"label" : "attribute", "tail" : "(): MetaData", "member" : "scala.xml.dtd.PublicID.attribute", "link" : "scala\/xml\/dtd\/PublicID.html#attribute:scala.xml.MetaData", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "scala.xml.dtd.PublicID.label", "link" : "scala\/xml\/dtd\/PublicID.html#label:String", "kind" : "def"}, {"member" : "scala.xml.dtd.PublicID#<init>", "error" : "unsupported entity"}, {"label" : "systemId", "tail" : ": String", "member" : "scala.xml.dtd.PublicID.systemId", "link" : "scala\/xml\/dtd\/PublicID.html#systemId:String", "kind" : "val"}, {"label" : "publicId", "tail" : ": String", "member" : "scala.xml.dtd.PublicID.publicId", "link" : "scala\/xml\/dtd\/PublicID.html#publicId:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/PublicID.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ExternalID.buildString", "link" : "scala\/xml\/dtd\/PublicID.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.ExternalID.toString", "link" : "scala\/xml\/dtd\/PublicID.html#toString():String", "kind" : "def"}, {"label" : "quoted", "tail" : "(s: String): String", "member" : "scala.xml.dtd.ExternalID.quoted", "link" : "scala\/xml\/dtd\/PublicID.html#quoted(s:String):String", "kind" : "def"}, {"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/dtd\/PublicID.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/dtd\/PublicID.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/dtd\/PublicID.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/dtd\/PublicID.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/dtd\/PublicID.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/dtd\/PublicID.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/dtd\/PublicID.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/dtd\/PublicID.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/dtd\/PublicID.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/PublicID.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/PublicID.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/PublicID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/PublicID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/PublicID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/PublicID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/PublicID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/PublicID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/PublicID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/PublicID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/PublicID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/PublicID.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/PublicID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/PublicID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/PublicID.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/PublicID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/PublicID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/PublicID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/PublicID.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.REQUIRED", "shortDescription" : "", "object" : "scala\/xml\/dtd\/REQUIRED$.html", "members_object" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): collection.mutable.StringBuilder", "member" : "scala.xml.dtd.REQUIRED.buildString", "link" : "scala\/xml\/dtd\/REQUIRED$.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.REQUIRED.toString", "link" : "scala\/xml\/dtd\/REQUIRED$.html#toString():String", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/REQUIRED$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "scala\/xml\/dtd\/REQUIRED$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/REQUIRED$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/REQUIRED$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/REQUIRED$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/REQUIRED$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/REQUIRED$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/REQUIRED$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/REQUIRED$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/REQUIRED$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/REQUIRED$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/REQUIRED$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/REQUIRED$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/REQUIRED$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/REQUIRED$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/REQUIRED$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/REQUIRED$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/REQUIRED$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/REQUIRED$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.dtd.Scanner", "shortDescription" : "Scanner for regexps (content models in DTD element declarations) todo: cleanup", "members_class" : [{"label" : "name", "tail" : "(): Int", "member" : "scala.xml.dtd.Scanner.name", "link" : "scala\/xml\/dtd\/Scanner.html#name:Int", "kind" : "final def"}, {"label" : "readToken", "tail" : "(): Int", "member" : "scala.xml.dtd.Scanner.readToken", "link" : "scala\/xml\/dtd\/Scanner.html#readToken:Int", "kind" : "final def"}, {"label" : "accS", "tail" : "(ds: collection.Seq[Char]): Unit", "member" : "scala.xml.dtd.Scanner.accS", "link" : "scala\/xml\/dtd\/Scanner.html#accS(ds:scala.collection.Seq[Char]):Unit", "kind" : "final def"}, {"label" : "acc", "tail" : "(d: Char): Unit", "member" : "scala.xml.dtd.Scanner.acc", "link" : "scala\/xml\/dtd\/Scanner.html#acc(d:Char):Unit", "kind" : "final def"}, {"label" : "next", "tail" : "(): Unit", "member" : "scala.xml.dtd.Scanner.next", "link" : "scala\/xml\/dtd\/Scanner.html#next():Unit", "kind" : "final def"}, {"label" : "isIdentChar", "tail" : "(): Boolean", "member" : "scala.xml.dtd.Scanner.isIdentChar", "link" : "scala\/xml\/dtd\/Scanner.html#isIdentChar:Boolean", "kind" : "final def"}, {"label" : "nextToken", "tail" : "(): Unit", "member" : "scala.xml.dtd.Scanner.nextToken", "link" : "scala\/xml\/dtd\/Scanner.html#nextToken():Unit", "kind" : "final def"}, {"label" : "initScanner", "tail" : "(s: String): Unit", "member" : "scala.xml.dtd.Scanner.initScanner", "link" : "scala\/xml\/dtd\/Scanner.html#initScanner(s:String):Unit", "kind" : "final def"}, {"label" : "value", "tail" : ": String", "member" : "scala.xml.dtd.Scanner.value", "link" : "scala\/xml\/dtd\/Scanner.html#value:String", "kind" : "var"}, {"label" : "token", "tail" : ": Int", "member" : "scala.xml.dtd.Scanner.token", "link" : "scala\/xml\/dtd\/Scanner.html#token:Int", "kind" : "var"}, {"label" : "ENDCH", "tail" : ": Char('\\u0000')", "member" : "scala.xml.dtd.Scanner.ENDCH", "link" : "scala\/xml\/dtd\/Scanner.html#ENDCH:Char('\\u0000')", "kind" : "final val"}, {"member" : "scala.xml.dtd.Scanner#<init>", "error" : "unsupported entity"}, {"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/dtd\/Scanner.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/dtd\/Scanner.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/dtd\/Scanner.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/dtd\/Scanner.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/dtd\/Scanner.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/dtd\/Scanner.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/dtd\/Scanner.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/dtd\/Scanner.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/dtd\/Scanner.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/Scanner.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/Scanner.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "token2string", "tail" : "(i: Int): String", "member" : "scala.xml.dtd.Tokens.token2string", "link" : "scala\/xml\/dtd\/Scanner.html#token2string(i:Int):String", "kind" : "final def"}, {"label" : "S", "tail" : ": Int(13)", "member" : "scala.xml.dtd.Tokens.S", "link" : "scala\/xml\/dtd\/Scanner.html#S:Int(13)", "kind" : "final val"}, {"label" : "END", "tail" : ": Int(10)", "member" : "scala.xml.dtd.Tokens.END", "link" : "scala\/xml\/dtd\/Scanner.html#END:Int(10)", "kind" : "final val"}, {"label" : "CHOICE", "tail" : ": Int(9)", "member" : "scala.xml.dtd.Tokens.CHOICE", "link" : "scala\/xml\/dtd\/Scanner.html#CHOICE:Int(9)", "kind" : "final val"}, {"label" : "OPT", "tail" : ": Int(8)", "member" : "scala.xml.dtd.Tokens.OPT", "link" : "scala\/xml\/dtd\/Scanner.html#OPT:Int(8)", "kind" : "final val"}, {"label" : "PLUS", "tail" : ": Int(7)", "member" : "scala.xml.dtd.Tokens.PLUS", "link" : "scala\/xml\/dtd\/Scanner.html#PLUS:Int(7)", "kind" : "final val"}, {"label" : "STAR", "tail" : ": Int(6)", "member" : "scala.xml.dtd.Tokens.STAR", "link" : "scala\/xml\/dtd\/Scanner.html#STAR:Int(6)", "kind" : "final val"}, {"label" : "COMMA", "tail" : ": Int(5)", "member" : "scala.xml.dtd.Tokens.COMMA", "link" : "scala\/xml\/dtd\/Scanner.html#COMMA:Int(5)", "kind" : "final val"}, {"label" : "RPAREN", "tail" : ": Int(4)", "member" : "scala.xml.dtd.Tokens.RPAREN", "link" : "scala\/xml\/dtd\/Scanner.html#RPAREN:Int(4)", "kind" : "final val"}, {"label" : "LPAREN", "tail" : ": Int(3)", "member" : "scala.xml.dtd.Tokens.LPAREN", "link" : "scala\/xml\/dtd\/Scanner.html#LPAREN:Int(3)", "kind" : "final val"}, {"label" : "NAME", "tail" : ": Int(1)", "member" : "scala.xml.dtd.Tokens.NAME", "link" : "scala\/xml\/dtd\/Scanner.html#NAME:Int(1)", "kind" : "final val"}, {"label" : "TOKEN_PCDATA", "tail" : ": Int(0)", "member" : "scala.xml.dtd.Tokens.TOKEN_PCDATA", "link" : "scala\/xml\/dtd\/Scanner.html#TOKEN_PCDATA:Int(0)", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/Scanner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/Scanner.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/Scanner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/Scanner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/Scanner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/Scanner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/Scanner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/Scanner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/Scanner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/Scanner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/Scanner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/Scanner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/dtd\/Scanner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/Scanner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/Scanner.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/Scanner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/Scanner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/Scanner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/Scanner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/dtd\/Scanner.html", "kind" : "class"}, {"name" : "scala.xml.dtd.SystemID", "shortDescription" : "a system identifier", "members_case class" : [{"label" : "publicId", "tail" : ": Null", "member" : "scala.xml.dtd.SystemID.publicId", "link" : "scala\/xml\/dtd\/SystemID.html#publicId:Null", "kind" : "val"}, {"member" : "scala.xml.dtd.SystemID#<init>", "error" : "unsupported entity"}, {"label" : "systemId", "tail" : ": String", "member" : "scala.xml.dtd.SystemID.systemId", "link" : "scala\/xml\/dtd\/SystemID.html#systemId:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/SystemID.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.ExternalID.buildString", "link" : "scala\/xml\/dtd\/SystemID.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.ExternalID.toString", "link" : "scala\/xml\/dtd\/SystemID.html#toString():String", "kind" : "def"}, {"label" : "quoted", "tail" : "(s: String): String", "member" : "scala.xml.dtd.ExternalID.quoted", "link" : "scala\/xml\/dtd\/SystemID.html#quoted(s:String):String", "kind" : "def"}, {"label" : "checkPubID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkPubID", "link" : "scala\/xml\/dtd\/SystemID.html#checkPubID(s:String):Boolean", "kind" : "def"}, {"label" : "checkSysID", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.checkSysID", "link" : "scala\/xml\/dtd\/SystemID.html#checkSysID(s:String):Boolean", "kind" : "def"}, {"label" : "isValidIANAEncoding", "tail" : "(ianaEncoding: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isValidIANAEncoding", "link" : "scala\/xml\/dtd\/SystemID.html#isValidIANAEncoding(ianaEncoding:scala.collection.Seq[Char]):Boolean", "kind" : "def"}, {"label" : "isPubIDChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isPubIDChar", "link" : "scala\/xml\/dtd\/SystemID.html#isPubIDChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isName", "tail" : "(s: String): Boolean", "member" : "scala.xml.parsing.TokenTests.isName", "link" : "scala\/xml\/dtd\/SystemID.html#isName(s:String):Boolean", "kind" : "def"}, {"label" : "isNameStart", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameStart", "link" : "scala\/xml\/dtd\/SystemID.html#isNameStart(ch:Char):Boolean", "kind" : "def"}, {"label" : "isNameChar", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isNameChar", "link" : "scala\/xml\/dtd\/SystemID.html#isNameChar(ch:Char):Boolean", "kind" : "def"}, {"label" : "isAlphaDigit", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlphaDigit", "link" : "scala\/xml\/dtd\/SystemID.html#isAlphaDigit(c:Char):Boolean", "kind" : "def"}, {"label" : "isAlpha", "tail" : "(c: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isAlpha", "link" : "scala\/xml\/dtd\/SystemID.html#isAlpha(c:Char):Boolean", "kind" : "def"}, {"label" : "isSpace", "tail" : "(cs: collection.Seq[Char]): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/SystemID.html#isSpace(cs:scala.collection.Seq[Char]):Boolean", "kind" : "final def"}, {"label" : "isSpace", "tail" : "(ch: Char): Boolean", "member" : "scala.xml.parsing.TokenTests.isSpace", "link" : "scala\/xml\/dtd\/SystemID.html#isSpace(ch:Char):Boolean", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/SystemID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/SystemID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/SystemID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/SystemID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/SystemID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/SystemID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/SystemID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/SystemID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/SystemID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/SystemID.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/SystemID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/SystemID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/SystemID.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/SystemID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/SystemID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/SystemID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/SystemID.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.Tokens", "shortDescription" : "", "members_class" : [{"label" : "token2string", "tail" : "(i: Int): String", "member" : "scala.xml.dtd.Tokens.token2string", "link" : "scala\/xml\/dtd\/Tokens.html#token2string(i:Int):String", "kind" : "final def"}, {"label" : "S", "tail" : ": Int(13)", "member" : "scala.xml.dtd.Tokens.S", "link" : "scala\/xml\/dtd\/Tokens.html#S:Int(13)", "kind" : "final val"}, {"label" : "END", "tail" : ": Int(10)", "member" : "scala.xml.dtd.Tokens.END", "link" : "scala\/xml\/dtd\/Tokens.html#END:Int(10)", "kind" : "final val"}, {"label" : "CHOICE", "tail" : ": Int(9)", "member" : "scala.xml.dtd.Tokens.CHOICE", "link" : "scala\/xml\/dtd\/Tokens.html#CHOICE:Int(9)", "kind" : "final val"}, {"label" : "OPT", "tail" : ": Int(8)", "member" : "scala.xml.dtd.Tokens.OPT", "link" : "scala\/xml\/dtd\/Tokens.html#OPT:Int(8)", "kind" : "final val"}, {"label" : "PLUS", "tail" : ": Int(7)", "member" : "scala.xml.dtd.Tokens.PLUS", "link" : "scala\/xml\/dtd\/Tokens.html#PLUS:Int(7)", "kind" : "final val"}, {"label" : "STAR", "tail" : ": Int(6)", "member" : "scala.xml.dtd.Tokens.STAR", "link" : "scala\/xml\/dtd\/Tokens.html#STAR:Int(6)", "kind" : "final val"}, {"label" : "COMMA", "tail" : ": Int(5)", "member" : "scala.xml.dtd.Tokens.COMMA", "link" : "scala\/xml\/dtd\/Tokens.html#COMMA:Int(5)", "kind" : "final val"}, {"label" : "RPAREN", "tail" : ": Int(4)", "member" : "scala.xml.dtd.Tokens.RPAREN", "link" : "scala\/xml\/dtd\/Tokens.html#RPAREN:Int(4)", "kind" : "final val"}, {"label" : "LPAREN", "tail" : ": Int(3)", "member" : "scala.xml.dtd.Tokens.LPAREN", "link" : "scala\/xml\/dtd\/Tokens.html#LPAREN:Int(3)", "kind" : "final val"}, {"label" : "NAME", "tail" : ": Int(1)", "member" : "scala.xml.dtd.Tokens.NAME", "link" : "scala\/xml\/dtd\/Tokens.html#NAME:Int(1)", "kind" : "final val"}, {"label" : "TOKEN_PCDATA", "tail" : ": Int(0)", "member" : "scala.xml.dtd.Tokens.TOKEN_PCDATA", "link" : "scala\/xml\/dtd\/Tokens.html#TOKEN_PCDATA:Int(0)", "kind" : "final val"}, {"member" : "scala.xml.dtd.Tokens#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/Tokens.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/Tokens.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/Tokens.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/Tokens.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/Tokens.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/Tokens.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/Tokens.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/Tokens.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/Tokens.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/Tokens.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/Tokens.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/Tokens.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/dtd\/Tokens.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/Tokens.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/dtd\/Tokens.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/dtd\/Tokens.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/Tokens.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/Tokens.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/Tokens.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/dtd\/Tokens.html", "kind" : "class"}, {"name" : "scala.xml.dtd.UnparsedEntityDecl", "shortDescription" : "an unparsed entity declaration", "members_case class" : [{"label" : "buildString", "tail" : "(sb: StringBuilder): StringBuilder", "member" : "scala.xml.dtd.UnparsedEntityDecl.buildString", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#buildString(sb:StringBuilder):StringBuilder", "kind" : "def"}, {"member" : "scala.xml.dtd.UnparsedEntityDecl#<init>", "error" : "unsupported entity"}, {"label" : "notation", "tail" : ": String", "member" : "scala.xml.dtd.UnparsedEntityDecl.notation", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#notation:String", "kind" : "val"}, {"label" : "extID", "tail" : ": ExternalID", "member" : "scala.xml.dtd.UnparsedEntityDecl.extID", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#extID:scala.xml.dtd.ExternalID", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scala.xml.dtd.UnparsedEntityDecl.name", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.xml.dtd.MarkupDecl.toString", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/UnparsedEntityDecl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/UnparsedEntityDecl.html", "kind" : "case class"}, {"name" : "scala.xml.dtd.ValidationException", "shortDescription" : "", "members_case class" : [{"member" : "scala.xml.dtd.ValidationException#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": String", "member" : "scala.xml.dtd.ValidationException.e", "link" : "scala\/xml\/dtd\/ValidationException.html#e:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/dtd\/ValidationException.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[java.lang.Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scala\/xml\/dtd\/ValidationException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: java.lang.Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scala\/xml\/dtd\/ValidationException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scala\/xml\/dtd\/ValidationException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scala\/xml\/dtd\/ValidationException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scala\/xml\/dtd\/ValidationException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/dtd\/ValidationException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/dtd\/ValidationException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/dtd\/ValidationException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scala\/xml\/dtd\/ValidationException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: java.lang.Throwable): java.lang.Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scala\/xml\/dtd\/ValidationException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scala\/xml\/dtd\/ValidationException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scala\/xml\/dtd\/ValidationException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scala\/xml\/dtd\/ValidationException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/dtd\/ValidationException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/dtd\/ValidationException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/dtd\/ValidationException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/dtd\/ValidationException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/dtd\/ValidationException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/dtd\/ValidationException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/dtd\/ValidationException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ValidationException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ValidationException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/dtd\/ValidationException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/dtd\/ValidationException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/dtd\/ValidationException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/dtd\/ValidationException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/dtd\/ValidationException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/dtd\/ValidationException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/dtd\/ValidationException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/dtd\/ValidationException.html", "kind" : "case class"}], "scala" : [], "scala.xml.include.sax" : [{"name" : "scala.xml.include.sax.EncodingHeuristics", "shortDescription" : "EncodingHeuristics reads from a stream(which should be buffered) and attempts to guesswhat the encoding of the text in the stream is.", "object" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html", "members_object" : [{"label" : "readEncodingFromStream", "tail" : "(in: InputStream): String", "member" : "scala.xml.include.sax.EncodingHeuristics.readEncodingFromStream", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#readEncodingFromStream(in:java.io.InputStream):String", "kind" : "def"}, {"label" : "EncodingNames", "tail" : "", "member" : "scala.xml.include.sax.EncodingHeuristics.EncodingNames", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#EncodingNames", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/include\/sax\/EncodingHeuristics$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.xml.include.sax.XIncludeFilter", "shortDescription" : "This is a SAX filter which resolves all XInclude include elements before passing them on to the client application.", "members_class" : [{"label" : "skippedEntity", "tail" : "(name: String): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.skippedEntity", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#skippedEntity(name:String):Unit", "kind" : "def"}, {"label" : "processingInstruction", "tail" : "(target: String, data: String): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.processingInstruction", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#processingInstruction(target:String,data:String):Unit", "kind" : "def"}, {"label" : "ignorableWhitespace", "tail" : "(ch: Array[Char], start: Int, length: Int): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.ignorableWhitespace", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#ignorableWhitespace(ch:Array[Char],start:Int,length:Int):Unit", "kind" : "def"}, {"label" : "characters", "tail" : "(ch: Array[Char], start: Int, length: Int): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.characters", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#characters(ch:Array[Char],start:Int,length:Int):Unit", "kind" : "def"}, {"label" : "endPrefixMapping", "tail" : "(prefix: String): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.endPrefixMapping", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#endPrefixMapping(prefix:String):Unit", "kind" : "def"}, {"label" : "startPrefixMapping", "tail" : "(prefix: String, uri: String): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.startPrefixMapping", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#startPrefixMapping(prefix:String,uri:String):Unit", "kind" : "def"}, {"label" : "endDocument", "tail" : "(): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.endDocument", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#endDocument():Unit", "kind" : "def"}, {"label" : "startDocument", "tail" : "(): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.startDocument", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#startDocument():Unit", "kind" : "def"}, {"label" : "endElement", "tail" : "(uri: String, localName: String, qName: String): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.endElement", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#endElement(uri:String,localName:String,qName:String):Unit", "kind" : "def"}, {"label" : "startElement", "tail" : "(uri: String, localName: String, qName: String, atts1: Attributes): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.startElement", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#startElement(uri:String,localName:String,qName:String,atts1:org.xml.sax.Attributes):Unit", "kind" : "def"}, {"label" : "insideIncludeElement", "tail" : "(): Boolean", "member" : "scala.xml.include.sax.XIncludeFilter.insideIncludeElement", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#insideIncludeElement():Boolean", "kind" : "def"}, {"label" : "setDocumentLocator", "tail" : "(locator: Locator): Unit", "member" : "scala.xml.include.sax.XIncludeFilter.setDocumentLocator", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#setDocumentLocator(locator:org.xml.sax.Locator):Unit", "kind" : "def"}, {"label" : "XINCLUDE_NAMESPACE", "tail" : ": String(\"http:\/\/www.w3.org\/2001\/XInclude\")", "member" : "scala.xml.include.sax.XIncludeFilter.XINCLUDE_NAMESPACE", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#XINCLUDE_NAMESPACE:String(\"http:\/\/www.w3.org\/2001\/XInclude\")", "kind" : "final val"}, {"member" : "scala.xml.include.sax.XIncludeFilter#<init>", "error" : "unsupported entity"}, {"label" : "fatalError", "tail" : "(arg0: org.xml.sax.SAXParseException): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.fatalError", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#fatalError(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(arg0: org.xml.sax.SAXParseException): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.error", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#error(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(arg0: org.xml.sax.SAXParseException): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.warning", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#warning(x$1:org.xml.sax.SAXParseException):Unit", "kind" : "def"}, {"label" : "unparsedEntityDecl", "tail" : "(arg0: String, arg1: String, arg2: String, arg3: String): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.unparsedEntityDecl", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#unparsedEntityDecl(x$1:String,x$2:String,x$3:String,x$4:String):Unit", "kind" : "def"}, {"label" : "notationDecl", "tail" : "(arg0: String, arg1: String, arg2: String): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.notationDecl", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#notationDecl(x$1:String,x$2:String,x$3:String):Unit", "kind" : "def"}, {"label" : "resolveEntity", "tail" : "(arg0: String, arg1: String): org.xml.sax.InputSource", "member" : "org.xml.sax.helpers.XMLFilterImpl.resolveEntity", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#resolveEntity(x$1:String,x$2:String):org.xml.sax.InputSource", "kind" : "def"}, {"label" : "parse", "tail" : "(arg0: String): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.parse", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#parse(x$1:String):Unit", "kind" : "def"}, {"label" : "parse", "tail" : "(arg0: org.xml.sax.InputSource): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.parse", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#parse(x$1:org.xml.sax.InputSource):Unit", "kind" : "def"}, {"label" : "getErrorHandler", "tail" : "(): ErrorHandler", "member" : "org.xml.sax.helpers.XMLFilterImpl.getErrorHandler", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#getErrorHandler():org.xml.sax.ErrorHandler", "kind" : "def"}, {"label" : "setErrorHandler", "tail" : "(arg0: ErrorHandler): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.setErrorHandler", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#setErrorHandler(x$1:org.xml.sax.ErrorHandler):Unit", "kind" : "def"}, {"label" : "getContentHandler", "tail" : "(): ContentHandler", "member" : "org.xml.sax.helpers.XMLFilterImpl.getContentHandler", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#getContentHandler():org.xml.sax.ContentHandler", "kind" : "def"}, {"label" : "setContentHandler", "tail" : "(arg0: ContentHandler): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.setContentHandler", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#setContentHandler(x$1:org.xml.sax.ContentHandler):Unit", "kind" : "def"}, {"label" : "getDTDHandler", "tail" : "(): DTDHandler", "member" : "org.xml.sax.helpers.XMLFilterImpl.getDTDHandler", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#getDTDHandler():org.xml.sax.DTDHandler", "kind" : "def"}, {"label" : "setDTDHandler", "tail" : "(arg0: DTDHandler): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.setDTDHandler", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#setDTDHandler(x$1:org.xml.sax.DTDHandler):Unit", "kind" : "def"}, {"label" : "getEntityResolver", "tail" : "(): org.xml.sax.EntityResolver", "member" : "org.xml.sax.helpers.XMLFilterImpl.getEntityResolver", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#getEntityResolver():org.xml.sax.EntityResolver", "kind" : "def"}, {"label" : "setEntityResolver", "tail" : "(arg0: org.xml.sax.EntityResolver): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.setEntityResolver", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#setEntityResolver(x$1:org.xml.sax.EntityResolver):Unit", "kind" : "def"}, {"label" : "getProperty", "tail" : "(arg0: String): AnyRef", "member" : "org.xml.sax.helpers.XMLFilterImpl.getProperty", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#getProperty(x$1:String):Object", "kind" : "def"}, {"label" : "setProperty", "tail" : "(arg0: String, arg1: AnyRef): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.setProperty", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#setProperty(x$1:String,x$2:Object):Unit", "kind" : "def"}, {"label" : "getFeature", "tail" : "(arg0: String): Boolean", "member" : "org.xml.sax.helpers.XMLFilterImpl.getFeature", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#getFeature(x$1:String):Boolean", "kind" : "def"}, {"label" : "setFeature", "tail" : "(arg0: String, arg1: Boolean): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.setFeature", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#setFeature(x$1:String,x$2:Boolean):Unit", "kind" : "def"}, {"label" : "getParent", "tail" : "(): XMLReader", "member" : "org.xml.sax.helpers.XMLFilterImpl.getParent", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#getParent():org.xml.sax.XMLReader", "kind" : "def"}, {"label" : "setParent", "tail" : "(arg0: XMLReader): Unit", "member" : "org.xml.sax.helpers.XMLFilterImpl.setParent", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#setParent(x$1:org.xml.sax.XMLReader):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/include\/sax\/XIncludeFilter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/include\/sax\/XIncludeFilter.html", "kind" : "class"}, {"name" : "scala.xml.include.sax.XIncluder", "shortDescription" : "XIncluder is a SAX ContentHandler that writes its XML document ontoan output stream after resolving all xinclude:include elements.", "members_class" : [{"label" : "comment", "tail" : "(ch: Array[Char], start: Int, length: Int): Unit", "member" : "scala.xml.include.sax.XIncluder.comment", "link" : "scala\/xml\/include\/sax\/XIncluder.html#comment(ch:Array[Char],start:Int,length:Int):Unit", "kind" : "def"}, {"label" : "setFilter", "tail" : "(filter: XIncludeFilter): Unit", "member" : "scala.xml.include.sax.XIncluder.setFilter", "link" : "scala\/xml\/include\/sax\/XIncluder.html#setFilter(filter:scala.xml.include.sax.XIncludeFilter):Unit", "kind" : "def"}, {"label" : "endCDATA", "tail" : "(): Unit", "member" : "scala.xml.include.sax.XIncluder.endCDATA", "link" : "scala\/xml\/include\/sax\/XIncluder.html#endCDATA():Unit", "kind" : "def"}, {"label" : "startCDATA", "tail" : "(): Unit", "member" : "scala.xml.include.sax.XIncluder.startCDATA", "link" : "scala\/xml\/include\/sax\/XIncluder.html#startCDATA():Unit", "kind" : "def"}, {"label" : "endEntity", "tail" : "(name: String): Unit", "member" : "scala.xml.include.sax.XIncluder.endEntity", "link" : "scala\/xml\/include\/sax\/XIncluder.html#endEntity(name:String):Unit", "kind" : "def"}, {"label" : "startEntity", "tail" : "(name: String): Unit", "member" : "scala.xml.include.sax.XIncluder.startEntity", "link" : "scala\/xml\/include\/sax\/XIncluder.html#startEntity(name:String):Unit", "kind" : "def"}, {"label" : "endDTD", "tail" : "(): Unit", "member" : "scala.xml.include.sax.XIncluder.endDTD", "link" : "scala\/xml\/include\/sax\/XIncluder.html#endDTD():Unit", "kind" : "def"}, {"label" : "startDTD", "tail" : "(name: String, publicID: String, systemID: String): Unit", "member" : "scala.xml.include.sax.XIncluder.startDTD", "link" : "scala\/xml\/include\/sax\/XIncluder.html#startDTD(name:String,publicID:String,systemID:String):Unit", "kind" : "def"}, {"label" : "skippedEntity", "tail" : "(name: String): Unit", "member" : "scala.xml.include.sax.XIncluder.skippedEntity", "link" : "scala\/xml\/include\/sax\/XIncluder.html#skippedEntity(name:String):Unit", "kind" : "def"}, {"label" : "processingInstruction", "tail" : "(target: String, data: String): Unit", "member" : "scala.xml.include.sax.XIncluder.processingInstruction", "link" : "scala\/xml\/include\/sax\/XIncluder.html#processingInstruction(target:String,data:String):Unit", "kind" : "def"}, {"label" : "ignorableWhitespace", "tail" : "(ch: Array[Char], start: Int, length: Int): Unit", "member" : "scala.xml.include.sax.XIncluder.ignorableWhitespace", "link" : "scala\/xml\/include\/sax\/XIncluder.html#ignorableWhitespace(ch:Array[Char],start:Int,length:Int):Unit", "kind" : "def"}, {"label" : "characters", "tail" : "(ch: Array[Char], start: Int, length: Int): Unit", "member" : "scala.xml.include.sax.XIncluder.characters", "link" : "scala\/xml\/include\/sax\/XIncluder.html#characters(ch:Array[Char],start:Int,length:Int):Unit", "kind" : "def"}, {"label" : "endElement", "tail" : "(namespaceURI: String, localName: String, qualifiedName: String): Unit", "member" : "scala.xml.include.sax.XIncluder.endElement", "link" : "scala\/xml\/include\/sax\/XIncluder.html#endElement(namespaceURI:String,localName:String,qualifiedName:String):Unit", "kind" : "def"}, {"label" : "startElement", "tail" : "(namespaceURI: String, localName: String, qualifiedName: String, atts: Attributes): Unit", "member" : "scala.xml.include.sax.XIncluder.startElement", "link" : "scala\/xml\/include\/sax\/XIncluder.html#startElement(namespaceURI:String,localName:String,qualifiedName:String,atts:org.xml.sax.Attributes):Unit", "kind" : "def"}, {"label" : "endPrefixMapping", "tail" : "(prefix: String): Unit", "member" : "scala.xml.include.sax.XIncluder.endPrefixMapping", "link" : "scala\/xml\/include\/sax\/XIncluder.html#endPrefixMapping(prefix:String):Unit", "kind" : "def"}, {"label" : "startPrefixMapping", "tail" : "(prefix: String, uri: String): Unit", "member" : "scala.xml.include.sax.XIncluder.startPrefixMapping", "link" : "scala\/xml\/include\/sax\/XIncluder.html#startPrefixMapping(prefix:String,uri:String):Unit", "kind" : "def"}, {"label" : "endDocument", "tail" : "(): Unit", "member" : "scala.xml.include.sax.XIncluder.endDocument", "link" : "scala\/xml\/include\/sax\/XIncluder.html#endDocument():Unit", "kind" : "def"}, {"label" : "startDocument", "tail" : "(): Unit", "member" : "scala.xml.include.sax.XIncluder.startDocument", "link" : "scala\/xml\/include\/sax\/XIncluder.html#startDocument():Unit", "kind" : "def"}, {"label" : "setDocumentLocator", "tail" : "(locator: Locator): Unit", "member" : "scala.xml.include.sax.XIncluder.setDocumentLocator", "link" : "scala\/xml\/include\/sax\/XIncluder.html#setDocumentLocator(locator:org.xml.sax.Locator):Unit", "kind" : "def"}, {"label" : "out", "tail" : ": OutputStreamWriter", "member" : "scala.xml.include.sax.XIncluder.out", "link" : "scala\/xml\/include\/sax\/XIncluder.html#out:java.io.OutputStreamWriter", "kind" : "var"}, {"member" : "scala.xml.include.sax.XIncluder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/include\/sax\/XIncluder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/include\/sax\/XIncluder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/include\/sax\/XIncluder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/include\/sax\/XIncluder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/include\/sax\/XIncluder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/include\/sax\/XIncluder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/include\/sax\/XIncluder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/sax\/XIncluder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/sax\/XIncluder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/sax\/XIncluder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/include\/sax\/XIncluder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/include\/sax\/XIncluder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/include\/sax\/XIncluder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/include\/sax\/XIncluder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/include\/sax\/XIncluder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/include\/sax\/XIncluder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/include\/sax\/XIncluder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/include\/sax\/XIncluder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/include\/sax\/XIncluder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/include\/sax\/XIncluder.html", "kind" : "class"}], "scala.xml.include" : [{"name" : "scala.xml.include.CircularIncludeException", "shortDescription" : " A CircularIncludeException is thrown when an included document attempts to include itself or one of its ancestor documents.", "members_class" : [{"member" : "scala.xml.include.CircularIncludeException#<init>", "error" : "unsupported entity"}, {"member" : "scala.xml.include.CircularIncludeException#<init>", "error" : "unsupported entity"}, {"label" : "getRootCause", "tail" : "(): Throwable", "member" : "scala.xml.include.XIncludeException.getRootCause", "link" : "scala\/xml\/include\/CircularIncludeException.html#getRootCause():Throwable", "kind" : "def"}, {"label" : "setRootCause", "tail" : "(nestedException: Throwable): Unit", "member" : "scala.xml.include.XIncludeException.setRootCause", "link" : "scala\/xml\/include\/CircularIncludeException.html#setRootCause(nestedException:Throwable):Unit", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[java.lang.Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scala\/xml\/include\/CircularIncludeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: java.lang.Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scala\/xml\/include\/CircularIncludeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scala\/xml\/include\/CircularIncludeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scala\/xml\/include\/CircularIncludeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scala\/xml\/include\/CircularIncludeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/include\/CircularIncludeException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/include\/CircularIncludeException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/include\/CircularIncludeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scala\/xml\/include\/CircularIncludeException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: java.lang.Throwable): java.lang.Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scala\/xml\/include\/CircularIncludeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scala\/xml\/include\/CircularIncludeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scala\/xml\/include\/CircularIncludeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scala\/xml\/include\/CircularIncludeException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/include\/CircularIncludeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/include\/CircularIncludeException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/include\/CircularIncludeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/include\/CircularIncludeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/include\/CircularIncludeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/include\/CircularIncludeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/include\/CircularIncludeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/CircularIncludeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/CircularIncludeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/CircularIncludeException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/include\/CircularIncludeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/include\/CircularIncludeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/include\/CircularIncludeException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/include\/CircularIncludeException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/include\/CircularIncludeException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/include\/CircularIncludeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/include\/CircularIncludeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/include\/CircularIncludeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/include\/CircularIncludeException.html", "kind" : "class"}, {"name" : "scala.xml.include.UnavailableResourceException", "shortDescription" : "An UnavailableResourceException is thrown when an included documentcannot be found or loaded.", "members_class" : [{"member" : "scala.xml.include.UnavailableResourceException#<init>", "error" : "unsupported entity"}, {"member" : "scala.xml.include.UnavailableResourceException#<init>", "error" : "unsupported entity"}, {"label" : "getRootCause", "tail" : "(): Throwable", "member" : "scala.xml.include.XIncludeException.getRootCause", "link" : "scala\/xml\/include\/UnavailableResourceException.html#getRootCause():Throwable", "kind" : "def"}, {"label" : "setRootCause", "tail" : "(nestedException: Throwable): Unit", "member" : "scala.xml.include.XIncludeException.setRootCause", "link" : "scala\/xml\/include\/UnavailableResourceException.html#setRootCause(nestedException:Throwable):Unit", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[java.lang.Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scala\/xml\/include\/UnavailableResourceException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: java.lang.Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scala\/xml\/include\/UnavailableResourceException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scala\/xml\/include\/UnavailableResourceException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scala\/xml\/include\/UnavailableResourceException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scala\/xml\/include\/UnavailableResourceException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/include\/UnavailableResourceException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/include\/UnavailableResourceException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/include\/UnavailableResourceException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scala\/xml\/include\/UnavailableResourceException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: java.lang.Throwable): java.lang.Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scala\/xml\/include\/UnavailableResourceException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scala\/xml\/include\/UnavailableResourceException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scala\/xml\/include\/UnavailableResourceException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scala\/xml\/include\/UnavailableResourceException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/include\/UnavailableResourceException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/include\/UnavailableResourceException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/include\/UnavailableResourceException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/include\/UnavailableResourceException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/include\/UnavailableResourceException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/include\/UnavailableResourceException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/include\/UnavailableResourceException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/UnavailableResourceException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/UnavailableResourceException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/UnavailableResourceException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/include\/UnavailableResourceException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/include\/UnavailableResourceException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/include\/UnavailableResourceException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/include\/UnavailableResourceException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/include\/UnavailableResourceException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/include\/UnavailableResourceException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/include\/UnavailableResourceException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/include\/UnavailableResourceException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/include\/UnavailableResourceException.html", "kind" : "class"}, {"name" : "scala.xml.include.XIncludeException", "shortDescription" : "XIncludeException is the generic superclass for all checked exceptionsthat may be thrown as a result of a violation of XInclude's rules.", "members_class" : [{"label" : "getRootCause", "tail" : "(): Throwable", "member" : "scala.xml.include.XIncludeException.getRootCause", "link" : "scala\/xml\/include\/XIncludeException.html#getRootCause():Throwable", "kind" : "def"}, {"label" : "setRootCause", "tail" : "(nestedException: Throwable): Unit", "member" : "scala.xml.include.XIncludeException.setRootCause", "link" : "scala\/xml\/include\/XIncludeException.html#setRootCause(nestedException:Throwable):Unit", "kind" : "def"}, {"member" : "scala.xml.include.XIncludeException#<init>", "error" : "unsupported entity"}, {"member" : "scala.xml.include.XIncludeException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[java.lang.Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scala\/xml\/include\/XIncludeException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: java.lang.Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scala\/xml\/include\/XIncludeException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scala\/xml\/include\/XIncludeException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scala\/xml\/include\/XIncludeException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scala\/xml\/include\/XIncludeException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/include\/XIncludeException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/include\/XIncludeException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/xml\/include\/XIncludeException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scala\/xml\/include\/XIncludeException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: java.lang.Throwable): java.lang.Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scala\/xml\/include\/XIncludeException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scala\/xml\/include\/XIncludeException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scala\/xml\/include\/XIncludeException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scala\/xml\/include\/XIncludeException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/include\/XIncludeException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/include\/XIncludeException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/include\/XIncludeException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/include\/XIncludeException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/include\/XIncludeException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/include\/XIncludeException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/include\/XIncludeException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/XIncludeException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/XIncludeException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/include\/XIncludeException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/include\/XIncludeException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/include\/XIncludeException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/include\/XIncludeException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/include\/XIncludeException.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/include\/XIncludeException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/include\/XIncludeException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/include\/XIncludeException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/include\/XIncludeException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/include\/XIncludeException.html", "kind" : "class"}], "scala.xml.pull" : [{"name" : "scala.xml.pull.EvComment", "shortDescription" : "A comment was encountered", "members_case class" : [{"member" : "scala.xml.pull.EvComment#<init>", "error" : "unsupported entity"}, {"label" : "text", "tail" : ": String", "member" : "scala.xml.pull.EvComment.text", "link" : "scala\/xml\/pull\/EvComment.html#text:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/pull\/EvComment.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/pull\/EvComment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/pull\/EvComment.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/pull\/EvComment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/pull\/EvComment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/pull\/EvComment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/pull\/EvComment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/pull\/EvComment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvComment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvComment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvComment.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/pull\/EvComment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/pull\/EvComment.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/pull\/EvComment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/pull\/EvComment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/pull\/EvComment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/pull\/EvComment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/pull\/EvComment.html", "kind" : "case class"}, {"name" : "scala.xml.pull.EvElemEnd", "shortDescription" : "An Element's end tag was encountered.", "members_case class" : [{"member" : "scala.xml.pull.EvElemEnd#<init>", "error" : "unsupported entity"}, {"label" : "label", "tail" : ": String", "member" : "scala.xml.pull.EvElemEnd.label", "link" : "scala\/xml\/pull\/EvElemEnd.html#label:String", "kind" : "val"}, {"label" : "pre", "tail" : ": String", "member" : "scala.xml.pull.EvElemEnd.pre", "link" : "scala\/xml\/pull\/EvElemEnd.html#pre:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/pull\/EvElemEnd.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/pull\/EvElemEnd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/pull\/EvElemEnd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/pull\/EvElemEnd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/pull\/EvElemEnd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/pull\/EvElemEnd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/pull\/EvElemEnd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/pull\/EvElemEnd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvElemEnd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvElemEnd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvElemEnd.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/pull\/EvElemEnd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/pull\/EvElemEnd.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/pull\/EvElemEnd.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/pull\/EvElemEnd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/pull\/EvElemEnd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/pull\/EvElemEnd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/pull\/EvElemEnd.html", "kind" : "case class"}, {"name" : "scala.xml.pull.EvElemStart", "shortDescription" : "An Element's start tag was encountered.", "members_case class" : [{"member" : "scala.xml.pull.EvElemStart#<init>", "error" : "unsupported entity"}, {"label" : "scope", "tail" : ": NamespaceBinding", "member" : "scala.xml.pull.EvElemStart.scope", "link" : "scala\/xml\/pull\/EvElemStart.html#scope:scala.xml.NamespaceBinding", "kind" : "val"}, {"label" : "attrs", "tail" : ": MetaData", "member" : "scala.xml.pull.EvElemStart.attrs", "link" : "scala\/xml\/pull\/EvElemStart.html#attrs:scala.xml.MetaData", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "scala.xml.pull.EvElemStart.label", "link" : "scala\/xml\/pull\/EvElemStart.html#label:String", "kind" : "val"}, {"label" : "pre", "tail" : ": String", "member" : "scala.xml.pull.EvElemStart.pre", "link" : "scala\/xml\/pull\/EvElemStart.html#pre:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/pull\/EvElemStart.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/pull\/EvElemStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/pull\/EvElemStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/pull\/EvElemStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/pull\/EvElemStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/pull\/EvElemStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/pull\/EvElemStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/pull\/EvElemStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvElemStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvElemStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvElemStart.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/pull\/EvElemStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/pull\/EvElemStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/pull\/EvElemStart.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/pull\/EvElemStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/pull\/EvElemStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/pull\/EvElemStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/pull\/EvElemStart.html", "kind" : "case class"}, {"name" : "scala.xml.pull.EvEntityRef", "shortDescription" : "An entity reference was encountered.", "members_case class" : [{"member" : "scala.xml.pull.EvEntityRef#<init>", "error" : "unsupported entity"}, {"label" : "entity", "tail" : ": String", "member" : "scala.xml.pull.EvEntityRef.entity", "link" : "scala\/xml\/pull\/EvEntityRef.html#entity:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/pull\/EvEntityRef.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/pull\/EvEntityRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/pull\/EvEntityRef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/pull\/EvEntityRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/pull\/EvEntityRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/pull\/EvEntityRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/pull\/EvEntityRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/pull\/EvEntityRef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvEntityRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvEntityRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvEntityRef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/pull\/EvEntityRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/pull\/EvEntityRef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/pull\/EvEntityRef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/pull\/EvEntityRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/pull\/EvEntityRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/pull\/EvEntityRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/pull\/EvEntityRef.html", "kind" : "case class"}, {"name" : "scala.xml.pull.EvProcInstr", "shortDescription" : "A processing instruction was encountered.", "members_case class" : [{"member" : "scala.xml.pull.EvProcInstr#<init>", "error" : "unsupported entity"}, {"label" : "text", "tail" : ": String", "member" : "scala.xml.pull.EvProcInstr.text", "link" : "scala\/xml\/pull\/EvProcInstr.html#text:String", "kind" : "val"}, {"label" : "target", "tail" : ": String", "member" : "scala.xml.pull.EvProcInstr.target", "link" : "scala\/xml\/pull\/EvProcInstr.html#target:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/pull\/EvProcInstr.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/pull\/EvProcInstr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/pull\/EvProcInstr.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/pull\/EvProcInstr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/pull\/EvProcInstr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/pull\/EvProcInstr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/pull\/EvProcInstr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/pull\/EvProcInstr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvProcInstr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvProcInstr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvProcInstr.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/pull\/EvProcInstr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/pull\/EvProcInstr.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/pull\/EvProcInstr.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/pull\/EvProcInstr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/pull\/EvProcInstr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/pull\/EvProcInstr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/pull\/EvProcInstr.html", "kind" : "case class"}, {"name" : "scala.xml.pull.EvText", "shortDescription" : "A text node was encountered.", "members_case class" : [{"member" : "scala.xml.pull.EvText#<init>", "error" : "unsupported entity"}, {"label" : "text", "tail" : ": String", "member" : "scala.xml.pull.EvText.text", "link" : "scala\/xml\/pull\/EvText.html#text:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/xml\/pull\/EvText.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/pull\/EvText.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/pull\/EvText.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/pull\/EvText.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/pull\/EvText.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/pull\/EvText.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/pull\/EvText.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/pull\/EvText.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvText.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvText.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/EvText.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/pull\/EvText.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/pull\/EvText.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/pull\/EvText.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/pull\/EvText.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/pull\/EvText.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/pull\/EvText.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/xml\/pull\/EvText.html", "kind" : "case class"}, {"name" : "scala.xml.pull.ProducerConsumerIterator", "trait" : "scala\/xml\/pull\/ProducerConsumerIterator.html", "kind" : "trait", "members_trait" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#GroupedIterator[B<:<?>]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "available", "tail" : "(): Boolean", "member" : "scala.xml.pull.ProducerConsumerIterator.available", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#available():Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): T", "member" : "scala.xml.pull.ProducerConsumerIterator.next", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#next():T", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scala.xml.pull.ProducerConsumerIterator.hasNext", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#hasNext:Boolean", "kind" : "def"}, {"label" : "produce", "tail" : "(x: T): Unit", "member" : "scala.xml.pull.ProducerConsumerIterator.produce", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#produce(x:T):Unit", "kind" : "def"}, {"label" : "interruptibly", "tail" : "(body: => A): Option[A]", "member" : "scala.xml.pull.ProducerConsumerIterator.interruptibly", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#interruptibly[A](body:=>A):Option[A]", "kind" : "def"}, {"label" : "MaxQueueSize", "tail" : ": Int", "member" : "scala.xml.pull.ProducerConsumerIterator.MaxQueueSize", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#MaxQueueSize:Int", "kind" : "val"}, {"label" : "seq", "tail" : "(): ProducerConsumerIterator.this.type", "member" : "scala.collection.Iterator.seq", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toString():String", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (T) => U): collection.Iterator[T]", "member" : "scala.collection.Iterator.tapEach", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: collection.Iterator[B], replaced: Int): collection.Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (collection.Iterator[T], collection.Iterator[T])", "member" : "scala.collection.Iterator.duplicate", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.Iterator[(T, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.IterableOnce[B], thisElem: A1, thatElem: B): collection.Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.Iterator[(T, B)]", "member" : "scala.collection.Iterator.zip", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): collection.Iterator[T]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): collection.Iterator[T]", "member" : "scala.collection.Iterator.slice", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (T) => Boolean): (collection.Iterator[T], collection.Iterator[T])", "member" : "scala.collection.Iterator.span", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) => Boolean): collection.Iterator[T]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): collection.Iterator[T]", "member" : "scala.collection.Iterator.drop", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) => Boolean): collection.Iterator[T]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): collection.Iterator[T]", "member" : "scala.collection.Iterator.take", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => collection.IterableOnce[B]): collection.Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => collection.IterableOnce[B]): collection.Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (T) => collection.IterableOnce[B]): collection.Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) => collection.IterableOnce[B]): collection.Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) => B): collection.Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (T) => B): collection.Iterator[T]", "member" : "scala.collection.Iterator.distinctBy", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): collection.Iterator[T]", "member" : "scala.collection.Iterator.distinct", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B]): collection.Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) => Boolean): collection.Iterator[T]", "member" : "scala.collection.Iterator.withFilter", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (T) => Boolean): collection.Iterator[T]", "member" : "scala.collection.Iterator.filterNot", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) => Boolean): collection.Iterator[T]", "member" : "scala.collection.Iterator.filter", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (T, B) => B): collection.Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, T) => B): collection.Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (T) => Boolean): (collection.Iterator[T], collection.Iterator[T])", "member" : "scala.collection.Iterator.partition", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): collection.BufferedIterator[T]", "member" : "scala.collection.Iterator.buffered", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[T]", "member" : "scala.collection.Iterator.nextOption", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[T]", "member" : "scala.collection.Iterator.iterator", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[T]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[T]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[T]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): collection.immutable.Seq[T]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[T, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[T]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[T]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[T]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[T, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (T, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, T) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[T, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (T) => B)(cmp: math.Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (T) => B)(cmp: math.Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (T) => B)(cmp: math.Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (T) => B)(cmp: math.Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[T]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): T", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (T, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, T) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (T, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, T) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (T, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, T) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (T, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, T) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (T) => Boolean): Option[T]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (T) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (collection.Iterator[T], collection.Iterator[T])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[T, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "EndOfStream", "tail" : ": T", "member" : "scala.xml.pull.ProducerConsumerIterator.EndOfStream", "link" : "scala\/xml\/pull\/ProducerConsumerIterator.html#EndOfStream:T", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "scala.xml.pull.XMLEvent", "trait" : "scala\/xml\/pull\/XMLEvent.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/pull\/XMLEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/pull\/XMLEvent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/pull\/XMLEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/pull\/XMLEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/pull\/XMLEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/pull\/XMLEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/pull\/XMLEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/XMLEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/XMLEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/XMLEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/pull\/XMLEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/pull\/XMLEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/xml\/pull\/XMLEvent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/pull\/XMLEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/pull\/XMLEvent.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/pull\/XMLEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/pull\/XMLEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/pull\/XMLEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/pull\/XMLEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "An XML event for pull parsing."}, {"name" : "scala.xml.pull.XMLEventReader", "shortDescription" : "Main entry point into creating an event-based XML parser.", "members_class" : [{"label" : "GroupedIterator", "tail" : "", "member" : "scala.collection.Iterator.GroupedIterator", "link" : "scala\/xml\/pull\/XMLEventReader.html#GroupedIterator[B>:A]extendsAbstractIterator[Seq[B]]", "kind" : "class"}, {"label" : "stop", "tail" : "(): Unit", "member" : "scala.xml.pull.XMLEventReader.stop", "link" : "scala\/xml\/pull\/XMLEventReader.html#stop():Unit", "kind" : "def"}, {"label" : "EndOfStream", "tail" : ": POISON", "member" : "scala.xml.pull.XMLEventReader.EndOfStream", "link" : "scala\/xml\/pull\/XMLEventReader.html#EndOfStream:XMLEventReader.this.POISON.type", "kind" : "val"}, {"label" : "POISON", "tail" : "", "member" : "scala.xml.pull.XMLEventReader.POISON", "link" : "scala\/xml\/pull\/XMLEventReader.html#POISON", "kind" : "object"}, {"label" : "MaxQueueSize", "tail" : ": Int", "member" : "scala.xml.pull.XMLEventReader.MaxQueueSize", "link" : "scala\/xml\/pull\/XMLEventReader.html#MaxQueueSize:Int", "kind" : "val"}, {"label" : "preserveWS", "tail" : ": Boolean", "member" : "scala.xml.pull.XMLEventReader.preserveWS", "link" : "scala\/xml\/pull\/XMLEventReader.html#preserveWS:Boolean", "kind" : "val"}, {"member" : "scala.xml.pull.XMLEventReader#<init>", "error" : "unsupported entity"}, {"label" : "available", "tail" : "(): Boolean", "member" : "scala.xml.pull.ProducerConsumerIterator.available", "link" : "scala\/xml\/pull\/XMLEventReader.html#available():Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): XMLEvent", "member" : "scala.xml.pull.ProducerConsumerIterator.next", "link" : "scala\/xml\/pull\/XMLEventReader.html#next():T", "kind" : "def"}, {"label" : "hasNext", "tail" : "(): Boolean", "member" : "scala.xml.pull.ProducerConsumerIterator.hasNext", "link" : "scala\/xml\/pull\/XMLEventReader.html#hasNext:Boolean", "kind" : "def"}, {"label" : "produce", "tail" : "(x: XMLEvent): Unit", "member" : "scala.xml.pull.ProducerConsumerIterator.produce", "link" : "scala\/xml\/pull\/XMLEventReader.html#produce(x:T):Unit", "kind" : "def"}, {"label" : "interruptibly", "tail" : "(body: => A): Option[A]", "member" : "scala.xml.pull.ProducerConsumerIterator.interruptibly", "link" : "scala\/xml\/pull\/XMLEventReader.html#interruptibly[A](body:=>A):Option[A]", "kind" : "def"}, {"label" : "seq", "tail" : "(): XMLEventReader.this.type", "member" : "scala.collection.Iterator.seq", "link" : "scala\/xml\/pull\/XMLEventReader.html#seq:Iterator.this.type", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.Iterator.toString", "link" : "scala\/xml\/pull\/XMLEventReader.html#toString():String", "kind" : "def"}, {"label" : "tapEach", "tail" : "(f: (XMLEvent) => U): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.tapEach", "link" : "scala\/xml\/pull\/XMLEventReader.html#tapEach[U](f:A=>U):Iterator[A]", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patchElems: collection.Iterator[B], replaced: Int): collection.Iterator[B]", "member" : "scala.collection.Iterator.patch", "link" : "scala\/xml\/pull\/XMLEventReader.html#patch[B>:A](from:Int,patchElems:Iterator[B],replaced:Int):Iterator[B]", "kind" : "def"}, {"label" : "duplicate", "tail" : "(): (collection.Iterator[XMLEvent], collection.Iterator[XMLEvent])", "member" : "scala.collection.Iterator.duplicate", "link" : "scala\/xml\/pull\/XMLEventReader.html#duplicate:(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: collection.IterableOnce[B]): Boolean", "member" : "scala.collection.Iterator.sameElements", "link" : "scala\/xml\/pull\/XMLEventReader.html#sameElements[B>:A](that:scala.collection.IterableOnce[B]):Boolean", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(): collection.Iterator[(XMLEvent, Int)]", "member" : "scala.collection.Iterator.zipWithIndex", "link" : "scala\/xml\/pull\/XMLEventReader.html#zipWithIndex:Iterator[(A,Int)]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: collection.IterableOnce[B], thisElem: A1, thatElem: B): collection.Iterator[(A1, B)]", "member" : "scala.collection.Iterator.zipAll", "link" : "scala\/xml\/pull\/XMLEventReader.html#zipAll[A1>:A,B](that:scala.collection.IterableOnce[B],thisElem:A1,thatElem:B):Iterator[(A1,B)]", "kind" : "def"}, {"label" : "zip", "tail" : "(that: collection.IterableOnce[B]): collection.Iterator[(XMLEvent, B)]", "member" : "scala.collection.Iterator.zip", "link" : "scala\/xml\/pull\/XMLEventReader.html#zip[B](that:scala.collection.IterableOnce[B]):Iterator[(A,B)]", "kind" : "def"}, {"label" : "sliceIterator", "tail" : "(from: Int, until: Int): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.sliceIterator", "link" : "scala\/xml\/pull\/XMLEventReader.html#sliceIterator(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.slice", "link" : "scala\/xml\/pull\/XMLEventReader.html#slice(from:Int,until:Int):Iterator[A]", "kind" : "def"}, {"label" : "span", "tail" : "(p: (XMLEvent) => Boolean): (collection.Iterator[XMLEvent], collection.Iterator[XMLEvent])", "member" : "scala.collection.Iterator.span", "link" : "scala\/xml\/pull\/XMLEventReader.html#span(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (XMLEvent) => Boolean): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.dropWhile", "link" : "scala\/xml\/pull\/XMLEventReader.html#dropWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.drop", "link" : "scala\/xml\/pull\/XMLEventReader.html#drop(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (XMLEvent) => Boolean): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.takeWhile", "link" : "scala\/xml\/pull\/XMLEventReader.html#takeWhile(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.take", "link" : "scala\/xml\/pull\/XMLEventReader.html#take(n:Int):Iterator[A]", "kind" : "def"}, {"label" : "++", "tail" : "(xs: => collection.IterableOnce[B]): collection.Iterator[B]", "member" : "scala.collection.Iterator.++", "link" : "scala\/xml\/pull\/XMLEventReader.html#++[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "final def"}, {"label" : "concat", "tail" : "(xs: => collection.IterableOnce[B]): collection.Iterator[B]", "member" : "scala.collection.Iterator.concat", "link" : "scala\/xml\/pull\/XMLEventReader.html#concat[B>:A](xs:=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatten", "tail" : "(ev: (XMLEvent) => collection.IterableOnce[B]): collection.Iterator[B]", "member" : "scala.collection.Iterator.flatten", "link" : "scala\/xml\/pull\/XMLEventReader.html#flatten[B](implicitev:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (XMLEvent) => collection.IterableOnce[B]): collection.Iterator[B]", "member" : "scala.collection.Iterator.flatMap", "link" : "scala\/xml\/pull\/XMLEventReader.html#flatMap[B](f:A=>scala.collection.IterableOnce[B]):Iterator[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (XMLEvent) => B): collection.Iterator[B]", "member" : "scala.collection.Iterator.map", "link" : "scala\/xml\/pull\/XMLEventReader.html#map[B](f:A=>B):Iterator[B]", "kind" : "def"}, {"label" : "distinctBy", "tail" : "(f: (XMLEvent) => B): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.distinctBy", "link" : "scala\/xml\/pull\/XMLEventReader.html#distinctBy[B](f:A=>B):Iterator[A]", "kind" : "def"}, {"label" : "distinct", "tail" : "(): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.distinct", "link" : "scala\/xml\/pull\/XMLEventReader.html#distinct:Iterator[A]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[XMLEvent, B]): collection.Iterator[B]", "member" : "scala.collection.Iterator.collect", "link" : "scala\/xml\/pull\/XMLEventReader.html#collect[B](pf:PartialFunction[A,B]):Iterator[B]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (XMLEvent) => Boolean): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.withFilter", "link" : "scala\/xml\/pull\/XMLEventReader.html#withFilter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (XMLEvent) => Boolean): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.filterNot", "link" : "scala\/xml\/pull\/XMLEventReader.html#filterNot(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (XMLEvent) => Boolean): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.filter", "link" : "scala\/xml\/pull\/XMLEventReader.html#filter(p:A=>Boolean):Iterator[A]", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.isEmpty", "link" : "scala\/xml\/pull\/XMLEventReader.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.Iterator.length", "link" : "scala\/xml\/pull\/XMLEventReader.html#length:Int", "kind" : "final def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scala\/xml\/pull\/XMLEventReader.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.Iterator.indexOf", "link" : "scala\/xml\/pull\/XMLEventReader.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (XMLEvent) => Boolean, from: Int): Int", "member" : "scala.collection.Iterator.indexWhere", "link" : "scala\/xml\/pull\/XMLEventReader.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (XMLEvent, B) => B): collection.Iterator[B]", "member" : "scala.collection.Iterator.scanRight", "link" : "scala\/xml\/pull\/XMLEventReader.html#scanRight[B](z:B)(op:(A,B)=>B):Iterator[B]", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, XMLEvent) => B): collection.Iterator[B]", "member" : "scala.collection.Iterator.scanLeft", "link" : "scala\/xml\/pull\/XMLEventReader.html#scanLeft[B](z:B)(op:(B,A)=>B):Iterator[B]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.sliding", "link" : "scala\/xml\/pull\/XMLEventReader.html#sliding[B>:A](size:Int,step:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): GroupedIterator[B]", "member" : "scala.collection.Iterator.grouped", "link" : "scala\/xml\/pull\/XMLEventReader.html#grouped[B>:A](size:Int):Iterator.this.GroupedIterator[B]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (XMLEvent) => Boolean): (collection.Iterator[XMLEvent], collection.Iterator[XMLEvent])", "member" : "scala.collection.Iterator.partition", "link" : "scala\/xml\/pull\/XMLEventReader.html#partition(p:A=>Boolean):(Iterator[A],Iterator[A])", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B): collection.Iterator[B]", "member" : "scala.collection.Iterator.padTo", "link" : "scala\/xml\/pull\/XMLEventReader.html#padTo[B>:A](len:Int,elem:B):Iterator[B]", "kind" : "def"}, {"label" : "buffered", "tail" : "(): collection.BufferedIterator[XMLEvent]", "member" : "scala.collection.Iterator.buffered", "link" : "scala\/xml\/pull\/XMLEventReader.html#buffered:scala.collection.BufferedIterator[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: Any): Boolean", "member" : "scala.collection.Iterator.contains", "link" : "scala\/xml\/pull\/XMLEventReader.html#contains(elem:Any):Boolean", "kind" : "def"}, {"label" : "nextOption", "tail" : "(): Option[XMLEvent]", "member" : "scala.collection.Iterator.nextOption", "link" : "scala\/xml\/pull\/XMLEventReader.html#nextOption():Option[A]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[XMLEvent]", "member" : "scala.collection.Iterator.iterator", "link" : "scala\/xml\/pull\/XMLEventReader.html#iterator:Iterator[A]", "kind" : "final def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.Iterator.hasDefiniteSize", "link" : "scala\/xml\/pull\/XMLEventReader.html#hasDefiniteSize:Boolean", "kind" : "final def"}, {"label" : "reversed", "tail" : "(): collection.Iterable[XMLEvent]", "member" : "scala.collection.IterableOnceOps.reversed", "link" : "scala\/xml\/pull\/XMLEventReader.html#reversed:Iterable[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.IterableOnceOps.toArray", "link" : "scala\/xml\/pull\/XMLEventReader.html#toArray[B>:A](implicitevidence$2:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.IterableOnceOps.toBuffer", "link" : "scala\/xml\/pull\/XMLEventReader.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "final def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[XMLEvent]", "member" : "scala.collection.IterableOnceOps.toStream", "link" : "scala\/xml\/pull\/XMLEventReader.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "final def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[XMLEvent]", "member" : "scala.collection.IterableOnceOps.toIndexedSeq", "link" : "scala\/xml\/pull\/XMLEventReader.html#toIndexedSeq:IndexedSeq[A]", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): collection.immutable.Seq[XMLEvent]", "member" : "scala.collection.IterableOnceOps.toSeq", "link" : "scala\/xml\/pull\/XMLEventReader.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.IterableOnceOps.toSet", "link" : "scala\/xml\/pull\/XMLEventReader.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[XMLEvent, (K, V)]): Map[K, V]", "member" : "scala.collection.IterableOnceOps.toMap", "link" : "scala\/xml\/pull\/XMLEventReader.html#toMap[K,V](implicitev:A<:<(K,V)):scala.collection.immutable.Map[K,V]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): collection.immutable.Vector[XMLEvent]", "member" : "scala.collection.IterableOnceOps.toVector", "link" : "scala\/xml\/pull\/XMLEventReader.html#toVector:scala.collection.immutable.Vector[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): collection.immutable.List[XMLEvent]", "member" : "scala.collection.IterableOnceOps.toList", "link" : "scala\/xml\/pull\/XMLEventReader.html#toList:List[A]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[XMLEvent]", "member" : "scala.collection.IterableOnceOps.toIterator", "link" : "scala\/xml\/pull\/XMLEventReader.html#toIterator:Iterator[A]", "kind" : "final def"}, {"label" : "to", "tail" : "(factory: Factory[XMLEvent, C1]): C1", "member" : "scala.collection.IterableOnceOps.to", "link" : "scala\/xml\/pull\/XMLEventReader.html#to[C1](factory:scala.collection.Factory[A,C1]):C1", "kind" : "def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/pull\/XMLEventReader.html#addString(b:StringBuilder):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, sep: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/pull\/XMLEventReader.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "final def"}, {"label" : "addString", "tail" : "(b: collection.mutable.StringBuilder, start: String, sep: String, end: String): collection.mutable.StringBuilder", "member" : "scala.collection.IterableOnceOps.addString", "link" : "scala\/xml\/pull\/XMLEventReader.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/pull\/XMLEventReader.html#mkString:String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/pull\/XMLEventReader.html#mkString(sep:String):String", "kind" : "final def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.IterableOnceOps.mkString", "link" : "scala\/xml\/pull\/XMLEventReader.html#mkString(start:String,sep:String,end:String):String", "kind" : "final def"}, {"label" : "corresponds", "tail" : "(that: collection.IterableOnce[B])(p: (XMLEvent, B) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.corresponds", "link" : "scala\/xml\/pull\/XMLEventReader.html#corresponds[B](that:scala.collection.IterableOnce[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: => B)(seqop: (B, XMLEvent) => B, combop: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.aggregate", "link" : "scala\/xml\/pull\/XMLEventReader.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[XMLEvent, B]): Option[B]", "member" : "scala.collection.IterableOnceOps.collectFirst", "link" : "scala\/xml\/pull\/XMLEventReader.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "minByOption", "tail" : "(f: (XMLEvent) => B)(cmp: math.Ordering[B]): Option[XMLEvent]", "member" : "scala.collection.IterableOnceOps.minByOption", "link" : "scala\/xml\/pull\/XMLEventReader.html#minByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (XMLEvent) => B)(cmp: math.Ordering[B]): XMLEvent", "member" : "scala.collection.IterableOnceOps.minBy", "link" : "scala\/xml\/pull\/XMLEventReader.html#minBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxByOption", "tail" : "(f: (XMLEvent) => B)(cmp: math.Ordering[B]): Option[XMLEvent]", "member" : "scala.collection.IterableOnceOps.maxByOption", "link" : "scala\/xml\/pull\/XMLEventReader.html#maxByOption[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (XMLEvent) => B)(cmp: math.Ordering[B]): XMLEvent", "member" : "scala.collection.IterableOnceOps.maxBy", "link" : "scala\/xml\/pull\/XMLEventReader.html#maxBy[B](f:A=>B)(implicitcmp:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "maxOption", "tail" : "(ord: math.Ordering[B]): Option[XMLEvent]", "member" : "scala.collection.IterableOnceOps.maxOption", "link" : "scala\/xml\/pull\/XMLEventReader.html#maxOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "max", "tail" : "(ord: math.Ordering[B]): XMLEvent", "member" : "scala.collection.IterableOnceOps.max", "link" : "scala\/xml\/pull\/XMLEventReader.html#max[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "minOption", "tail" : "(ord: math.Ordering[B]): Option[XMLEvent]", "member" : "scala.collection.IterableOnceOps.minOption", "link" : "scala\/xml\/pull\/XMLEventReader.html#minOption[B>:A](implicitord:scala.math.Ordering[B]):Option[A]", "kind" : "def"}, {"label" : "min", "tail" : "(ord: math.Ordering[B]): XMLEvent", "member" : "scala.collection.IterableOnceOps.min", "link" : "scala\/xml\/pull\/XMLEventReader.html#min[B>:A](implicitord:scala.math.Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.product", "link" : "scala\/xml\/pull\/XMLEventReader.html#product[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: math.Numeric[B]): B", "member" : "scala.collection.IterableOnceOps.sum", "link" : "scala\/xml\/pull\/XMLEventReader.html#sum[B>:A](implicitnum:scala.math.Numeric[B]):B", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/pull\/XMLEventReader.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/pull\/XMLEventReader.html#copyToArray[B>:A](xs:Array[B],start:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Int", "member" : "scala.collection.IterableOnceOps.copyToArray", "link" : "scala\/xml\/pull\/XMLEventReader.html#copyToArray[B>:A](xs:Array[B]):Int", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.IterableOnceOps.copyToBuffer", "link" : "scala\/xml\/pull\/XMLEventReader.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "final def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.IterableOnceOps.size", "link" : "scala\/xml\/pull\/XMLEventReader.html#size:Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.nonEmpty", "link" : "scala\/xml\/pull\/XMLEventReader.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (XMLEvent, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceRightOption", "link" : "scala\/xml\/pull\/XMLEventReader.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, XMLEvent) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceLeftOption", "link" : "scala\/xml\/pull\/XMLEventReader.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (XMLEvent, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduceRight", "link" : "scala\/xml\/pull\/XMLEventReader.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, XMLEvent) => B): B", "member" : "scala.collection.IterableOnceOps.reduceLeft", "link" : "scala\/xml\/pull\/XMLEventReader.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (B, B) => B): Option[B]", "member" : "scala.collection.IterableOnceOps.reduceOption", "link" : "scala\/xml\/pull\/XMLEventReader.html#reduceOption[B>:A](op:(B,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (B, B) => B): B", "member" : "scala.collection.IterableOnceOps.reduce", "link" : "scala\/xml\/pull\/XMLEventReader.html#reduce[B>:A](op:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) => A1): A1", "member" : "scala.collection.IterableOnceOps.fold", "link" : "scala\/xml\/pull\/XMLEventReader.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (XMLEvent, B) => B): B", "member" : "scala.collection.IterableOnceOps.:\\", "link" : "scala\/xml\/pull\/XMLEventReader.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "final def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, XMLEvent) => B): B", "member" : "scala.collection.IterableOnceOps.\/:", "link" : "scala\/xml\/pull\/XMLEventReader.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "final def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (XMLEvent, B) => B): B", "member" : "scala.collection.IterableOnceOps.foldRight", "link" : "scala\/xml\/pull\/XMLEventReader.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, XMLEvent) => B): B", "member" : "scala.collection.IterableOnceOps.foldLeft", "link" : "scala\/xml\/pull\/XMLEventReader.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (XMLEvent) => Boolean): Option[XMLEvent]", "member" : "scala.collection.IterableOnceOps.find", "link" : "scala\/xml\/pull\/XMLEventReader.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (XMLEvent) => Boolean): Int", "member" : "scala.collection.IterableOnceOps.count", "link" : "scala\/xml\/pull\/XMLEventReader.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (XMLEvent) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.exists", "link" : "scala\/xml\/pull\/XMLEventReader.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (XMLEvent) => Boolean): Boolean", "member" : "scala.collection.IterableOnceOps.forall", "link" : "scala\/xml\/pull\/XMLEventReader.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (XMLEvent) => U): Unit", "member" : "scala.collection.IterableOnceOps.foreach", "link" : "scala\/xml\/pull\/XMLEventReader.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.IterableOnceOps.isTraversableAgain", "link" : "scala\/xml\/pull\/XMLEventReader.html#isTraversableAgain:Boolean", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (collection.Iterator[XMLEvent], collection.Iterator[XMLEvent])", "member" : "scala.collection.IterableOnceOps.splitAt", "link" : "scala\/xml\/pull\/XMLEventReader.html#splitAt(n:Int):(C,C)", "kind" : "def"}, {"label" : "knownSize", "tail" : "(): Int", "member" : "scala.collection.IterableOnce.knownSize", "link" : "scala\/xml\/pull\/XMLEventReader.html#knownSize:Int", "kind" : "def"}, {"label" : "stepper", "tail" : "(shape: StepperShape[XMLEvent, S]): S", "member" : "scala.collection.IterableOnce.stepper", "link" : "scala\/xml\/pull\/XMLEventReader.html#stepper[S<:scala.collection.Stepper[_]](implicitshape:scala.collection.StepperShape[A,S]):S", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/xml\/pull\/XMLEventReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/xml\/pull\/XMLEventReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/xml\/pull\/XMLEventReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/xml\/pull\/XMLEventReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/xml\/pull\/XMLEventReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/xml\/pull\/XMLEventReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/xml\/pull\/XMLEventReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/XMLEventReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/XMLEventReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/xml\/pull\/XMLEventReader.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/xml\/pull\/XMLEventReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/xml\/pull\/XMLEventReader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/xml\/pull\/XMLEventReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/xml\/pull\/XMLEventReader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/xml\/pull\/XMLEventReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/xml\/pull\/XMLEventReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/xml\/pull\/XMLEventReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/xml\/pull\/XMLEventReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/xml\/pull\/XMLEventReader.html", "kind" : "class"}]};